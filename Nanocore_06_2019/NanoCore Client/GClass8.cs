using System;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using NanoCore;

// Token: 0x02000025 RID: 37
public sealed class GClass8 : IClientReadOnlyNameObjectCollection
{
	// Token: 0x0600010D RID: 269 RVA: 0x00002701 File Offset: 0x00000901
	public GClass8(Dictionary<string, object> dictionary_1)
	{
		this.dictionary_0 = dictionary_1;
	}

	// Token: 0x0600010E RID: 270 RVA: 0x00007360 File Offset: 0x00005560
	public object GetValue(string string_0, object object_0)
	{
		Dictionary<string, object> obj = this.dictionary_0;
		object result;
		lock (obj)
		{
			if (this.dictionary_0.ContainsKey(string_0))
			{
				result = this.dictionary_0[string_0];
			}
			else
			{
				result = object_0;
			}
		}
		return result;
	}

	// Token: 0x0600010F RID: 271 RVA: 0x000073B4 File Offset: 0x000055B4
	public void method_0(string string_0, object object_0)
	{
		Dictionary<string, object> obj = this.dictionary_0;
		lock (obj)
		{
			if (this.dictionary_0.ContainsKey(string_0))
			{
				if (!this.dictionary_0[string_0].Equals(RuntimeHelpers.GetObjectValue(object_0)))
				{
					this.dictionary_0[string_0] = RuntimeHelpers.GetObjectValue(object_0);
				}
			}
			else
			{
				this.dictionary_0.Add(string_0, RuntimeHelpers.GetObjectValue(object_0));
			}
		}
	}

	// Token: 0x06000110 RID: 272 RVA: 0x00007438 File Offset: 0x00005638
	public bool EntryExists(string string_0)
	{
		Dictionary<string, object> obj = this.dictionary_0;
		bool result;
		lock (obj)
		{
			result = this.dictionary_0.ContainsKey(string_0);
		}
		return result;
	}

	// Token: 0x06000111 RID: 273 RVA: 0x0000747C File Offset: 0x0000567C
	public KeyValuePair<string, object>[] GetEntries()
	{
		Dictionary<string, object> obj = this.dictionary_0;
		KeyValuePair<string, object>[] result;
		lock (obj)
		{
			List<KeyValuePair<string, object>> list = new List<KeyValuePair<string, object>>();
			Dictionary<string, object>.Enumerator enumerator = this.dictionary_0.GetEnumerator();
			while (enumerator.MoveNext())
			{
				List<KeyValuePair<string, object>> list2 = list;
				KeyValuePair<string, object> keyValuePair = enumerator.Current;
				string key = keyValuePair.Key;
				KeyValuePair<string, object> keyValuePair2 = enumerator.Current;
				KeyValuePair<string, object> item = new KeyValuePair<string, object>(key, RuntimeHelpers.GetObjectValue(keyValuePair2.Value));
				list2.Add(item);
			}
			result = list.ToArray();
		}
		return result;
	}

	// Token: 0x0400005E RID: 94
	private Dictionary<string, object> dictionary_0;
}
