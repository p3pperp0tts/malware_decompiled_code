using System;
using Microsoft.VisualBasic.CompilerServices;

// Token: 0x02000022 RID: 34
[StandardModule]
internal sealed class Class20
{
	// Token: 0x060000FC RID: 252 RVA: 0x00006E4C File Offset: 0x0000504C
	public static void smethod_0(GStruct2 gstruct2_0)
	{
		switch (gstruct2_0.byte_1)
		{
		case 1:
			Class20.smethod_1();
			break;
		case 2:
			Class20.smethod_3(gstruct2_0.object_0);
			break;
		case 4:
			Class20.smethod_2(gstruct2_0.guid_0, gstruct2_0.object_0);
			break;
		case 6:
			Class20.smethod_4();
			break;
		case 7:
			Class20.smethod_5(gstruct2_0.object_0);
			break;
		}
	}

	// Token: 0x060000FD RID: 253 RVA: 0x000026D8 File Offset: 0x000008D8
	public static void smethod_1()
	{
		Class8.smethod_75(true);
	}

	// Token: 0x060000FE RID: 254 RVA: 0x00006EC4 File Offset: 0x000050C4
	public static void smethod_2(Guid guid_0, object[] object_0)
	{
		GClass2 gclass = Class23.smethod_1(guid_0);
		if (gclass != null)
		{
			try
			{
				gclass.gclass3_0.method_7(null, object_0);
				return;
			}
			catch (Exception exception_)
			{
				Class8.smethod_85(gclass.gclass3_0, exception_, "ReadPacket []");
				return;
			}
		}
		throw new Exception(string.Format("No instance of plugin '{0}' could be found.", guid_0));
	}

	// Token: 0x060000FF RID: 255 RVA: 0x00006F30 File Offset: 0x00005130
	public static void smethod_3(object[] object_0)
	{
		string text = (string)object_0[0];
		Guid guid_ = (Guid)object_0[1];
		Guid guid = (Guid)object_0[2];
		if (Class8.dictionary_2.ContainsKey(text))
		{
			return;
		}
		Client client = Class8.smethod_39();
		Class8.dictionary_2.Add(text, client);
		GClass3 gclass3_ = null;
		if (!(guid == Guid.Empty))
		{
			gclass3_ = Class23.smethod_1(guid).gclass3_0;
		}
		client.method_31(new GClass0());
		client.method_30().method_0(guid_, text, gclass3_);
		client.method_4(new Client.GDelegate4(Class8.smethod_78));
		client.method_6(new Client.GDelegate2(Class8.smethod_77));
		client.method_2(new Client.GDelegate7(Class8.smethod_79));
		client.method_14(new Client.GDelegate9(Class8.smethod_81));
		client.method_44(Class8.smethod_65(), Class24.smethod_6());
	}

	// Token: 0x06000100 RID: 256 RVA: 0x000026E0 File Offset: 0x000008E0
	public static void smethod_4()
	{
		Class8.dateTime_2 = DateTime.Now;
	}

	// Token: 0x06000101 RID: 257 RVA: 0x00007010 File Offset: 0x00005210
	public static void smethod_5(object[] object_0)
	{
		string string_ = (string)object_0[0];
		if ((bool)object_0[1])
		{
			try
			{
				string text = Class8.smethod_61(string_);
				if (!string.IsNullOrEmpty(text))
				{
					Class20.smethod_8(text);
				}
			}
			catch (Exception exception_)
			{
				Class8.smethod_62(string_);
				Class8.smethod_86(exception_, "HandleBaseCommandExceptionHash");
			}
		}
		if (Class8.queue_0.Count != 0)
		{
			Class20.smethod_7(Class8.queue_0.Dequeue());
		}
	}

	// Token: 0x06000102 RID: 258 RVA: 0x00007098 File Offset: 0x00005298
	public static void smethod_6(Guid guid_0, string string_0, string string_1, Version version_0)
	{
		Class8.smethod_88(Class8.client_0, true, CommandType.BaseCommand, 0, new object[]
		{
			guid_0,
			string_0,
			string_1,
			version_0.ToString()
		});
	}

	// Token: 0x06000103 RID: 259 RVA: 0x000070D4 File Offset: 0x000052D4
	public static void smethod_7(string string_0)
	{
		Class8.smethod_88(Class8.client_0, true, CommandType.BaseCommand, 7, new object[]
		{
			string_0
		});
	}

	// Token: 0x06000104 RID: 260 RVA: 0x000070FC File Offset: 0x000052FC
	public static void smethod_8(string string_0)
	{
		Class8.smethod_88(Class8.client_0, true, CommandType.BaseCommand, 8, new object[]
		{
			string_0
		});
	}

	// Token: 0x06000105 RID: 261 RVA: 0x000026EC File Offset: 0x000008EC
	public static void smethod_9()
	{
		Class8.smethod_88(Class8.client_0, true, CommandType.BaseCommand, 6, new object[0]);
	}
}
