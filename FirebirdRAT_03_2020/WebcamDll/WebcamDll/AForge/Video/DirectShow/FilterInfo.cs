using System;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.ComTypes;
using AForge.Video.DirectShow.Internals;

namespace AForge.Video.DirectShow
{
	// Token: 0x0200000A RID: 10
	public class FilterInfo : IComparable
	{
		// Token: 0x17000002 RID: 2
		// (get) Token: 0x06000017 RID: 23 RVA: 0x00002220 File Offset: 0x00000420
		// (set) Token: 0x06000018 RID: 24 RVA: 0x00002228 File Offset: 0x00000428
		public string Name { get; private set; }

		// Token: 0x17000003 RID: 3
		// (get) Token: 0x06000019 RID: 25 RVA: 0x00002231 File Offset: 0x00000431
		// (set) Token: 0x0600001A RID: 26 RVA: 0x00002239 File Offset: 0x00000439
		public string MonikerString { get; private set; }

		// Token: 0x0600001B RID: 27 RVA: 0x00002242 File Offset: 0x00000442
		public FilterInfo(string monikerString)
		{
			this.MonikerString = monikerString;
			this.Name = this.GetName(monikerString);
		}

		// Token: 0x0600001C RID: 28 RVA: 0x0000225E File Offset: 0x0000045E
		internal FilterInfo(IMoniker moniker)
		{
			this.MonikerString = this.GetMonikerString(moniker);
			this.Name = this.GetName(moniker);
		}

		// Token: 0x0600001D RID: 29 RVA: 0x00002280 File Offset: 0x00000480
		public int CompareTo(object value)
		{
			FilterInfo filterInfo = (FilterInfo)value;
			if (filterInfo == null)
			{
				return 1;
			}
			return this.Name.CompareTo(filterInfo.Name);
		}

		// Token: 0x0600001E RID: 30 RVA: 0x000022AC File Offset: 0x000004AC
		public static object CreateFilter(string filterMoniker)
		{
			object result = null;
			IBindCtx bindCtx = null;
			IMoniker moniker = null;
			int num = 0;
			if (Win32.CreateBindCtx(0, out bindCtx) == 0)
			{
				if (Win32.MkParseDisplayName(bindCtx, filterMoniker, ref num, out moniker) == 0)
				{
					Guid guid = typeof(IBaseFilter).GUID;
					moniker.BindToObject(null, null, ref guid, out result);
					Marshal.ReleaseComObject(moniker);
				}
				Marshal.ReleaseComObject(bindCtx);
			}
			return result;
		}

		// Token: 0x0600001F RID: 31 RVA: 0x00002304 File Offset: 0x00000504
		private string GetMonikerString(IMoniker moniker)
		{
			string result;
			moniker.GetDisplayName(null, null, out result);
			return result;
		}

		// Token: 0x06000020 RID: 32 RVA: 0x0000231C File Offset: 0x0000051C
		private string GetName(IMoniker moniker)
		{
			object obj = null;
			string result;
			try
			{
				Guid guid = typeof(IPropertyBag).GUID;
				moniker.BindToStorage(null, null, ref guid, out obj);
				IPropertyBag propertyBag = (IPropertyBag)obj;
				object obj2 = "";
				int num = propertyBag.Read("FriendlyName", ref obj2, IntPtr.Zero);
				if (num != 0)
				{
					Marshal.ThrowExceptionForHR(num);
				}
				string text = (string)obj2;
				if (text == null || text.Length < 1)
				{
					throw new ApplicationException();
				}
				result = text;
			}
			catch (Exception)
			{
				result = "";
			}
			finally
			{
				if (obj != null)
				{
					Marshal.ReleaseComObject(obj);
					obj = null;
				}
			}
			return result;
		}

		// Token: 0x06000021 RID: 33 RVA: 0x000023C8 File Offset: 0x000005C8
		private string GetName(string monikerString)
		{
			IBindCtx bindCtx = null;
			IMoniker moniker = null;
			string result = "";
			int num = 0;
			if (Win32.CreateBindCtx(0, out bindCtx) == 0)
			{
				if (Win32.MkParseDisplayName(bindCtx, monikerString, ref num, out moniker) == 0)
				{
					result = this.GetName(moniker);
					Marshal.ReleaseComObject(moniker);
					moniker = null;
				}
				Marshal.ReleaseComObject(bindCtx);
				bindCtx = null;
			}
			return result;
		}
	}
}
