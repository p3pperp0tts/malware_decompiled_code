using System;
using System.IO;
using System.Reflection;
using System.Security.Cryptography;
using System.Text;
using Microsoft.VisualBasic.CompilerServices;

// Token: 0x0200002E RID: 46
[StandardModule]
internal sealed class Class27
{
	// Token: 0x0600014C RID: 332 RVA: 0x00008754 File Offset: 0x00006954
	public static Type smethod_0(byte[] byte_0, Type[] type_0, Type[] type_1)
	{
		Assembly assembly = Assembly.Load(byte_0);
		foreach (Type type in assembly.GetTypes())
		{
			foreach (Type value in type.GetInterfaces())
			{
				if (Array.IndexOf<Type>(type_0, value) != -1)
				{
					return type;
				}
			}
			ConstructorInfo[] constructors = type.GetConstructors();
			if (constructors.Length == 1)
			{
				foreach (ParameterInfo parameterInfo in constructors[0].GetParameters())
				{
					if (Array.IndexOf<Type>(type_1, parameterInfo.ParameterType) != -1)
					{
						return type;
					}
				}
			}
		}
		return null;
	}

	// Token: 0x0600014D RID: 333 RVA: 0x00008800 File Offset: 0x00006A00
	public static byte[] smethod_1(string string_1)
	{
		MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
		return md5CryptoServiceProvider.ComputeHash(Encoding.UTF8.GetBytes(string_1));
	}

	// Token: 0x0600014E RID: 334 RVA: 0x00008824 File Offset: 0x00006A24
	public static byte[] smethod_2(byte[] byte_0)
	{
		MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
		return md5CryptoServiceProvider.ComputeHash(byte_0);
	}

	// Token: 0x0600014F RID: 335 RVA: 0x00008840 File Offset: 0x00006A40
	public static string smethod_3(Stream stream_0)
	{
		MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
		return BitConverter.ToString(md5CryptoServiceProvider.ComputeHash(stream_0)).Replace("-", string.Empty);
	}

	// Token: 0x06000150 RID: 336 RVA: 0x00008870 File Offset: 0x00006A70
	public static string smethod_4(Stream stream_0, int int_0, long long_0)
	{
		byte[] array = new byte[int_0 - 1 + 1];
		MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
		stream_0.Position = 0L;
		int num2;
		do
		{
			long num;
			int count = (int)Math.Min((long)array.Length, long_0 - num);
			num2 = stream_0.Read(array, 0, count);
			md5CryptoServiceProvider.TransformBlock(array, 0, num2, null, 0);
			num += (long)num2;
		}
		while (num2 != 0);
		md5CryptoServiceProvider.TransformFinalBlock(new byte[0], 0, 0);
		return BitConverter.ToString(md5CryptoServiceProvider.Hash).Replace("-", string.Empty);
	}

	// Token: 0x04000076 RID: 118
	public static string string_0 = "522D4B77-C8AA-4E06-9D54-CF406F661572";
}
