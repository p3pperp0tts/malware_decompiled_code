using System;
using System.Collections.Generic;
using Microsoft.VisualBasic.CompilerServices;

// Token: 0x02000007 RID: 7
[StandardModule]
internal sealed class Class5
{
	// Token: 0x0600001A RID: 26 RVA: 0x00003088 File Offset: 0x00001288
	public static void smethod_0(GStruct2 gstruct2_0)
	{
		switch (gstruct2_0.byte_1)
		{
		case 0:
			Class5.smethod_1(gstruct2_0.object_0);
			break;
		case 1:
			Class5.smethod_2(gstruct2_0.object_0);
			break;
		case 2:
			Class5.smethod_3(gstruct2_0.object_0);
			break;
		case 3:
			Class5.smethod_4(gstruct2_0.object_0);
			break;
		}
	}

	// Token: 0x0600001B RID: 27 RVA: 0x000030EC File Offset: 0x000012EC
	public static void smethod_1(object[] object_0)
	{
		Class5.bool_1 = false;
		Class8.int_1 = 0;
		if (Class8.queue_0.Count != 0)
		{
			Class20.smethod_7(Class8.queue_0.Dequeue());
		}
		byte[] byte_ = (byte[])object_0[0];
		bool bool_ = Class8.byte_1 == null || !Class26.smethod_5(Class8.byte_0, byte_);
		Class5.smethod_5(bool_);
	}

	// Token: 0x0600001C RID: 28 RVA: 0x0000314C File Offset: 0x0000134C
	public static void smethod_2(object[] object_0)
	{
		DateTime dateTime_ = (DateTime)object_0[0];
		byte[] byte_ = (byte[])object_0[1];
		Class8.dateTime_0 = dateTime_;
		Class8.byte_1 = byte_;
		Class8.byte_0 = Class27.smethod_2(Class8.byte_1);
		Class8.smethod_9();
		Class5.smethod_6();
	}

	// Token: 0x0600001D RID: 29 RVA: 0x00003198 File Offset: 0x00001398
	public static void smethod_3(object[] object_0)
	{
		try
		{
			List<object> list = new List<object>();
			List<Guid> list2 = new List<Guid>();
			int num = 0;
			int num2 = object_0.Length - 1;
			for (int i = num; i <= num2; i += 3)
			{
				Guid guid = (Guid)object_0[i];
				byte[] byte_ = (byte[])object_0[i + 1];
				bool flag = (bool)object_0[i + 2];
				list2.Add(guid);
				GClass2 gclass = Class23.smethod_1(guid);
				if (gclass == null)
				{
					list.Add(guid);
				}
				else
				{
					if (gclass.bool_0 != flag)
					{
						gclass.bool_0 = flag;
						Class5.bool_1 = true;
					}
					if (!Class26.smethod_5(gclass.byte_1, byte_))
					{
						list.Add(guid);
						Class5.bool_0 = true;
						Class8.smethod_87(string.Format("Plugin [{0}] requires an update.", guid));
					}
				}
			}
			Class8.smethod_5(list2.ToArray());
			try
			{
				foreach (GClass2 gclass2 in Class8.list_2)
				{
					if (!list2.Contains(gclass2.guid_0))
					{
						Class5.bool_0 = true;
						Class8.smethod_87(string.Format("Plugin [{0}] is being uninstalled.", gclass2.guid_0));
						if (gclass2.bool_0)
						{
							Class5.bool_1 = true;
						}
						if (gclass2.gclass3_0 != null)
						{
							try
							{
								gclass2.gclass3_0.method_8();
							}
							catch (Exception exception_)
							{
								Class8.smethod_85(gclass2.gclass3_0, exception_, "PluginUninstalling");
							}
						}
					}
				}
			}
			finally
			{
				List<GClass2>.Enumerator enumerator;
				((IDisposable)enumerator).Dispose();
			}
			if (list.Count == 0 && Class5.bool_0)
			{
				if (Class5.bool_1)
				{
					Class8.smethod_7();
				}
				Class8.smethod_41();
			}
			else
			{
				Class8.smethod_88(Class8.client_0, true, CommandType.PluginCommand, 2, list.ToArray());
			}
		}
		catch (Exception exception_2)
		{
			Class8.smethod_86(exception_2, "HandlePluginDetailsCommand");
		}
	}

	// Token: 0x0600001E RID: 30 RVA: 0x000033C4 File Offset: 0x000015C4
	public static void smethod_4(object[] object_0)
	{
		List<GClass2> list = new List<GClass2>();
		int num = 0;
		int num2 = object_0.Length - 1;
		for (int i = num; i <= num2; i += 5)
		{
			GClass2 gclass = new GClass2();
			gclass.guid_0 = (Guid)object_0[i];
			gclass.dateTime_0 = (DateTime)object_0[i + 1];
			gclass.string_0 = (string)object_0[i + 2];
			gclass.bool_0 = (bool)object_0[i + 3];
			gclass.byte_0 = (byte[])object_0[i + 4];
			gclass.byte_1 = Class27.smethod_2(gclass.byte_0);
			Class8.list_2.Add(gclass);
			list.Add(gclass);
			if (gclass.bool_0)
			{
				Class5.bool_1 = true;
			}
		}
		if (Class5.bool_1)
		{
			Class8.smethod_7();
		}
		if (Class5.bool_0)
		{
			Class8.smethod_41();
			return;
		}
		Class8.smethod_87("Loading plugins..");
		try
		{
			foreach (GClass2 gclass2 in list)
			{
				Class23.smethod_0(gclass2.byte_0, gclass2);
			}
		}
		finally
		{
			List<GClass2>.Enumerator enumerator;
			((IDisposable)enumerator).Dispose();
		}
		Class8.smethod_88(Class8.client_0, true, CommandType.PluginCommand, 3, new object[0]);
	}

	// Token: 0x0600001F RID: 31 RVA: 0x00003504 File Offset: 0x00001704
	public static void smethod_5(bool bool_2)
	{
		Class8.smethod_88(Class8.client_0, true, CommandType.PluginCommand, 0, new object[]
		{
			bool_2
		});
	}

	// Token: 0x06000020 RID: 32 RVA: 0x0000215F File Offset: 0x0000035F
	public static void smethod_6()
	{
		Class8.smethod_88(Class8.client_0, true, CommandType.PluginCommand, 1, new object[0]);
	}

	// Token: 0x04000009 RID: 9
	public static bool bool_0;

	// Token: 0x0400000A RID: 10
	public static bool bool_1;
}
