using System;
using System.Collections.Generic;
using System.Net;
using System.Net.Sockets;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;
using Microsoft.VisualBasic.CompilerServices;

// Token: 0x02000032 RID: 50
public sealed class Client
{
	// Token: 0x06000157 RID: 343 RVA: 0x000088F8 File Offset: 0x00006AF8
	public Client()
	{
		this.bool_0 = true;
		this.int_0 = 65535;
		this.int_1 = 10485760;
		this.int_2 = 10485760;
		this.int_3 = 2500;
		this.int_4 = 8000;
		this.object_0 = RuntimeHelpers.GetObjectValue(new object());
		this.bool_4 = true;
		this.string_1 = Guid.NewGuid().ToString();
	}

	// Token: 0x06000158 RID: 344 RVA: 0x0000897C File Offset: 0x00006B7C
	public Client(Socket socket_1, bool bool_8, int int_8, int int_9, bool bool_9)
	{
		this.bool_0 = true;
		this.int_0 = 65535;
		this.int_1 = 10485760;
		this.int_2 = 10485760;
		this.int_3 = 2500;
		this.int_4 = 8000;
		this.object_0 = RuntimeHelpers.GetObjectValue(new object());
		this.socket_0 = socket_1;
		this.string_1 = Guid.NewGuid().ToString();
		this.bool_3 = true;
		this.ushort_0 = (ushort)((IPEndPoint)socket_1.LocalEndPoint).Port;
		this.bool_0 = bool_8;
		this.int_0 = int_8;
		this.int_1 = int_9;
		this.bool_1 = bool_9;
		this.method_43();
		this.method_50(socket_1);
	}

	// Token: 0x06000159 RID: 345 RVA: 0x00002B5B File Offset: 0x00000D5B
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_0(Client.GDelegate6 gdelegate6_1)
	{
		this.gdelegate6_0 = (Client.GDelegate6)Delegate.Combine(this.gdelegate6_0, gdelegate6_1);
	}

	// Token: 0x0600015A RID: 346 RVA: 0x00002B74 File Offset: 0x00000D74
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_1(Client.GDelegate6 gdelegate6_1)
	{
		this.gdelegate6_0 = (Client.GDelegate6)Delegate.Remove(this.gdelegate6_0, gdelegate6_1);
	}

	// Token: 0x0600015B RID: 347 RVA: 0x00002B8D File Offset: 0x00000D8D
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_2(Client.GDelegate7 gdelegate7_1)
	{
		this.gdelegate7_0 = (Client.GDelegate7)Delegate.Combine(this.gdelegate7_0, gdelegate7_1);
	}

	// Token: 0x0600015C RID: 348 RVA: 0x00002BA6 File Offset: 0x00000DA6
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_3(Client.GDelegate7 gdelegate7_1)
	{
		this.gdelegate7_0 = (Client.GDelegate7)Delegate.Remove(this.gdelegate7_0, gdelegate7_1);
	}

	// Token: 0x0600015D RID: 349 RVA: 0x00002BBF File Offset: 0x00000DBF
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_4(Client.GDelegate4 gdelegate4_1)
	{
		this.gdelegate4_0 = (Client.GDelegate4)Delegate.Combine(this.gdelegate4_0, gdelegate4_1);
	}

	// Token: 0x0600015E RID: 350 RVA: 0x00002BD8 File Offset: 0x00000DD8
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_5(Client.GDelegate4 gdelegate4_1)
	{
		this.gdelegate4_0 = (Client.GDelegate4)Delegate.Remove(this.gdelegate4_0, gdelegate4_1);
	}

	// Token: 0x0600015F RID: 351 RVA: 0x00002BF1 File Offset: 0x00000DF1
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_6(Client.GDelegate2 gdelegate2_1)
	{
		this.gdelegate2_0 = (Client.GDelegate2)Delegate.Combine(this.gdelegate2_0, gdelegate2_1);
	}

	// Token: 0x06000160 RID: 352 RVA: 0x00002C0A File Offset: 0x00000E0A
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_7(Client.GDelegate2 gdelegate2_1)
	{
		this.gdelegate2_0 = (Client.GDelegate2)Delegate.Remove(this.gdelegate2_0, gdelegate2_1);
	}

	// Token: 0x06000161 RID: 353 RVA: 0x00002C23 File Offset: 0x00000E23
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_8(Client.GDelegate8 gdelegate8_1)
	{
		this.gdelegate8_0 = (Client.GDelegate8)Delegate.Combine(this.gdelegate8_0, gdelegate8_1);
	}

	// Token: 0x06000162 RID: 354 RVA: 0x00002C3C File Offset: 0x00000E3C
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_9(Client.GDelegate8 gdelegate8_1)
	{
		this.gdelegate8_0 = (Client.GDelegate8)Delegate.Remove(this.gdelegate8_0, gdelegate8_1);
	}

	// Token: 0x06000163 RID: 355 RVA: 0x00002C55 File Offset: 0x00000E55
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_10(Client.GDelegate3 gdelegate3_1)
	{
		this.gdelegate3_0 = (Client.GDelegate3)Delegate.Combine(this.gdelegate3_0, gdelegate3_1);
	}

	// Token: 0x06000164 RID: 356 RVA: 0x00002C6E File Offset: 0x00000E6E
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_11(Client.GDelegate3 gdelegate3_1)
	{
		this.gdelegate3_0 = (Client.GDelegate3)Delegate.Remove(this.gdelegate3_0, gdelegate3_1);
	}

	// Token: 0x06000165 RID: 357 RVA: 0x00002C87 File Offset: 0x00000E87
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_12(Client.GDelegate5 gdelegate5_1)
	{
		this.gdelegate5_0 = (Client.GDelegate5)Delegate.Combine(this.gdelegate5_0, gdelegate5_1);
	}

	// Token: 0x06000166 RID: 358 RVA: 0x00002CA0 File Offset: 0x00000EA0
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_13(Client.GDelegate5 gdelegate5_1)
	{
		this.gdelegate5_0 = (Client.GDelegate5)Delegate.Remove(this.gdelegate5_0, gdelegate5_1);
	}

	// Token: 0x06000167 RID: 359 RVA: 0x00002CB9 File Offset: 0x00000EB9
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_14(Client.GDelegate9 gdelegate9_1)
	{
		this.gdelegate9_0 = (Client.GDelegate9)Delegate.Combine(this.gdelegate9_0, gdelegate9_1);
	}

	// Token: 0x06000168 RID: 360 RVA: 0x00002CD2 File Offset: 0x00000ED2
	[MethodImpl(MethodImplOptions.Synchronized)]
	public void method_15(Client.GDelegate9 gdelegate9_1)
	{
		this.gdelegate9_0 = (Client.GDelegate9)Delegate.Remove(this.gdelegate9_0, gdelegate9_1);
	}

	// Token: 0x06000169 RID: 361 RVA: 0x00002CEB File Offset: 0x00000EEB
	public bool method_16()
	{
		return this.bool_0;
	}

	// Token: 0x0600016A RID: 362 RVA: 0x00002CF3 File Offset: 0x00000EF3
	public void method_17(bool bool_8)
	{
		if (this.method_36())
		{
			throw new Exception("Unable to change this property while socket is in use.");
		}
		this.bool_0 = bool_8;
	}

	// Token: 0x0600016B RID: 363 RVA: 0x00002D0F File Offset: 0x00000F0F
	public int method_18()
	{
		return this.int_0;
	}

	// Token: 0x0600016C RID: 364 RVA: 0x00002D17 File Offset: 0x00000F17
	public void method_19(int int_8)
	{
		if (int_8 < 1)
		{
			throw new Exception("Value must be greater than 0.");
		}
		if (this.method_36())
		{
			throw new Exception("Unable to change this property while socket is in use.");
		}
		this.int_0 = int_8;
	}

	// Token: 0x0600016D RID: 365 RVA: 0x00002D42 File Offset: 0x00000F42
	public int method_20()
	{
		return this.int_1;
	}

	// Token: 0x0600016E RID: 366 RVA: 0x00002D4A File Offset: 0x00000F4A
	public void method_21(int int_8)
	{
		if (int_8 < 1)
		{
			throw new Exception("Value must be greater than 0.");
		}
		this.int_1 = int_8;
	}

	// Token: 0x0600016F RID: 367 RVA: 0x00002D62 File Offset: 0x00000F62
	public bool method_22()
	{
		return this.bool_1;
	}

	// Token: 0x06000170 RID: 368 RVA: 0x00002D6A File Offset: 0x00000F6A
	public void method_23(bool bool_8)
	{
		this.bool_1 = bool_8;
	}

	// Token: 0x06000171 RID: 369 RVA: 0x00002D73 File Offset: 0x00000F73
	public int method_24()
	{
		return this.int_2;
	}

	// Token: 0x06000172 RID: 370 RVA: 0x00002D7B File Offset: 0x00000F7B
	public void method_25(int int_8)
	{
		if (int_8 < 85000)
		{
			throw new Exception("Value must be greater than or equal to 85000.");
		}
		this.int_2 = int_8;
	}

	// Token: 0x06000173 RID: 371 RVA: 0x00002D97 File Offset: 0x00000F97
	public int method_26()
	{
		return this.int_3;
	}

	// Token: 0x06000174 RID: 372 RVA: 0x00002D9F File Offset: 0x00000F9F
	public void method_27(int int_8)
	{
		this.int_3 = int_8;
	}

	// Token: 0x06000175 RID: 373 RVA: 0x00002DA8 File Offset: 0x00000FA8
	public int method_28()
	{
		return this.int_4;
	}

	// Token: 0x06000176 RID: 374 RVA: 0x00002DB0 File Offset: 0x00000FB0
	public void method_29(int int_8)
	{
		this.int_4 = int_8;
	}

	// Token: 0x06000177 RID: 375 RVA: 0x00002DB9 File Offset: 0x00000FB9
	public GClass0 method_30()
	{
		return this.gclass0_0;
	}

	// Token: 0x06000178 RID: 376 RVA: 0x00002DC1 File Offset: 0x00000FC1
	public void method_31(GClass0 gclass0_1)
	{
		this.gclass0_0 = gclass0_1;
	}

	// Token: 0x06000179 RID: 377 RVA: 0x00008A48 File Offset: 0x00006C48
	public IPEndPoint method_32()
	{
		if (this.ipendPoint_0 != null)
		{
			return this.ipendPoint_0;
		}
		return new IPEndPoint(IPAddress.None, 0);
	}

	// Token: 0x0600017A RID: 378 RVA: 0x00002DCA File Offset: 0x00000FCA
	public string method_33()
	{
		return this.string_0;
	}

	// Token: 0x0600017B RID: 379 RVA: 0x00002DD2 File Offset: 0x00000FD2
	public ushort method_34()
	{
		return this.ushort_0;
	}

	// Token: 0x0600017C RID: 380 RVA: 0x00002DDA File Offset: 0x00000FDA
	public bool method_35()
	{
		return this.bool_2;
	}

	// Token: 0x0600017D RID: 381 RVA: 0x00002DE2 File Offset: 0x00000FE2
	public bool method_36()
	{
		return this.bool_2 || this.bool_3;
	}

	// Token: 0x0600017E RID: 382 RVA: 0x00002DF7 File Offset: 0x00000FF7
	public bool method_37()
	{
		return this.bool_4;
	}

	// Token: 0x0600017F RID: 383 RVA: 0x00002DFF File Offset: 0x00000FFF
	public string method_38()
	{
		return this.string_1;
	}

	// Token: 0x06000180 RID: 384 RVA: 0x00002E07 File Offset: 0x00001007
	public bool method_39()
	{
		return this.bool_5;
	}

	// Token: 0x06000181 RID: 385 RVA: 0x00002E0F File Offset: 0x0000100F
	public void method_40(bool bool_8)
	{
		this.bool_5 = bool_8;
	}

	// Token: 0x06000182 RID: 386 RVA: 0x00008A70 File Offset: 0x00006C70
	public IPAddress[] method_41()
	{
		return this.ipaddress_0;
	}

	// Token: 0x06000183 RID: 387 RVA: 0x00002E18 File Offset: 0x00001018
	public void method_42(IPAddress[] ipaddress_1)
	{
		this.ipaddress_0 = ipaddress_1;
	}

	// Token: 0x06000184 RID: 388 RVA: 0x00008A84 File Offset: 0x00006C84
	private void method_43()
	{
		this.byte_2 = new byte[4];
		this.byte_0 = new byte[0];
		this.byte_1 = new byte[0];
		this.byte_3 = new byte[this.int_0 * 2 - 1 + 1];
		this.queue_0 = new Queue<byte[]>();
		this.socketAsyncEventArgs_0 = new SocketAsyncEventArgs();
		this.socketAsyncEventArgs_1 = new SocketAsyncEventArgs();
		this.socketAsyncEventArgs_2 = new SocketAsyncEventArgs();
		this.socketAsyncEventArgs_0.SetBuffer(this.byte_3, 0, this.int_0);
		this.socketAsyncEventArgs_1.SetBuffer(this.byte_3, this.int_0, this.int_0);
		this.socketAsyncEventArgs_0.Completed += this.method_52;
		this.socketAsyncEventArgs_1.Completed += this.method_52;
		this.socketAsyncEventArgs_2.Completed += this.method_52;
	}

	// Token: 0x06000185 RID: 389 RVA: 0x00008B78 File Offset: 0x00006D78
	public void method_44(string string_2, ushort ushort_1)
	{
		if (!this.bool_4)
		{
			return;
		}
		try
		{
			if (!this.method_36())
			{
				this.string_0 = string_2;
				this.ushort_0 = ushort_1;
				this.bool_3 = true;
				this.method_43();
				IPAddress none = IPAddress.None;
				if (IPAddress.TryParse(this.string_0, out none))
				{
					this.method_47(none, this.ushort_0);
				}
				else
				{
					ThreadPool.QueueUserWorkItem(delegate(object object_1)
					{
						delegate
						{
							this.method_45(this.string_0, this.ushort_0);
						}();
					});
				}
			}
		}
		catch (Exception exception_)
		{
			Client.GDelegate9 gdelegate = this.gdelegate9_0;
			if (gdelegate != null)
			{
				gdelegate(this, exception_);
			}
			this.method_56();
		}
	}

	// Token: 0x06000186 RID: 390 RVA: 0x00008C24 File Offset: 0x00006E24
	private void method_45(string string_2, ushort ushort_1)
	{
		try
		{
			IPAddress[] array = null;
			if (this.bool_5)
			{
				if (this.ipaddress_0 != null)
				{
					if (this.ipaddress_0.Length != 0)
					{
						foreach (IPAddress ipaddress_ in this.ipaddress_0)
						{
							array = this.method_57(string_2, ipaddress_);
							if (array.Length != 0)
							{
								break;
							}
						}
						goto IL_55;
					}
				}
				array = this.method_57(string_2, null);
				IL_55:
				if (array.Length == 0)
				{
					array = Dns.GetHostEntry(string_2).AddressList;
				}
			}
			else
			{
				array = Dns.GetHostEntry(string_2).AddressList;
			}
			this.method_46(string_2, ushort_1, array);
		}
		catch (Exception exception_)
		{
			Client.GDelegate9 gdelegate = this.gdelegate9_0;
			if (gdelegate != null)
			{
				gdelegate(this, exception_);
			}
			this.method_56();
		}
	}

	// Token: 0x06000187 RID: 391 RVA: 0x00008CEC File Offset: 0x00006EEC
	private void method_46(string string_2, ushort ushort_1, IPAddress[] ipaddress_1)
	{
		try
		{
			if (this.socket_0 == null)
			{
				foreach (IPAddress ipaddress in ipaddress_1)
				{
					if (ipaddress.AddressFamily == AddressFamily.InterNetwork)
					{
						Client.GDelegate6 gdelegate = this.gdelegate6_0;
						if (gdelegate != null)
						{
							gdelegate(this, string_2, ipaddress);
						}
						this.method_47(ipaddress, ushort_1);
						return;
					}
				}
				throw new Exception("Unable to resolve remote host.");
			}
		}
		catch (Exception exception_)
		{
			Client.GDelegate9 gdelegate2 = this.gdelegate9_0;
			if (gdelegate2 != null)
			{
				gdelegate2(this, exception_);
			}
			this.method_56();
		}
	}

	// Token: 0x06000188 RID: 392 RVA: 0x00008D88 File Offset: 0x00006F88
	private void method_47(IPAddress ipaddress_1, ushort ushort_1)
	{
		try
		{
			this.socket_0 = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
			this.socket_0.LingerState = new LingerOption(true, 0);
			this.socketAsyncEventArgs_2.RemoteEndPoint = new IPEndPoint(ipaddress_1, (int)ushort_1);
			if (Class0.smethod_0(ipaddress_1))
			{
				this.method_48(this.int_3);
			}
			else
			{
				this.method_48(this.int_4);
			}
			if (!this.socket_0.ConnectAsync(this.socketAsyncEventArgs_2))
			{
				this.method_52(this.socket_0, this.socketAsyncEventArgs_2);
			}
		}
		catch (Exception exception_)
		{
			Client.GDelegate9 gdelegate = this.gdelegate9_0;
			if (gdelegate != null)
			{
				gdelegate(this, exception_);
			}
			this.method_56();
		}
	}

	// Token: 0x06000189 RID: 393 RVA: 0x00008E48 File Offset: 0x00007048
	private void method_48(int int_8)
	{
		ThreadPool.QueueUserWorkItem(new WaitCallback(new Client.Class28
		{
			int_0 = int_8,
			client_0 = this
		}._Lambda$__9));
	}

	// Token: 0x0600018A RID: 394 RVA: 0x00008E7C File Offset: 0x0000707C
	private void method_49(int int_8)
	{
		for (int i = 0; i <= int_8; i += 20)
		{
			if (!this.bool_3)
			{
				return;
			}
			Thread.Sleep(20);
		}
		if (this.bool_3)
		{
			this.method_56();
		}
	}

	// Token: 0x0600018B RID: 395 RVA: 0x00008EB8 File Offset: 0x000070B8
	private void method_50(Socket socket_1)
	{
		try
		{
			this.socketAsyncEventArgs_2.Dispose();
			this.socketAsyncEventArgs_2 = null;
			this.ipendPoint_0 = (IPEndPoint)socket_1.RemoteEndPoint;
			this.bool_3 = false;
			this.bool_2 = true;
			if (this.method_37())
			{
				Client.GDelegate7 gdelegate = this.gdelegate7_0;
				if (gdelegate != null)
				{
					gdelegate(this, true);
				}
				this.method_51();
			}
		}
		catch (Exception exception_)
		{
			Client.GDelegate9 gdelegate2 = this.gdelegate9_0;
			if (gdelegate2 != null)
			{
				gdelegate2(this, exception_);
			}
			this.method_56();
		}
	}

	// Token: 0x0600018C RID: 396 RVA: 0x00002E21 File Offset: 0x00001021
	public void method_51()
	{
		if (!this.socket_0.ReceiveAsync(this.socketAsyncEventArgs_0))
		{
			this.method_52(this.socket_0, this.socketAsyncEventArgs_0);
		}
	}

	// Token: 0x0600018D RID: 397 RVA: 0x00008F50 File Offset: 0x00007150
	private void method_52(object sender, SocketAsyncEventArgs e)
	{
		try
		{
			if (this.socket_0 != null)
			{
				if (this.socket_0 == sender)
				{
					if (e.SocketError == SocketError.Success)
					{
						switch (e.LastOperation)
						{
						case SocketAsyncOperation.Connect:
							this.method_50(this.socket_0);
							break;
						case SocketAsyncOperation.Receive:
							if (e.BytesTransferred == 0)
							{
								this.method_56();
							}
							else
							{
								if (this.bool_1)
								{
									Client.GDelegate8 gdelegate = this.gdelegate8_0;
									if (gdelegate != null)
									{
										gdelegate(this, e.BytesTransferred);
									}
								}
								this.method_53(e.Buffer, 0, e.BytesTransferred);
								if (!this.socket_0.ReceiveAsync(e))
								{
									this.method_52(this.socket_0, e);
								}
							}
							break;
						case SocketAsyncOperation.Send:
						{
							if (this.bool_0 && this.int_6 == 0)
							{
								this.int_6 = -4;
							}
							this.int_6 += e.BytesTransferred;
							if (this.bool_1)
							{
								Client.GDelegate5 gdelegate2 = this.gdelegate5_0;
								if (gdelegate2 != null)
								{
									gdelegate2(this, e.BytesTransferred);
								}
							}
							bool flag;
							if (this.int_6 == this.byte_1.Length)
							{
								flag = true;
								Client.GDelegate3 gdelegate3 = this.gdelegate3_0;
								if (gdelegate3 != null)
								{
									gdelegate3(this, this.byte_1.Length);
								}
							}
							object obj = this.object_0;
							ObjectFlowControl.CheckForSyncLockOnValueType(obj);
							lock (obj)
							{
								if (this.queue_0.Count == 0 && flag)
								{
									this.bool_7 = false;
									Array.Resize<byte>(ref this.byte_1, 0);
									if (this.int_6 >= this.int_2)
									{
										GC.Collect();
									}
									this.int_6 = 0;
								}
								else
								{
									this.method_55();
								}
							}
							break;
						}
						}
					}
					else
					{
						Client.GDelegate9 gdelegate4 = this.gdelegate9_0;
						if (gdelegate4 != null)
						{
							gdelegate4(this, new SocketException((int)e.SocketError));
						}
						this.method_56();
					}
				}
			}
		}
		catch (Exception exception_)
		{
			Client.GDelegate9 gdelegate4 = this.gdelegate9_0;
			if (gdelegate4 != null)
			{
				gdelegate4(this, exception_);
			}
			this.method_56();
		}
	}

	// Token: 0x0600018E RID: 398 RVA: 0x0000918C File Offset: 0x0000738C
	private void method_53(byte[] byte_4, int int_8, int int_9)
	{
		if (this.bool_0)
		{
			if (this.bool_6)
			{
				int num = Math.Min(this.byte_0.Length - this.int_5, int_9 - int_8);
				Buffer.BlockCopy(byte_4, int_8, this.byte_0, this.int_5, num);
				this.int_5 += num;
				if (this.int_5 == this.byte_0.Length)
				{
					Client.GDelegate2 gdelegate = this.gdelegate2_0;
					if (gdelegate != null)
					{
						gdelegate(this, this.byte_0);
					}
					this.bool_6 = false;
					Array.Resize<byte>(ref this.byte_0, 0);
					if (this.int_5 >= this.int_2)
					{
						GC.Collect();
					}
				}
				if (num < int_9 - int_8)
				{
					this.method_53(byte_4, int_8 + num, int_9);
				}
			}
			else
			{
				int num2 = Math.Min(int_9 - int_8, 4 - this.int_7);
				Buffer.BlockCopy(byte_4, int_8, this.byte_2, this.int_7, num2);
				int_8 += num2;
				this.int_7 += num2;
				if (this.int_7 == 4)
				{
					int num3 = BitConverter.ToInt32(this.byte_2, 0);
					if (num3 > this.int_1)
					{
						Client.GDelegate9 gdelegate2 = this.gdelegate9_0;
						if (gdelegate2 != null)
						{
							gdelegate2(this, new Exception("Packet size exceeds MaxPacketSize."));
						}
						this.method_56();
						return;
					}
					if (num3 <= 0)
					{
						Client.GDelegate9 gdelegate2 = this.gdelegate9_0;
						if (gdelegate2 != null)
						{
							gdelegate2(this, new Exception("Packet size must be greater than 0."));
						}
						this.method_56();
						return;
					}
					this.int_5 = 0;
					this.int_7 = 0;
					this.bool_6 = true;
					Array.Resize<byte>(ref this.byte_0, num3);
					if (int_8 < int_9)
					{
						this.method_53(byte_4, int_8, int_9);
					}
				}
			}
		}
		else
		{
			Array.Resize<byte>(ref this.byte_0, int_9);
			Buffer.BlockCopy(byte_4, 0, this.byte_0, 0, int_9);
			Client.GDelegate2 gdelegate = this.gdelegate2_0;
			if (gdelegate != null)
			{
				gdelegate(this, this.byte_0);
			}
		}
	}

	// Token: 0x0600018F RID: 399 RVA: 0x0000935C File Offset: 0x0000755C
	public void method_54(byte[] byte_4)
	{
		if (!this.bool_2)
		{
			return;
		}
		try
		{
			object obj = this.object_0;
			ObjectFlowControl.CheckForSyncLockOnValueType(obj);
			lock (obj)
			{
				this.queue_0.Enqueue(byte_4);
				if (!this.bool_7)
				{
					this.bool_7 = true;
					this.method_55();
				}
			}
		}
		catch (Exception exception_)
		{
			Client.GDelegate9 gdelegate = this.gdelegate9_0;
			if (gdelegate != null)
			{
				gdelegate(this, exception_);
			}
			this.method_56();
		}
	}

	// Token: 0x06000190 RID: 400 RVA: 0x000093F4 File Offset: 0x000075F4
	private void method_55()
	{
		if (this.int_6 == this.byte_1.Length)
		{
			this.int_6 = 0;
			object obj = this.object_0;
			ObjectFlowControl.CheckForSyncLockOnValueType(obj);
			lock (obj)
			{
				this.byte_1 = this.queue_0.Dequeue();
			}
		}
		int num;
		if (this.bool_0 && this.int_6 == 0)
		{
			num = 4;
			Buffer.BlockCopy(BitConverter.GetBytes(this.byte_1.Length), 0, this.byte_3, this.socketAsyncEventArgs_1.Offset, 4);
		}
		int num2 = Math.Min(this.byte_1.Length - this.int_6, this.int_0 - num);
		Buffer.BlockCopy(this.byte_1, this.int_6, this.byte_3, this.socketAsyncEventArgs_1.Offset + num, num2);
		this.socketAsyncEventArgs_1.SetBuffer(this.socketAsyncEventArgs_1.Offset, num2 + num);
		if (!this.socket_0.SendAsync(this.socketAsyncEventArgs_1))
		{
			this.method_52(this.socket_0, this.socketAsyncEventArgs_1);
		}
	}

	// Token: 0x06000191 RID: 401 RVA: 0x00009510 File Offset: 0x00007710
	public void method_56()
	{
		if (!this.method_36())
		{
			return;
		}
		bool flag = this.bool_2;
		bool flag2 = this.bool_3;
		this.bool_2 = false;
		this.bool_3 = false;
		if (this.socket_0 != null)
		{
			this.socket_0.Close();
			this.socket_0 = null;
		}
		if (this.socketAsyncEventArgs_0 != null)
		{
			this.socketAsyncEventArgs_0.Dispose();
			this.socketAsyncEventArgs_0 = null;
		}
		if (this.socketAsyncEventArgs_1 != null)
		{
			this.socketAsyncEventArgs_1.Dispose();
			this.socketAsyncEventArgs_1 = null;
		}
		if (this.socketAsyncEventArgs_2 != null)
		{
			this.socketAsyncEventArgs_2.Dispose();
			this.socketAsyncEventArgs_2 = null;
		}
		if (this.queue_0 != null)
		{
			this.queue_0.Clear();
			this.queue_0 = null;
		}
		this.int_6 = 0;
		this.int_5 = 0;
		this.byte_2 = null;
		this.byte_0 = null;
		this.byte_1 = null;
		this.byte_3 = null;
		this.bool_6 = false;
		this.bool_7 = false;
		if (flag)
		{
			Client.GDelegate7 gdelegate = this.gdelegate7_0;
			if (gdelegate != null)
			{
				gdelegate(this, false);
			}
		}
		else if (flag2)
		{
			Client.GDelegate4 gdelegate2 = this.gdelegate4_0;
			if (gdelegate2 != null)
			{
				gdelegate2(this);
			}
		}
	}

	// Token: 0x06000192 RID: 402 RVA: 0x00009628 File Offset: 0x00007828
	private IPAddress[] method_57(string string_2, IPAddress ipaddress_1)
	{
		List<IPAddress> list = new List<IPAddress>();
		Client.Struct1 @struct = this.method_58(ipaddress_1);
		short short_ = 1;
		int int_ = 72;
		IntPtr zero = IntPtr.Zero;
		IntPtr ptr;
		if (Client.DnsQuery_A(string_2, short_, int_, ref @struct, ref ptr, ref zero) == 0)
		{
			Client.DnsRecord dnsRecord_ = (Client.DnsRecord)Marshal.PtrToStructure(ptr, typeof(Client.DnsRecord));
			IPAddress ipaddress = this.method_59(dnsRecord_);
			if (ipaddress != IPAddress.None)
			{
				list.Add(ipaddress);
			}
			while (!(dnsRecord_.intptr_0 == IntPtr.Zero))
			{
				dnsRecord_ = (Client.DnsRecord)Marshal.PtrToStructure(dnsRecord_.intptr_0, typeof(Client.DnsRecord));
				ipaddress = this.method_59(dnsRecord_);
				if (ipaddress != IPAddress.None)
				{
					list.Add(ipaddress);
				}
			}
		}
		return list.ToArray();
	}

	// Token: 0x06000193 RID: 403 RVA: 0x000096F0 File Offset: 0x000078F0
	private Client.Struct1 method_58(IPAddress ipaddress_1)
	{
		if (ipaddress_1 == null)
		{
			Client.Struct1 result;
			return result;
		}
		return new Client.Struct1
		{
			int_0 = 1,
			uint_0 = new uint[]
			{
				BitConverter.ToUInt32(ipaddress_1.GetAddressBytes(), 0)
			}
		};
	}

	// Token: 0x06000194 RID: 404 RVA: 0x00009734 File Offset: 0x00007934
	private IPAddress method_59(Client.DnsRecord dnsRecord_0)
	{
		if (dnsRecord_0.short_0 != 1)
		{
			return IPAddress.None;
		}
		if ((dnsRecord_0.int_0 & 3) >= 2)
		{
			return IPAddress.None;
		}
		return new IPAddress((long)((ulong)dnsRecord_0.uint_0));
	}

	// Token: 0x06000195 RID: 405
	[DllImport("dnsapi.dll")]
	private static extern int DnsQuery_A(string string_2, short short_0, int int_8, ref Client.Struct1 struct1_0, ref IntPtr intptr_0, ref IntPtr intptr_1);

	// Token: 0x04000084 RID: 132
	private Client.GDelegate6 gdelegate6_0;

	// Token: 0x04000085 RID: 133
	private Client.GDelegate7 gdelegate7_0;

	// Token: 0x04000086 RID: 134
	private Client.GDelegate4 gdelegate4_0;

	// Token: 0x04000087 RID: 135
	private Client.GDelegate2 gdelegate2_0;

	// Token: 0x04000088 RID: 136
	private Client.GDelegate8 gdelegate8_0;

	// Token: 0x04000089 RID: 137
	private Client.GDelegate3 gdelegate3_0;

	// Token: 0x0400008A RID: 138
	private Client.GDelegate5 gdelegate5_0;

	// Token: 0x0400008B RID: 139
	private Client.GDelegate9 gdelegate9_0;

	// Token: 0x0400008C RID: 140
	private bool bool_0;

	// Token: 0x0400008D RID: 141
	private int int_0;

	// Token: 0x0400008E RID: 142
	private int int_1;

	// Token: 0x0400008F RID: 143
	private bool bool_1;

	// Token: 0x04000090 RID: 144
	private int int_2;

	// Token: 0x04000091 RID: 145
	private int int_3;

	// Token: 0x04000092 RID: 146
	private int int_4;

	// Token: 0x04000093 RID: 147
	private GClass0 gclass0_0;

	// Token: 0x04000094 RID: 148
	private IPEndPoint ipendPoint_0;

	// Token: 0x04000095 RID: 149
	private string string_0;

	// Token: 0x04000096 RID: 150
	private ushort ushort_0;

	// Token: 0x04000097 RID: 151
	private bool bool_2;

	// Token: 0x04000098 RID: 152
	private bool bool_3;

	// Token: 0x04000099 RID: 153
	private bool bool_4;

	// Token: 0x0400009A RID: 154
	private string string_1;

	// Token: 0x0400009B RID: 155
	private bool bool_5;

	// Token: 0x0400009C RID: 156
	private IPAddress[] ipaddress_0;

	// Token: 0x0400009D RID: 157
	private Socket socket_0;

	// Token: 0x0400009E RID: 158
	private SocketAsyncEventArgs socketAsyncEventArgs_0;

	// Token: 0x0400009F RID: 159
	private SocketAsyncEventArgs socketAsyncEventArgs_1;

	// Token: 0x040000A0 RID: 160
	private SocketAsyncEventArgs socketAsyncEventArgs_2;

	// Token: 0x040000A1 RID: 161
	private int int_5;

	// Token: 0x040000A2 RID: 162
	private int int_6;

	// Token: 0x040000A3 RID: 163
	private int int_7;

	// Token: 0x040000A4 RID: 164
	private byte[] byte_0;

	// Token: 0x040000A5 RID: 165
	private byte[] byte_1;

	// Token: 0x040000A6 RID: 166
	private byte[] byte_2;

	// Token: 0x040000A7 RID: 167
	private byte[] byte_3;

	// Token: 0x040000A8 RID: 168
	private bool bool_6;

	// Token: 0x040000A9 RID: 169
	private bool bool_7;

	// Token: 0x040000AA RID: 170
	private object object_0;

	// Token: 0x040000AB RID: 171
	private Queue<byte[]> queue_0;

	// Token: 0x02000033 RID: 51
	// (Invoke) Token: 0x0600019B RID: 411
	public delegate void GDelegate2(Client client_0, byte[] byte_0);

	// Token: 0x02000034 RID: 52
	// (Invoke) Token: 0x0600019F RID: 415
	public delegate void GDelegate3(Client client_0, int int_0);

	// Token: 0x02000035 RID: 53
	internal sealed class Class28
	{
		// Token: 0x040000AC RID: 172
		public int int_0;

		// Token: 0x040000AD RID: 173
		public Client client_0;
	}

	// Token: 0x02000036 RID: 54
	// (Invoke) Token: 0x060001A6 RID: 422
	public delegate void GDelegate4(Client client_0);

	// Token: 0x02000037 RID: 55
	// (Invoke) Token: 0x060001AA RID: 426
	public delegate void GDelegate5(Client client_0, int int_0);

	// Token: 0x02000038 RID: 56
	// (Invoke) Token: 0x060001AE RID: 430
	public delegate void GDelegate6(Client client_0, string string_0, IPAddress ipaddress_0);

	// Token: 0x02000039 RID: 57
	// (Invoke) Token: 0x060001B2 RID: 434
	public delegate void GDelegate7(Client client_0, bool bool_0);

	// Token: 0x0200003A RID: 58
	// (Invoke) Token: 0x060001B6 RID: 438
	public delegate void GDelegate8(Client client_0, int int_0);

	// Token: 0x0200003B RID: 59
	// (Invoke) Token: 0x060001BA RID: 442
	public delegate void GDelegate9(Client client_0, Exception exception_0);

	// Token: 0x0200003C RID: 60
	[StructLayout(LayoutKind.Sequential, Pack = 1)]
	private struct Struct1
	{
		// Token: 0x040000AE RID: 174
		public int int_0;

		// Token: 0x040000AF RID: 175
		[MarshalAs(UnmanagedType.ByValArray, SizeConst = 1, ArraySubType = UnmanagedType.U4)]
		public uint[] uint_0;
	}

	// Token: 0x0200003D RID: 61
	[StructLayout(LayoutKind.Sequential, Pack = 1)]
	private struct DnsRecord
	{
		// Token: 0x040000B0 RID: 176
		public IntPtr intptr_0;

		// Token: 0x040000B1 RID: 177
		public string string_0;

		// Token: 0x040000B2 RID: 178
		public short short_0;

		// Token: 0x040000B3 RID: 179
		public short short_1;

		// Token: 0x040000B4 RID: 180
		public int int_0;

		// Token: 0x040000B5 RID: 181
		public int int_1;

		// Token: 0x040000B6 RID: 182
		public int int_2;

		// Token: 0x040000B7 RID: 183
		public uint uint_0;
	}
}
