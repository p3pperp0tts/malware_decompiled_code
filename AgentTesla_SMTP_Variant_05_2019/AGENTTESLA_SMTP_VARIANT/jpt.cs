using System;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Principal;
using Microsoft.VisualBasic.CompilerServices;

// Token: 0x02000037 RID: 55
[StandardModule]
public sealed class jpt
{
	// Token: 0x06000178 RID: 376 RVA: 0x000311E8 File Offset: 0x0002F3E8
	public static object jpu(IntPtr jpv)
	{
		object objectValue = RuntimeHelpers.GetObjectValue(Marshal.PtrToStructure(jpv, typeof(jpt.jps)));
		FieldInfo field = objectValue.GetType().GetField(<Module>.smethod_strings_decryptor(288664 -> "Type")));
		object objectValue2 = RuntimeHelpers.GetObjectValue(field.GetValue(RuntimeHelpers.GetObjectValue(objectValue)));
		object obj;
		for (;;)
		{
			IL_2A9:
			uint num = 1728134317u;
			for (;;)
			{
				uint num2;
				IntPtr binaryForm;
				IntPtr ptr;
				IntPtr ptr2;
				switch ((num2 = (num ^ 1032463187u)) % 19u)
				{
				case 0u:
				{
					object instance;
					obj = RuntimeHelpers.GetObjectValue(NewLateBinding.LateGet(instance, null, <Module>.smethod_strings_decryptor(288736 -> "Value")), new object[0], null, null, null));
					num = (num2 * 854120958u ^ 3806550887u);
					continue;
				}
				case 1u:
				{
					object instance = new SecurityIdentifier(binaryForm);
					num = (num2 * 1381440921u ^ 2003636004u);
					continue;
				}
				case 2u:
					goto IL_17A;
				case 3u:
					goto IL_14C;
				case 4u:
					goto IL_19B;
				case 5u:
					goto IL_1BC;
				case 6u:
					goto IL_2A9;
				case 7u:
					obj = Marshal.PtrToStringUni(ptr);
					num = (num2 * 2556975281u ^ 3686929807u);
					continue;
				case 8u:
					num = (num2 * 1213601020u ^ 2733968915u);
					continue;
				case 9u:
					goto IL_135;
				case 10u:
					goto IL_163;
				case 11u:
					goto IL_11E;
				case 12u:
					switch (Conversions.ToInteger(objectValue2))
					{
					case 0:
						goto IL_6B;
					case 1:
						goto IL_11E;
					case 2:
						goto IL_135;
					case 3:
						goto IL_14C;
					case 4:
						goto IL_163;
					case 5:
						goto IL_17A;
					case 6:
						goto IL_19B;
					case 7:
						goto IL_59;
					case 8:
					case 9:
					case 10:
					case 11:
						goto IL_BC;
					case 12:
						goto IL_1BC;
					default:
						num = (num2 * 888666461u ^ 490484539u);
						continue;
					}
					break;
				case 14u:
					goto IL_BC;
				case 15u:
					ptr2 = (IntPtr)(checked(jpv.ToInt64() + 16L));
					num = (num2 * 1458590222u ^ 3599487930u);
					continue;
				case 16u:
					goto IL_6B;
				case 17u:
					goto IL_59;
				case 18u:
					num = (num2 * 3725206629u ^ 1127682023u);
					continue;
				}
				return obj;
				IL_59:
				ptr = Marshal.ReadIntPtr(ptr2);
				num = 688653969u;
				continue;
				IL_6B:
				obj = Marshal.ReadByte(ptr2);
				obj = Conversions.ToBoolean(obj);
				num = 256433837u;
				continue;
				IL_BC:
				obj = null;
				num = 256433837u;
				continue;
				IL_11E:
				obj = Marshal.ReadInt16(ptr2);
				num = 304987601u;
				continue;
				IL_135:
				obj = Marshal.ReadInt16(ptr2);
				num = 256433837u;
				continue;
				IL_14C:
				obj = Marshal.ReadInt32(ptr2);
				num = 256433837u;
				continue;
				IL_163:
				obj = Marshal.ReadInt32(ptr2);
				num = 256433837u;
				continue;
				IL_17A:
				obj = RuntimeHelpers.GetObjectValue(Marshal.PtrToStructure(ptr2, typeof(double)));
				num = 256433837u;
				continue;
				IL_19B:
				obj = RuntimeHelpers.GetObjectValue(Marshal.PtrToStructure(ptr2, typeof(Guid)));
				num = 256433837u;
				continue;
				IL_1BC:
				binaryForm = Marshal.ReadIntPtr(ptr2);
				num = 882408479u;
			}
		}
		return obj;
	}

	// Token: 0x06000179 RID: 377
	[DllImport("vaultcli.dll")]
	public static extern int VaultOpenVault(ref Guid jrw, uint jrq, ref IntPtr jrz);

	// Token: 0x0600017A RID: 378
	[DllImport("vaultcli.dll")]
	public static extern int VaultCloseVault(ref IntPtr jsu);

	// Token: 0x0600017B RID: 379
	[DllImport("vaultcli.dll")]
	public static extern int VaultFree(ref IntPtr jsy);

	// Token: 0x0600017C RID: 380
	[DllImport("vaultcli.dll")]
	public static extern int VaultEnumerateVaults(int jsw, ref int jsq, ref IntPtr jsz);

	// Token: 0x0600017D RID: 381
	[DllImport("vaultcli.dll")]
	public static extern int VaultEnumerateItems(IntPtr jtv, int jty, ref int jtx, ref IntPtr jtw);

	// Token: 0x0600017E RID: 382
	[DllImport("vaultcli.dll")]
	public static extern int VaultGetItem(IntPtr jtz, ref Guid juv, IntPtr juy, IntPtr jux, IntPtr juw, IntPtr juq, int juz, ref IntPtr jvy);

	// Token: 0x0600017F RID: 383
	[DllImport("vaultcli.dll", EntryPoint = "VaultGetItem")]
	public static extern int VaultGetItem_1(IntPtr jvw, ref Guid jvq, IntPtr jvz, IntPtr jyx, IntPtr jyw, int jyq, ref IntPtr jyz);

	// Token: 0x02000038 RID: 56
	public enum jow
	{
		// Token: 0x040003B9 RID: 953
		Undefined = -1,
		// Token: 0x040003BA RID: 954
		Boolean,
		// Token: 0x040003BB RID: 955
		Short,
		// Token: 0x040003BC RID: 956
		UnsignedShort,
		// Token: 0x040003BD RID: 957
		Int,
		// Token: 0x040003BE RID: 958
		UnsignedInt,
		// Token: 0x040003BF RID: 959
		Double,
		// Token: 0x040003C0 RID: 960
		Guid,
		// Token: 0x040003C1 RID: 961
		String,
		// Token: 0x040003C2 RID: 962
		ByteArray,
		// Token: 0x040003C3 RID: 963
		TimeStamp,
		// Token: 0x040003C4 RID: 964
		ProtectedArray,
		// Token: 0x040003C5 RID: 965
		Attribute,
		// Token: 0x040003C6 RID: 966
		Sid,
		// Token: 0x040003C7 RID: 967
		Last
	}

	// Token: 0x02000039 RID: 57
	public enum joq
	{
		// Token: 0x040003C9 RID: 969
		Illegal,
		// Token: 0x040003CA RID: 970
		Resource,
		// Token: 0x040003CB RID: 971
		Identity,
		// Token: 0x040003CC RID: 972
		Authenticator,
		// Token: 0x040003CD RID: 973
		Tag,
		// Token: 0x040003CE RID: 974
		PackageSid,
		// Token: 0x040003CF RID: 975
		AppStart = 100,
		// Token: 0x040003D0 RID: 976
		AppEnd = 10000
	}

	// Token: 0x0200003A RID: 58
	public struct joz
	{
		// Token: 0x040003D1 RID: 977
		public Guid SchemaId;

		// Token: 0x040003D2 RID: 978
		public IntPtr pszCredentialFriendlyName;

		// Token: 0x040003D3 RID: 979
		public IntPtr pResourceElement;

		// Token: 0x040003D4 RID: 980
		public IntPtr pIdentityElement;

		// Token: 0x040003D5 RID: 981
		public IntPtr pAuthenticatorElement;

		// Token: 0x040003D6 RID: 982
		public IntPtr pPackageSid;

		// Token: 0x040003D7 RID: 983
		public ulong LastModified;

		// Token: 0x040003D8 RID: 984
		public uint dwFlags;

		// Token: 0x040003D9 RID: 985
		public uint dwPropertiesCount;

		// Token: 0x040003DA RID: 986
		public IntPtr pPropertyElements;
	}

	// Token: 0x0200003B RID: 59
	public struct jpr
	{
		// Token: 0x040003DB RID: 987
		public Guid SchemaId;

		// Token: 0x040003DC RID: 988
		public IntPtr pszCredentialFriendlyName;

		// Token: 0x040003DD RID: 989
		public IntPtr pResourceElement;

		// Token: 0x040003DE RID: 990
		public IntPtr pIdentityElement;

		// Token: 0x040003DF RID: 991
		public IntPtr pAuthenticatorElement;

		// Token: 0x040003E0 RID: 992
		public ulong LastModified;

		// Token: 0x040003E1 RID: 993
		public uint dwFlags;

		// Token: 0x040003E2 RID: 994
		public uint dwPropertiesCount;

		// Token: 0x040003E3 RID: 995
		public IntPtr pPropertyElements;
	}

	// Token: 0x0200003C RID: 60
	[StructLayout(LayoutKind.Explicit)]
	public struct jps
	{
		// Token: 0x040003E4 RID: 996
		[FieldOffset(0)]
		public jpt.joq SchemaElementId;

		// Token: 0x040003E5 RID: 997
		[FieldOffset(8)]
		public jpt.jow Type;
	}
}
