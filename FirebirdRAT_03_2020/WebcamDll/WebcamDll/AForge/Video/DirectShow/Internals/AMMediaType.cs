using System;
using System.Runtime.InteropServices;

namespace AForge.Video.DirectShow.Internals
{
	// Token: 0x02000026 RID: 38
	[ComVisible(false)]
	[StructLayout(LayoutKind.Sequential)]
	internal class AMMediaType : IDisposable
	{
		// Token: 0x060000D5 RID: 213 RVA: 0x00003844 File Offset: 0x00001A44
		~AMMediaType()
		{
			this.Dispose(false);
		}

		// Token: 0x060000D6 RID: 214 RVA: 0x00003874 File Offset: 0x00001A74
		public void Dispose()
		{
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}

		// Token: 0x060000D7 RID: 215 RVA: 0x00003884 File Offset: 0x00001A84
		protected virtual void Dispose(bool disposing)
		{
			if (this.FormatSize != 0 && this.FormatPtr != IntPtr.Zero)
			{
				Marshal.FreeCoTaskMem(this.FormatPtr);
				this.FormatSize = 0;
			}
			if (this.unkPtr != IntPtr.Zero)
			{
				Marshal.Release(this.unkPtr);
				this.unkPtr = IntPtr.Zero;
			}
		}

		// Token: 0x0400003B RID: 59
		public Guid MajorType;

		// Token: 0x0400003C RID: 60
		public Guid SubType;

		// Token: 0x0400003D RID: 61
		[MarshalAs(UnmanagedType.Bool)]
		public bool FixedSizeSamples = true;

		// Token: 0x0400003E RID: 62
		[MarshalAs(UnmanagedType.Bool)]
		public bool TemporalCompression;

		// Token: 0x0400003F RID: 63
		public int SampleSize = 1;

		// Token: 0x04000040 RID: 64
		public Guid FormatType;

		// Token: 0x04000041 RID: 65
		public IntPtr unkPtr;

		// Token: 0x04000042 RID: 66
		public int FormatSize;

		// Token: 0x04000043 RID: 67
		public IntPtr FormatPtr;
	}
}
